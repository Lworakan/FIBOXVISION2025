2025-04-09 11:12:18,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:18,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:18,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:18,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:59,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:59,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:59,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:12:59,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:07,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:07,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:07,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:07,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:11,120:INFO:Initializing load_model()
2025-04-09 11:14:11,120:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor.pkl, platform=None, authentication=None, verbose=True)
2025-04-09 11:14:25,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:25,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:25,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:25,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:14:29,194:INFO:Initializing load_model()
2025-04-09 11:14:29,194:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor, platform=None, authentication=None, verbose=True)
2025-04-09 11:14:29,241:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:14:44,160:INFO:Initializing predict_model()
2025-04-09 11:14:44,160:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9713F9590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Frame', 'X_min', 'Y_min', 'X_max',
                                             'Y_max', 'Confidence',
                                             'Average_Depth_m', 'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Timestamp'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Timestamp'],
                                    transformer=TargetEncoder(cols=['Timestamp'],
                                                              handle_missing='return_nan'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 KNeighborsRegressor(n_jobs=-1, n_neighbors=2))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E96F55B100>)
2025-04-09 11:14:44,160:INFO:Checking exceptions
2025-04-09 11:14:44,160:INFO:Preloading libraries
2025-04-09 11:36:27,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:36:27,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:36:27,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:36:27,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:36:31,420:INFO:Initializing load_model()
2025-04-09 11:36:31,420:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor, platform=None, authentication=None, verbose=True)
2025-04-09 11:36:31,467:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:39:32,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:39:32,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:39:32,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:39:32,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:39:36,685:INFO:Initializing load_model()
2025-04-09 11:39:36,685:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:39:36,764:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:39:49,296:INFO:Initializing predict_model()
2025-04-09 11:39:49,296:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000267F775D050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000267F7B43CE0>)
2025-04-09 11:39:49,296:INFO:Checking exceptions
2025-04-09 11:39:49,296:INFO:Preloading libraries
2025-04-09 11:42:36,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:42:36,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:42:36,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:42:36,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:42:45,369:INFO:Initializing load_model()
2025-04-09 11:42:45,369:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:42:45,431:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:42:50,199:INFO:Initializing predict_model()
2025-04-09 11:42:50,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F88EE9B610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F88A1E4180>)
2025-04-09 11:42:50,199:INFO:Checking exceptions
2025-04-09 11:42:50,199:INFO:Preloading libraries
2025-04-09 11:42:50,203:INFO:Set up data.
2025-04-09 11:42:50,218:INFO:Set up index.
2025-04-09 11:44:04,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:44:04,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:44:04,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:44:04,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:44:10,001:INFO:Initializing load_model()
2025-04-09 11:44:10,001:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:44:10,063:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:44:17,449:INFO:Initializing predict_model()
2025-04-09 11:44:17,449:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020388802C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000203FE688B80>)
2025-04-09 11:44:17,449:INFO:Checking exceptions
2025-04-09 11:44:17,449:INFO:Preloading libraries
2025-04-09 11:44:17,449:INFO:Set up data.
2025-04-09 11:44:17,465:INFO:Set up index.
2025-04-09 11:45:36,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:45:36,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:45:36,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:45:36,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:45:41,741:INFO:Initializing load_model()
2025-04-09 11:45:41,741:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:45:41,819:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:47:33,201:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:47:33,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:47:33,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:47:33,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:47:38,029:INFO:Initializing load_model()
2025-04-09 11:47:38,029:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:47:38,076:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:47:43,047:INFO:Initializing predict_model()
2025-04-09 11:47:43,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000189F3999890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000189F3C87CE0>)
2025-04-09 11:47:43,047:INFO:Checking exceptions
2025-04-09 11:47:43,047:INFO:Preloading libraries
2025-04-09 11:47:43,047:INFO:Set up data.
2025-04-09 11:47:43,047:INFO:Set up index.
2025-04-09 11:49:12,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:49:12,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:49:12,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:49:12,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:49:16,609:INFO:Initializing load_model()
2025-04-09 11:49:16,609:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:49:16,671:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:51:18,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:51:18,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:51:18,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:51:18,028:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:51:23,051:INFO:Initializing load_model()
2025-04-09 11:51:23,051:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:51:23,138:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:51:34,285:INFO:Initializing predict_model()
2025-04-09 11:51:34,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D8AA29C790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D89FE27CE0>)
2025-04-09 11:51:34,285:INFO:Checking exceptions
2025-04-09 11:51:34,285:INFO:Preloading libraries
2025-04-09 11:51:34,285:INFO:Set up data.
2025-04-09 11:51:34,295:INFO:Set up index.
2025-04-09 11:52:43,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:52:43,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:52:43,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:52:43,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 11:52:47,183:INFO:Initializing load_model()
2025-04-09 11:52:47,183:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 11:52:47,246:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 11:53:19,400:INFO:Initializing predict_model()
2025-04-09 11:53:19,400:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7B3710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DF0347D80>)
2025-04-09 11:53:19,400:INFO:Checking exceptions
2025-04-09 11:53:19,400:INFO:Preloading libraries
2025-04-09 11:53:19,401:INFO:Set up data.
2025-04-09 11:53:19,407:INFO:Set up index.
2025-04-09 11:53:20,337:INFO:Initializing predict_model()
2025-04-09 11:53:20,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DEFFC92D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DF0347D80>)
2025-04-09 11:53:20,337:INFO:Checking exceptions
2025-04-09 11:53:20,337:INFO:Preloading libraries
2025-04-09 11:53:20,337:INFO:Set up data.
2025-04-09 11:53:20,337:INFO:Set up index.
2025-04-09 11:53:21,295:INFO:Initializing predict_model()
2025-04-09 11:53:21,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DF007DC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DF0347D80>)
2025-04-09 11:53:21,295:INFO:Checking exceptions
2025-04-09 11:53:21,295:INFO:Preloading libraries
2025-04-09 11:53:21,295:INFO:Set up data.
2025-04-09 11:53:21,295:INFO:Set up index.
2025-04-09 11:53:22,331:INFO:Initializing predict_model()
2025-04-09 11:53:22,331:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DEFF4E550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:22,331:INFO:Checking exceptions
2025-04-09 11:53:22,331:INFO:Preloading libraries
2025-04-09 11:53:22,331:INFO:Set up data.
2025-04-09 11:53:22,331:INFO:Set up index.
2025-04-09 11:53:23,288:INFO:Initializing predict_model()
2025-04-09 11:53:23,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5A0210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:23,288:INFO:Checking exceptions
2025-04-09 11:53:23,288:INFO:Preloading libraries
2025-04-09 11:53:23,288:INFO:Set up data.
2025-04-09 11:53:23,288:INFO:Set up index.
2025-04-09 11:53:24,308:INFO:Initializing predict_model()
2025-04-09 11:53:24,308:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DF007DC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:24,308:INFO:Checking exceptions
2025-04-09 11:53:24,308:INFO:Preloading libraries
2025-04-09 11:53:24,309:INFO:Set up data.
2025-04-09 11:53:24,316:INFO:Set up index.
2025-04-09 11:53:25,249:INFO:Initializing predict_model()
2025-04-09 11:53:25,264:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5D7E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:25,264:INFO:Checking exceptions
2025-04-09 11:53:25,264:INFO:Preloading libraries
2025-04-09 11:53:25,264:INFO:Set up data.
2025-04-09 11:53:25,268:INFO:Set up index.
2025-04-09 11:53:26,175:INFO:Initializing predict_model()
2025-04-09 11:53:26,175:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5D0410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:26,175:INFO:Checking exceptions
2025-04-09 11:53:26,175:INFO:Preloading libraries
2025-04-09 11:53:26,191:INFO:Set up data.
2025-04-09 11:53:26,191:INFO:Set up index.
2025-04-09 11:53:27,192:INFO:Initializing predict_model()
2025-04-09 11:53:27,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5A0210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:27,192:INFO:Checking exceptions
2025-04-09 11:53:27,192:INFO:Preloading libraries
2025-04-09 11:53:27,192:INFO:Set up data.
2025-04-09 11:53:27,192:INFO:Set up index.
2025-04-09 11:53:28,134:INFO:Initializing predict_model()
2025-04-09 11:53:28,134:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DF007DC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:28,134:INFO:Checking exceptions
2025-04-09 11:53:28,134:INFO:Preloading libraries
2025-04-09 11:53:28,134:INFO:Set up data.
2025-04-09 11:53:28,134:INFO:Set up index.
2025-04-09 11:53:29,120:INFO:Initializing predict_model()
2025-04-09 11:53:29,120:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7CC310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:29,120:INFO:Checking exceptions
2025-04-09 11:53:29,120:INFO:Preloading libraries
2025-04-09 11:53:29,121:INFO:Set up data.
2025-04-09 11:53:29,130:INFO:Set up index.
2025-04-09 11:53:30,227:INFO:Initializing predict_model()
2025-04-09 11:53:30,227:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7CC2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:30,227:INFO:Checking exceptions
2025-04-09 11:53:30,227:INFO:Preloading libraries
2025-04-09 11:53:30,227:INFO:Set up data.
2025-04-09 11:53:30,234:INFO:Set up index.
2025-04-09 11:53:31,282:INFO:Initializing predict_model()
2025-04-09 11:53:31,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5A0210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:31,289:INFO:Checking exceptions
2025-04-09 11:53:31,289:INFO:Preloading libraries
2025-04-09 11:53:31,289:INFO:Set up data.
2025-04-09 11:53:31,289:INFO:Set up index.
2025-04-09 11:53:32,328:INFO:Initializing predict_model()
2025-04-09 11:53:32,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7CF510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:32,328:INFO:Checking exceptions
2025-04-09 11:53:32,328:INFO:Preloading libraries
2025-04-09 11:53:32,328:INFO:Set up data.
2025-04-09 11:53:32,328:INFO:Set up index.
2025-04-09 11:53:33,270:INFO:Initializing predict_model()
2025-04-09 11:53:33,270:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DEFF48750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:33,270:INFO:Checking exceptions
2025-04-09 11:53:33,270:INFO:Preloading libraries
2025-04-09 11:53:33,270:INFO:Set up data.
2025-04-09 11:53:33,282:INFO:Set up index.
2025-04-09 11:53:34,298:INFO:Initializing predict_model()
2025-04-09 11:53:34,298:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DEFF58F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:34,298:INFO:Checking exceptions
2025-04-09 11:53:34,298:INFO:Preloading libraries
2025-04-09 11:53:34,298:INFO:Set up data.
2025-04-09 11:53:34,307:INFO:Set up index.
2025-04-09 11:53:35,249:INFO:Initializing predict_model()
2025-04-09 11:53:35,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7CF5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:35,249:INFO:Checking exceptions
2025-04-09 11:53:35,249:INFO:Preloading libraries
2025-04-09 11:53:35,249:INFO:Set up data.
2025-04-09 11:53:35,249:INFO:Set up index.
2025-04-09 11:53:36,192:INFO:Initializing predict_model()
2025-04-09 11:53:36,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7CE550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:36,192:INFO:Checking exceptions
2025-04-09 11:53:36,192:INFO:Preloading libraries
2025-04-09 11:53:36,192:INFO:Set up data.
2025-04-09 11:53:36,208:INFO:Set up index.
2025-04-09 11:53:37,205:INFO:Initializing predict_model()
2025-04-09 11:53:37,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5B3710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:37,212:INFO:Checking exceptions
2025-04-09 11:53:37,212:INFO:Preloading libraries
2025-04-09 11:53:37,212:INFO:Set up data.
2025-04-09 11:53:37,212:INFO:Set up index.
2025-04-09 11:53:38,153:INFO:Initializing predict_model()
2025-04-09 11:53:38,153:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB5D9C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:38,153:INFO:Checking exceptions
2025-04-09 11:53:38,153:INFO:Preloading libraries
2025-04-09 11:53:38,153:INFO:Set up data.
2025-04-09 11:53:38,153:INFO:Set up index.
2025-04-09 11:53:39,173:INFO:Initializing predict_model()
2025-04-09 11:53:39,173:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7C1BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:39,174:INFO:Checking exceptions
2025-04-09 11:53:39,174:INFO:Preloading libraries
2025-04-09 11:53:39,174:INFO:Set up data.
2025-04-09 11:53:39,178:INFO:Set up index.
2025-04-09 11:53:40,147:INFO:Initializing predict_model()
2025-04-09 11:53:40,147:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7B24D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:40,147:INFO:Checking exceptions
2025-04-09 11:53:40,147:INFO:Preloading libraries
2025-04-09 11:53:40,147:INFO:Set up data.
2025-04-09 11:53:40,147:INFO:Set up index.
2025-04-09 11:53:41,096:INFO:Initializing predict_model()
2025-04-09 11:53:41,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7D1910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:41,096:INFO:Checking exceptions
2025-04-09 11:53:41,096:INFO:Preloading libraries
2025-04-09 11:53:41,096:INFO:Set up data.
2025-04-09 11:53:41,096:INFO:Set up index.
2025-04-09 11:53:42,097:INFO:Initializing predict_model()
2025-04-09 11:53:42,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7D2650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:42,097:INFO:Checking exceptions
2025-04-09 11:53:42,097:INFO:Preloading libraries
2025-04-09 11:53:42,097:INFO:Set up data.
2025-04-09 11:53:42,108:INFO:Set up index.
2025-04-09 11:53:43,050:INFO:Initializing predict_model()
2025-04-09 11:53:43,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7C2DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:43,050:INFO:Checking exceptions
2025-04-09 11:53:43,050:INFO:Preloading libraries
2025-04-09 11:53:43,050:INFO:Set up data.
2025-04-09 11:53:43,050:INFO:Set up index.
2025-04-09 11:53:44,080:INFO:Initializing predict_model()
2025-04-09 11:53:44,080:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7B2410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:44,080:INFO:Checking exceptions
2025-04-09 11:53:44,080:INFO:Preloading libraries
2025-04-09 11:53:44,080:INFO:Set up data.
2025-04-09 11:53:44,090:INFO:Set up index.
2025-04-09 11:53:45,041:INFO:Initializing predict_model()
2025-04-09 11:53:45,041:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7C2D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:45,041:INFO:Checking exceptions
2025-04-09 11:53:45,041:INFO:Preloading libraries
2025-04-09 11:53:45,041:INFO:Set up data.
2025-04-09 11:53:45,041:INFO:Set up index.
2025-04-09 11:53:52,196:INFO:Initializing predict_model()
2025-04-09 11:53:52,196:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7DE390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB76DB20>)
2025-04-09 11:53:52,196:INFO:Checking exceptions
2025-04-09 11:53:52,196:INFO:Preloading libraries
2025-04-09 11:53:52,197:INFO:Set up data.
2025-04-09 11:53:52,203:INFO:Set up index.
2025-04-09 11:53:53,246:INFO:Initializing predict_model()
2025-04-09 11:53:53,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024DFB7B2850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024DFB78F240>)
2025-04-09 11:53:53,246:INFO:Checking exceptions
2025-04-09 11:53:53,246:INFO:Preloading libraries
2025-04-09 11:53:53,246:INFO:Set up data.
2025-04-09 11:53:53,262:INFO:Set up index.
2025-04-09 12:59:12,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 12:59:12,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 12:59:12,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 12:59:12,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:01:53,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:01:53,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:01:53,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:01:53,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:02:30,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:02:30,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:02:30,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:02:30,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:08,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:08,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:08,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:08,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:44,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:44,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:44,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:44,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:03:51,774:INFO:Initializing load_model()
2025-04-09 13:03:51,774:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:03:51,899:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:04:10,867:INFO:Initializing predict_model()
2025-04-09 13:04:10,867:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002254B354490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002253FFFCE00>)
2025-04-09 13:04:10,867:INFO:Checking exceptions
2025-04-09 13:04:10,867:INFO:Preloading libraries
2025-04-09 13:04:10,874:INFO:Set up data.
2025-04-09 13:04:10,889:INFO:Set up index.
2025-04-09 13:04:16,176:INFO:Initializing predict_model()
2025-04-09 13:04:16,176:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002254B108A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002254B4E9D00>)
2025-04-09 13:04:16,176:INFO:Checking exceptions
2025-04-09 13:04:16,176:INFO:Preloading libraries
2025-04-09 13:04:16,176:INFO:Set up data.
2025-04-09 13:04:16,176:INFO:Set up index.
2025-04-09 13:04:23,040:INFO:Initializing predict_model()
2025-04-09 13:04:23,040:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000225494C8FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002253FFE2F20>)
2025-04-09 13:04:23,040:INFO:Checking exceptions
2025-04-09 13:04:23,040:INFO:Preloading libraries
2025-04-09 13:04:23,040:INFO:Set up data.
2025-04-09 13:04:23,056:INFO:Set up index.
2025-04-09 13:05:43,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:05:43,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:05:43,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:05:43,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:05:48,420:INFO:Initializing load_model()
2025-04-09 13:05:48,420:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:05:48,529:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:06:28,760:INFO:Initializing predict_model()
2025-04-09 13:06:28,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED2C10E590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED2C4ECE00>)
2025-04-09 13:06:28,760:INFO:Checking exceptions
2025-04-09 13:06:28,760:INFO:Preloading libraries
2025-04-09 13:06:28,760:INFO:Set up data.
2025-04-09 13:06:28,776:INFO:Set up index.
2025-04-09 13:06:31,896:INFO:Initializing predict_model()
2025-04-09 13:06:31,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED36196310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED37939D00>)
2025-04-09 13:06:31,896:INFO:Checking exceptions
2025-04-09 13:06:31,896:INFO:Preloading libraries
2025-04-09 13:06:31,896:INFO:Set up data.
2025-04-09 13:06:31,912:INFO:Set up index.
2025-04-09 13:06:36,872:INFO:Initializing predict_model()
2025-04-09 13:06:36,873:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED2C237C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED37963560>)
2025-04-09 13:06:36,874:INFO:Checking exceptions
2025-04-09 13:06:36,875:INFO:Preloading libraries
2025-04-09 13:06:36,876:INFO:Set up data.
2025-04-09 13:06:36,894:INFO:Set up index.
2025-04-09 13:08:02,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:08:02,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:08:02,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:08:02,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:08:09,819:INFO:Initializing load_model()
2025-04-09 13:08:09,819:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:08:09,908:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:08:32,200:INFO:Initializing predict_model()
2025-04-09 13:08:32,200:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB0E3BEB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB0307BE20>)
2025-04-09 13:08:32,200:INFO:Checking exceptions
2025-04-09 13:08:32,200:INFO:Preloading libraries
2025-04-09 13:08:32,200:INFO:Set up data.
2025-04-09 13:08:32,229:INFO:Set up index.
2025-04-09 13:08:42,055:INFO:Initializing predict_model()
2025-04-09 13:08:42,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB0E3AF850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB0C4EF420>)
2025-04-09 13:08:42,056:INFO:Checking exceptions
2025-04-09 13:08:42,056:INFO:Preloading libraries
2025-04-09 13:08:42,057:INFO:Set up data.
2025-04-09 13:08:42,070:INFO:Set up index.
2025-04-09 13:08:44,670:INFO:Initializing predict_model()
2025-04-09 13:08:44,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB02D4D310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB0C4EF420>)
2025-04-09 13:08:44,671:INFO:Checking exceptions
2025-04-09 13:08:44,671:INFO:Preloading libraries
2025-04-09 13:08:44,672:INFO:Set up data.
2025-04-09 13:08:44,680:INFO:Set up index.
2025-04-09 13:08:47,164:INFO:Initializing predict_model()
2025-04-09 13:08:47,164:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB02FDD690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB0307BE20>)
2025-04-09 13:08:47,164:INFO:Checking exceptions
2025-04-09 13:08:47,164:INFO:Preloading libraries
2025-04-09 13:08:47,170:INFO:Set up data.
2025-04-09 13:08:47,192:INFO:Set up index.
2025-04-09 13:08:50,061:INFO:Initializing predict_model()
2025-04-09 13:08:50,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB02EF8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BB0C4EF420>)
2025-04-09 13:08:50,061:INFO:Checking exceptions
2025-04-09 13:08:50,061:INFO:Preloading libraries
2025-04-09 13:08:50,061:INFO:Set up data.
2025-04-09 13:08:50,082:INFO:Set up index.
2025-04-09 13:49:35,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:49:35,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:49:35,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:49:35,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:21,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:21,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:21,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:21,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:59,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:59,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:59,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:50:59,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:51:06,671:INFO:Initializing load_model()
2025-04-09 13:51:06,671:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:51:06,734:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:51:46,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:51:46,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:51:46,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:51:46,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:51:53,314:INFO:Initializing load_model()
2025-04-09 13:51:53,314:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:51:53,361:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:51:57,651:INFO:Initializing predict_model()
2025-04-09 13:51:57,654:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB67023E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:51:57,654:INFO:Checking exceptions
2025-04-09 13:51:57,654:INFO:Preloading libraries
2025-04-09 13:51:57,656:INFO:Set up data.
2025-04-09 13:51:57,667:INFO:Set up index.
2025-04-09 13:51:58,418:INFO:Initializing predict_model()
2025-04-09 13:51:58,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB717405D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:51:58,418:INFO:Checking exceptions
2025-04-09 13:51:58,418:INFO:Preloading libraries
2025-04-09 13:51:58,418:INFO:Set up data.
2025-04-09 13:51:58,418:INFO:Set up index.
2025-04-09 13:51:59,081:INFO:Initializing predict_model()
2025-04-09 13:51:59,081:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB66DBBDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:51:59,081:INFO:Checking exceptions
2025-04-09 13:51:59,081:INFO:Preloading libraries
2025-04-09 13:51:59,087:INFO:Set up data.
2025-04-09 13:51:59,089:INFO:Set up index.
2025-04-09 13:51:59,754:INFO:Initializing predict_model()
2025-04-09 13:51:59,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB67316090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:51:59,754:INFO:Checking exceptions
2025-04-09 13:51:59,754:INFO:Preloading libraries
2025-04-09 13:51:59,754:INFO:Set up data.
2025-04-09 13:51:59,754:INFO:Set up index.
2025-04-09 13:52:00,434:INFO:Initializing predict_model()
2025-04-09 13:52:00,434:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB671DE590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:00,434:INFO:Checking exceptions
2025-04-09 13:52:00,434:INFO:Preloading libraries
2025-04-09 13:52:00,434:INFO:Set up data.
2025-04-09 13:52:00,434:INFO:Set up index.
2025-04-09 13:52:01,048:INFO:Initializing predict_model()
2025-04-09 13:52:01,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7152DF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:01,048:INFO:Checking exceptions
2025-04-09 13:52:01,048:INFO:Preloading libraries
2025-04-09 13:52:01,048:INFO:Set up data.
2025-04-09 13:52:01,048:INFO:Set up index.
2025-04-09 13:52:01,698:INFO:Initializing predict_model()
2025-04-09 13:52:01,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71756A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:01,698:INFO:Checking exceptions
2025-04-09 13:52:01,698:INFO:Preloading libraries
2025-04-09 13:52:01,698:INFO:Set up data.
2025-04-09 13:52:01,704:INFO:Set up index.
2025-04-09 13:52:02,329:INFO:Initializing predict_model()
2025-04-09 13:52:02,329:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7184DD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:02,329:INFO:Checking exceptions
2025-04-09 13:52:02,329:INFO:Preloading libraries
2025-04-09 13:52:02,329:INFO:Set up data.
2025-04-09 13:52:02,329:INFO:Set up index.
2025-04-09 13:52:02,957:INFO:Initializing predict_model()
2025-04-09 13:52:02,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB6722A810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:02,957:INFO:Checking exceptions
2025-04-09 13:52:02,957:INFO:Preloading libraries
2025-04-09 13:52:02,957:INFO:Set up data.
2025-04-09 13:52:02,957:INFO:Set up index.
2025-04-09 13:52:03,584:INFO:Initializing predict_model()
2025-04-09 13:52:03,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7184FF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:03,584:INFO:Checking exceptions
2025-04-09 13:52:03,584:INFO:Preloading libraries
2025-04-09 13:52:03,584:INFO:Set up data.
2025-04-09 13:52:03,584:INFO:Set up index.
2025-04-09 13:52:04,224:INFO:Initializing predict_model()
2025-04-09 13:52:04,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB66FDF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:04,224:INFO:Checking exceptions
2025-04-09 13:52:04,224:INFO:Preloading libraries
2025-04-09 13:52:04,224:INFO:Set up data.
2025-04-09 13:52:04,228:INFO:Set up index.
2025-04-09 13:52:04,821:INFO:Initializing predict_model()
2025-04-09 13:52:04,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB67013CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:04,821:INFO:Checking exceptions
2025-04-09 13:52:04,821:INFO:Preloading libraries
2025-04-09 13:52:04,821:INFO:Set up data.
2025-04-09 13:52:04,821:INFO:Set up index.
2025-04-09 13:52:05,433:INFO:Initializing predict_model()
2025-04-09 13:52:05,433:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71766810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:05,433:INFO:Checking exceptions
2025-04-09 13:52:05,433:INFO:Preloading libraries
2025-04-09 13:52:05,433:INFO:Set up data.
2025-04-09 13:52:05,449:INFO:Set up index.
2025-04-09 13:52:06,104:INFO:Initializing predict_model()
2025-04-09 13:52:06,104:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71118C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:52:06,104:INFO:Checking exceptions
2025-04-09 13:52:06,104:INFO:Preloading libraries
2025-04-09 13:52:06,105:INFO:Set up data.
2025-04-09 13:52:06,108:INFO:Set up index.
2025-04-09 13:52:06,737:INFO:Initializing predict_model()
2025-04-09 13:52:06,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71766810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:06,765:INFO:Checking exceptions
2025-04-09 13:52:06,765:INFO:Preloading libraries
2025-04-09 13:52:06,765:INFO:Set up data.
2025-04-09 13:52:06,765:INFO:Set up index.
2025-04-09 13:52:07,377:INFO:Initializing predict_model()
2025-04-09 13:52:07,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719528D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:07,377:INFO:Checking exceptions
2025-04-09 13:52:07,377:INFO:Preloading libraries
2025-04-09 13:52:07,377:INFO:Set up data.
2025-04-09 13:52:07,377:INFO:Set up index.
2025-04-09 13:52:08,028:INFO:Initializing predict_model()
2025-04-09 13:52:08,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB710DFFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:08,028:INFO:Checking exceptions
2025-04-09 13:52:08,030:INFO:Preloading libraries
2025-04-09 13:52:08,030:INFO:Set up data.
2025-04-09 13:52:08,034:INFO:Set up index.
2025-04-09 13:52:08,680:INFO:Initializing predict_model()
2025-04-09 13:52:08,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719528D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:08,680:INFO:Checking exceptions
2025-04-09 13:52:08,680:INFO:Preloading libraries
2025-04-09 13:52:08,680:INFO:Set up data.
2025-04-09 13:52:08,680:INFO:Set up index.
2025-04-09 13:52:09,302:INFO:Initializing predict_model()
2025-04-09 13:52:09,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7193F9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:09,302:INFO:Checking exceptions
2025-04-09 13:52:09,302:INFO:Preloading libraries
2025-04-09 13:52:09,303:INFO:Set up data.
2025-04-09 13:52:09,303:INFO:Set up index.
2025-04-09 13:52:09,936:INFO:Initializing predict_model()
2025-04-09 13:52:09,936:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71766350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:09,936:INFO:Checking exceptions
2025-04-09 13:52:09,936:INFO:Preloading libraries
2025-04-09 13:52:09,936:INFO:Set up data.
2025-04-09 13:52:09,936:INFO:Set up index.
2025-04-09 13:52:10,591:INFO:Initializing predict_model()
2025-04-09 13:52:10,591:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195EDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:10,592:INFO:Checking exceptions
2025-04-09 13:52:10,592:INFO:Preloading libraries
2025-04-09 13:52:10,593:INFO:Set up data.
2025-04-09 13:52:10,597:INFO:Set up index.
2025-04-09 13:52:11,235:INFO:Initializing predict_model()
2025-04-09 13:52:11,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7193F810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:11,235:INFO:Checking exceptions
2025-04-09 13:52:11,235:INFO:Preloading libraries
2025-04-09 13:52:11,235:INFO:Set up data.
2025-04-09 13:52:11,235:INFO:Set up index.
2025-04-09 13:52:11,847:INFO:Initializing predict_model()
2025-04-09 13:52:11,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719533D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:11,847:INFO:Checking exceptions
2025-04-09 13:52:11,847:INFO:Preloading libraries
2025-04-09 13:52:11,847:INFO:Set up data.
2025-04-09 13:52:11,847:INFO:Set up index.
2025-04-09 13:52:12,477:INFO:Initializing predict_model()
2025-04-09 13:52:12,477:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71766350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:12,477:INFO:Checking exceptions
2025-04-09 13:52:12,477:INFO:Preloading libraries
2025-04-09 13:52:12,477:INFO:Set up data.
2025-04-09 13:52:12,477:INFO:Set up index.
2025-04-09 13:52:13,133:INFO:Initializing predict_model()
2025-04-09 13:52:13,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71757F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:13,133:INFO:Checking exceptions
2025-04-09 13:52:13,133:INFO:Preloading libraries
2025-04-09 13:52:13,133:INFO:Set up data.
2025-04-09 13:52:13,133:INFO:Set up index.
2025-04-09 13:52:13,792:INFO:Initializing predict_model()
2025-04-09 13:52:13,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7193D0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:13,792:INFO:Checking exceptions
2025-04-09 13:52:13,792:INFO:Preloading libraries
2025-04-09 13:52:13,792:INFO:Set up data.
2025-04-09 13:52:13,792:INFO:Set up index.
2025-04-09 13:52:14,420:INFO:Initializing predict_model()
2025-04-09 13:52:14,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7193F390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:14,420:INFO:Checking exceptions
2025-04-09 13:52:14,420:INFO:Preloading libraries
2025-04-09 13:52:14,420:INFO:Set up data.
2025-04-09 13:52:14,420:INFO:Set up index.
2025-04-09 13:52:15,031:INFO:Initializing predict_model()
2025-04-09 13:52:15,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196A8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:15,031:INFO:Checking exceptions
2025-04-09 13:52:15,031:INFO:Preloading libraries
2025-04-09 13:52:15,031:INFO:Set up data.
2025-04-09 13:52:15,031:INFO:Set up index.
2025-04-09 13:52:15,704:INFO:Initializing predict_model()
2025-04-09 13:52:15,704:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195E190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:15,704:INFO:Checking exceptions
2025-04-09 13:52:15,704:INFO:Preloading libraries
2025-04-09 13:52:15,705:INFO:Set up data.
2025-04-09 13:52:15,708:INFO:Set up index.
2025-04-09 13:52:16,346:INFO:Initializing predict_model()
2025-04-09 13:52:16,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7184DDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:16,346:INFO:Checking exceptions
2025-04-09 13:52:16,346:INFO:Preloading libraries
2025-04-09 13:52:16,346:INFO:Set up data.
2025-04-09 13:52:16,346:INFO:Set up index.
2025-04-09 13:52:17,021:INFO:Initializing predict_model()
2025-04-09 13:52:17,021:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196D550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:17,021:INFO:Checking exceptions
2025-04-09 13:52:17,021:INFO:Preloading libraries
2025-04-09 13:52:17,021:INFO:Set up data.
2025-04-09 13:52:17,021:INFO:Set up index.
2025-04-09 13:52:17,695:INFO:Initializing predict_model()
2025-04-09 13:52:17,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB66FE9210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:17,695:INFO:Checking exceptions
2025-04-09 13:52:17,695:INFO:Preloading libraries
2025-04-09 13:52:17,695:INFO:Set up data.
2025-04-09 13:52:17,700:INFO:Set up index.
2025-04-09 13:52:18,374:INFO:Initializing predict_model()
2025-04-09 13:52:18,374:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195D010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:18,374:INFO:Checking exceptions
2025-04-09 13:52:18,374:INFO:Preloading libraries
2025-04-09 13:52:18,374:INFO:Set up data.
2025-04-09 13:52:18,374:INFO:Set up index.
2025-04-09 13:52:18,983:INFO:Initializing predict_model()
2025-04-09 13:52:18,983:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195FAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:18,983:INFO:Checking exceptions
2025-04-09 13:52:18,983:INFO:Preloading libraries
2025-04-09 13:52:18,983:INFO:Set up data.
2025-04-09 13:52:18,983:INFO:Set up index.
2025-04-09 13:52:19,612:INFO:Initializing predict_model()
2025-04-09 13:52:19,612:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196C4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:19,612:INFO:Checking exceptions
2025-04-09 13:52:19,612:INFO:Preloading libraries
2025-04-09 13:52:19,612:INFO:Set up data.
2025-04-09 13:52:19,612:INFO:Set up index.
2025-04-09 13:52:20,283:INFO:Initializing predict_model()
2025-04-09 13:52:20,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196F550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:20,283:INFO:Checking exceptions
2025-04-09 13:52:20,283:INFO:Preloading libraries
2025-04-09 13:52:20,283:INFO:Set up data.
2025-04-09 13:52:20,283:INFO:Set up index.
2025-04-09 13:52:20,896:INFO:Initializing predict_model()
2025-04-09 13:52:20,902:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196E410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:20,902:INFO:Checking exceptions
2025-04-09 13:52:20,902:INFO:Preloading libraries
2025-04-09 13:52:20,903:INFO:Set up data.
2025-04-09 13:52:20,903:INFO:Set up index.
2025-04-09 13:52:21,536:INFO:Initializing predict_model()
2025-04-09 13:52:21,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB67023E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:21,536:INFO:Checking exceptions
2025-04-09 13:52:21,536:INFO:Preloading libraries
2025-04-09 13:52:21,536:INFO:Set up data.
2025-04-09 13:52:21,536:INFO:Set up index.
2025-04-09 13:52:22,178:INFO:Initializing predict_model()
2025-04-09 13:52:22,178:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71953FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:22,178:INFO:Checking exceptions
2025-04-09 13:52:22,178:INFO:Preloading libraries
2025-04-09 13:52:22,178:INFO:Set up data.
2025-04-09 13:52:22,178:INFO:Set up index.
2025-04-09 13:52:22,839:INFO:Initializing predict_model()
2025-04-09 13:52:22,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196B590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:22,839:INFO:Checking exceptions
2025-04-09 13:52:22,839:INFO:Preloading libraries
2025-04-09 13:52:22,839:INFO:Set up data.
2025-04-09 13:52:22,839:INFO:Set up index.
2025-04-09 13:52:23,424:INFO:Initializing predict_model()
2025-04-09 13:52:23,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719711D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:23,424:INFO:Checking exceptions
2025-04-09 13:52:23,424:INFO:Preloading libraries
2025-04-09 13:52:23,424:INFO:Set up data.
2025-04-09 13:52:23,424:INFO:Set up index.
2025-04-09 13:52:24,033:INFO:Initializing predict_model()
2025-04-09 13:52:24,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196AE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:24,033:INFO:Checking exceptions
2025-04-09 13:52:24,033:INFO:Preloading libraries
2025-04-09 13:52:24,033:INFO:Set up data.
2025-04-09 13:52:24,033:INFO:Set up index.
2025-04-09 13:52:24,700:INFO:Initializing predict_model()
2025-04-09 13:52:24,700:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71970110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:24,700:INFO:Checking exceptions
2025-04-09 13:52:24,700:INFO:Preloading libraries
2025-04-09 13:52:24,700:INFO:Set up data.
2025-04-09 13:52:24,707:INFO:Set up index.
2025-04-09 13:52:25,330:INFO:Initializing predict_model()
2025-04-09 13:52:25,330:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:25,330:INFO:Checking exceptions
2025-04-09 13:52:25,330:INFO:Preloading libraries
2025-04-09 13:52:25,330:INFO:Set up data.
2025-04-09 13:52:25,338:INFO:Set up index.
2025-04-09 13:52:25,969:INFO:Initializing predict_model()
2025-04-09 13:52:25,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71972C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:25,969:INFO:Checking exceptions
2025-04-09 13:52:25,969:INFO:Preloading libraries
2025-04-09 13:52:25,971:INFO:Set up data.
2025-04-09 13:52:25,971:INFO:Set up index.
2025-04-09 13:52:26,598:INFO:Initializing predict_model()
2025-04-09 13:52:26,613:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71953650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:26,613:INFO:Checking exceptions
2025-04-09 13:52:26,613:INFO:Preloading libraries
2025-04-09 13:52:26,613:INFO:Set up data.
2025-04-09 13:52:26,613:INFO:Set up index.
2025-04-09 13:52:27,309:INFO:Initializing predict_model()
2025-04-09 13:52:27,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196ECD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:27,309:INFO:Checking exceptions
2025-04-09 13:52:27,309:INFO:Preloading libraries
2025-04-09 13:52:27,309:INFO:Set up data.
2025-04-09 13:52:27,319:INFO:Set up index.
2025-04-09 13:52:27,986:INFO:Initializing predict_model()
2025-04-09 13:52:27,986:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195CF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:27,986:INFO:Checking exceptions
2025-04-09 13:52:27,986:INFO:Preloading libraries
2025-04-09 13:52:27,986:INFO:Set up data.
2025-04-09 13:52:27,986:INFO:Set up index.
2025-04-09 13:52:28,598:INFO:Initializing predict_model()
2025-04-09 13:52:28,598:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195F710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:28,598:INFO:Checking exceptions
2025-04-09 13:52:28,614:INFO:Preloading libraries
2025-04-09 13:52:28,614:INFO:Set up data.
2025-04-09 13:52:28,614:INFO:Set up index.
2025-04-09 13:52:29,241:INFO:Initializing predict_model()
2025-04-09 13:52:29,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195E850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:29,241:INFO:Checking exceptions
2025-04-09 13:52:29,241:INFO:Preloading libraries
2025-04-09 13:52:29,242:INFO:Set up data.
2025-04-09 13:52:29,244:INFO:Set up index.
2025-04-09 13:52:29,854:INFO:Initializing predict_model()
2025-04-09 13:52:29,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71953690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:29,854:INFO:Checking exceptions
2025-04-09 13:52:29,854:INFO:Preloading libraries
2025-04-09 13:52:29,854:INFO:Set up data.
2025-04-09 13:52:29,870:INFO:Set up index.
2025-04-09 13:52:30,518:INFO:Initializing predict_model()
2025-04-09 13:52:30,518:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195D9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:30,518:INFO:Checking exceptions
2025-04-09 13:52:30,518:INFO:Preloading libraries
2025-04-09 13:52:30,518:INFO:Set up data.
2025-04-09 13:52:30,518:INFO:Set up index.
2025-04-09 13:52:31,152:INFO:Initializing predict_model()
2025-04-09 13:52:31,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71952810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:31,152:INFO:Checking exceptions
2025-04-09 13:52:31,152:INFO:Preloading libraries
2025-04-09 13:52:31,152:INFO:Set up data.
2025-04-09 13:52:31,152:INFO:Set up index.
2025-04-09 13:52:31,802:INFO:Initializing predict_model()
2025-04-09 13:52:31,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:31,802:INFO:Checking exceptions
2025-04-09 13:52:31,802:INFO:Preloading libraries
2025-04-09 13:52:31,805:INFO:Set up data.
2025-04-09 13:52:31,805:INFO:Set up index.
2025-04-09 13:52:32,475:INFO:Initializing predict_model()
2025-04-09 13:52:32,475:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71971890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:32,475:INFO:Checking exceptions
2025-04-09 13:52:32,475:INFO:Preloading libraries
2025-04-09 13:52:32,475:INFO:Set up data.
2025-04-09 13:52:32,475:INFO:Set up index.
2025-04-09 13:52:33,088:INFO:Initializing predict_model()
2025-04-09 13:52:33,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7193E9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:33,088:INFO:Checking exceptions
2025-04-09 13:52:33,088:INFO:Preloading libraries
2025-04-09 13:52:33,088:INFO:Set up data.
2025-04-09 13:52:33,092:INFO:Set up index.
2025-04-09 13:52:33,743:INFO:Initializing predict_model()
2025-04-09 13:52:33,743:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB66DCC210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:33,743:INFO:Checking exceptions
2025-04-09 13:52:33,743:INFO:Preloading libraries
2025-04-09 13:52:33,743:INFO:Set up data.
2025-04-09 13:52:33,751:INFO:Set up index.
2025-04-09 13:52:34,419:INFO:Initializing predict_model()
2025-04-09 13:52:34,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71757190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:34,419:INFO:Checking exceptions
2025-04-09 13:52:34,419:INFO:Preloading libraries
2025-04-09 13:52:34,419:INFO:Set up data.
2025-04-09 13:52:34,419:INFO:Set up index.
2025-04-09 13:52:35,093:INFO:Initializing predict_model()
2025-04-09 13:52:35,093:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71767B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:35,093:INFO:Checking exceptions
2025-04-09 13:52:35,093:INFO:Preloading libraries
2025-04-09 13:52:35,094:INFO:Set up data.
2025-04-09 13:52:35,096:INFO:Set up index.
2025-04-09 13:52:35,809:INFO:Initializing predict_model()
2025-04-09 13:52:35,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195DE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:35,809:INFO:Checking exceptions
2025-04-09 13:52:35,810:INFO:Preloading libraries
2025-04-09 13:52:35,811:INFO:Set up data.
2025-04-09 13:52:35,816:INFO:Set up index.
2025-04-09 13:52:36,474:INFO:Initializing predict_model()
2025-04-09 13:52:36,474:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195E590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:36,474:INFO:Checking exceptions
2025-04-09 13:52:36,474:INFO:Preloading libraries
2025-04-09 13:52:36,474:INFO:Set up data.
2025-04-09 13:52:36,474:INFO:Set up index.
2025-04-09 13:52:37,072:INFO:Initializing predict_model()
2025-04-09 13:52:37,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196C350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:37,072:INFO:Checking exceptions
2025-04-09 13:52:37,072:INFO:Preloading libraries
2025-04-09 13:52:37,072:INFO:Set up data.
2025-04-09 13:52:37,072:INFO:Set up index.
2025-04-09 13:52:37,669:INFO:Initializing predict_model()
2025-04-09 13:52:37,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:37,669:INFO:Checking exceptions
2025-04-09 13:52:37,669:INFO:Preloading libraries
2025-04-09 13:52:37,669:INFO:Set up data.
2025-04-09 13:52:37,669:INFO:Set up index.
2025-04-09 13:52:38,306:INFO:Initializing predict_model()
2025-04-09 13:52:38,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71970110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:38,306:INFO:Checking exceptions
2025-04-09 13:52:38,306:INFO:Preloading libraries
2025-04-09 13:52:38,306:INFO:Set up data.
2025-04-09 13:52:38,310:INFO:Set up index.
2025-04-09 13:52:38,901:INFO:Initializing predict_model()
2025-04-09 13:52:38,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196B610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:38,901:INFO:Checking exceptions
2025-04-09 13:52:38,901:INFO:Preloading libraries
2025-04-09 13:52:38,901:INFO:Set up data.
2025-04-09 13:52:38,901:INFO:Set up index.
2025-04-09 13:52:39,485:INFO:Initializing predict_model()
2025-04-09 13:52:39,485:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71952410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:39,485:INFO:Checking exceptions
2025-04-09 13:52:39,485:INFO:Preloading libraries
2025-04-09 13:52:39,485:INFO:Set up data.
2025-04-09 13:52:39,490:INFO:Set up index.
2025-04-09 13:52:40,082:INFO:Initializing predict_model()
2025-04-09 13:52:40,082:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196C910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:40,082:INFO:Checking exceptions
2025-04-09 13:52:40,082:INFO:Preloading libraries
2025-04-09 13:52:40,082:INFO:Set up data.
2025-04-09 13:52:40,082:INFO:Set up index.
2025-04-09 13:52:40,768:INFO:Initializing predict_model()
2025-04-09 13:52:40,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719513D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:40,770:INFO:Checking exceptions
2025-04-09 13:52:40,770:INFO:Preloading libraries
2025-04-09 13:52:40,770:INFO:Set up data.
2025-04-09 13:52:40,770:INFO:Set up index.
2025-04-09 13:52:41,367:INFO:Initializing predict_model()
2025-04-09 13:52:41,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71977150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:41,367:INFO:Checking exceptions
2025-04-09 13:52:41,367:INFO:Preloading libraries
2025-04-09 13:52:41,367:INFO:Set up data.
2025-04-09 13:52:41,367:INFO:Set up index.
2025-04-09 13:52:41,965:INFO:Initializing predict_model()
2025-04-09 13:52:41,965:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719761D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:41,965:INFO:Checking exceptions
2025-04-09 13:52:41,965:INFO:Preloading libraries
2025-04-09 13:52:41,965:INFO:Set up data.
2025-04-09 13:52:41,965:INFO:Set up index.
2025-04-09 13:52:42,576:INFO:Initializing predict_model()
2025-04-09 13:52:42,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71971450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:42,576:INFO:Checking exceptions
2025-04-09 13:52:42,576:INFO:Preloading libraries
2025-04-09 13:52:42,576:INFO:Set up data.
2025-04-09 13:52:42,576:INFO:Set up index.
2025-04-09 13:52:43,218:INFO:Initializing predict_model()
2025-04-09 13:52:43,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71950990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:43,218:INFO:Checking exceptions
2025-04-09 13:52:43,218:INFO:Preloading libraries
2025-04-09 13:52:43,218:INFO:Set up data.
2025-04-09 13:52:43,218:INFO:Set up index.
2025-04-09 13:52:43,824:INFO:Initializing predict_model()
2025-04-09 13:52:43,824:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71975D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:43,824:INFO:Checking exceptions
2025-04-09 13:52:43,824:INFO:Preloading libraries
2025-04-09 13:52:43,824:INFO:Set up data.
2025-04-09 13:52:43,829:INFO:Set up index.
2025-04-09 13:52:44,426:INFO:Initializing predict_model()
2025-04-09 13:52:44,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71977610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:44,426:INFO:Checking exceptions
2025-04-09 13:52:44,426:INFO:Preloading libraries
2025-04-09 13:52:44,426:INFO:Set up data.
2025-04-09 13:52:44,426:INFO:Set up index.
2025-04-09 13:52:45,047:INFO:Initializing predict_model()
2025-04-09 13:52:45,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719518D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:45,047:INFO:Checking exceptions
2025-04-09 13:52:45,047:INFO:Preloading libraries
2025-04-09 13:52:45,048:INFO:Set up data.
2025-04-09 13:52:45,052:INFO:Set up index.
2025-04-09 13:52:45,664:INFO:Initializing predict_model()
2025-04-09 13:52:45,664:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71977A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:45,664:INFO:Checking exceptions
2025-04-09 13:52:45,664:INFO:Preloading libraries
2025-04-09 13:52:45,664:INFO:Set up data.
2025-04-09 13:52:45,664:INFO:Set up index.
2025-04-09 13:52:46,283:INFO:Initializing predict_model()
2025-04-09 13:52:46,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195EA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:46,309:INFO:Checking exceptions
2025-04-09 13:52:46,309:INFO:Preloading libraries
2025-04-09 13:52:46,309:INFO:Set up data.
2025-04-09 13:52:46,309:INFO:Set up index.
2025-04-09 13:52:46,887:INFO:Initializing predict_model()
2025-04-09 13:52:46,887:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71971210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:46,887:INFO:Checking exceptions
2025-04-09 13:52:46,887:INFO:Preloading libraries
2025-04-09 13:52:46,887:INFO:Set up data.
2025-04-09 13:52:46,887:INFO:Set up index.
2025-04-09 13:52:47,509:INFO:Initializing predict_model()
2025-04-09 13:52:47,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71978810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:47,509:INFO:Checking exceptions
2025-04-09 13:52:47,510:INFO:Preloading libraries
2025-04-09 13:52:47,510:INFO:Set up data.
2025-04-09 13:52:47,513:INFO:Set up index.
2025-04-09 13:52:48,166:INFO:Initializing predict_model()
2025-04-09 13:52:48,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71976A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:48,166:INFO:Checking exceptions
2025-04-09 13:52:48,166:INFO:Preloading libraries
2025-04-09 13:52:48,166:INFO:Set up data.
2025-04-09 13:52:48,173:INFO:Set up index.
2025-04-09 13:52:48,816:INFO:Initializing predict_model()
2025-04-09 13:52:48,816:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197B950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:48,816:INFO:Checking exceptions
2025-04-09 13:52:48,816:INFO:Preloading libraries
2025-04-09 13:52:48,816:INFO:Set up data.
2025-04-09 13:52:48,816:INFO:Set up index.
2025-04-09 13:52:49,412:INFO:Initializing predict_model()
2025-04-09 13:52:49,412:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197B990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:49,412:INFO:Checking exceptions
2025-04-09 13:52:49,412:INFO:Preloading libraries
2025-04-09 13:52:49,412:INFO:Set up data.
2025-04-09 13:52:49,428:INFO:Set up index.
2025-04-09 13:52:50,087:INFO:Initializing predict_model()
2025-04-09 13:52:50,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197BA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:50,087:INFO:Checking exceptions
2025-04-09 13:52:50,087:INFO:Preloading libraries
2025-04-09 13:52:50,087:INFO:Set up data.
2025-04-09 13:52:50,095:INFO:Set up index.
2025-04-09 13:52:50,662:INFO:Initializing predict_model()
2025-04-09 13:52:50,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71974250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:50,662:INFO:Checking exceptions
2025-04-09 13:52:50,662:INFO:Preloading libraries
2025-04-09 13:52:50,678:INFO:Set up data.
2025-04-09 13:52:50,678:INFO:Set up index.
2025-04-09 13:52:51,259:INFO:Initializing predict_model()
2025-04-09 13:52:51,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196D6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:51,259:INFO:Checking exceptions
2025-04-09 13:52:51,259:INFO:Preloading libraries
2025-04-09 13:52:51,259:INFO:Set up data.
2025-04-09 13:52:51,274:INFO:Set up index.
2025-04-09 13:52:51,898:INFO:Initializing predict_model()
2025-04-09 13:52:51,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71969ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:51,898:INFO:Checking exceptions
2025-04-09 13:52:51,899:INFO:Preloading libraries
2025-04-09 13:52:51,899:INFO:Set up data.
2025-04-09 13:52:51,902:INFO:Set up index.
2025-04-09 13:52:52,528:INFO:Initializing predict_model()
2025-04-09 13:52:52,528:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197ADD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:52,528:INFO:Checking exceptions
2025-04-09 13:52:52,528:INFO:Preloading libraries
2025-04-09 13:52:52,528:INFO:Set up data.
2025-04-09 13:52:52,528:INFO:Set up index.
2025-04-09 13:52:53,194:INFO:Initializing predict_model()
2025-04-09 13:52:53,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:53,194:INFO:Checking exceptions
2025-04-09 13:52:53,194:INFO:Preloading libraries
2025-04-09 13:52:53,194:INFO:Set up data.
2025-04-09 13:52:53,199:INFO:Set up index.
2025-04-09 13:52:53,848:INFO:Initializing predict_model()
2025-04-09 13:52:53,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71972350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:53,848:INFO:Checking exceptions
2025-04-09 13:52:53,848:INFO:Preloading libraries
2025-04-09 13:52:53,855:INFO:Set up data.
2025-04-09 13:52:53,855:INFO:Set up index.
2025-04-09 13:52:54,550:INFO:Initializing predict_model()
2025-04-09 13:52:54,551:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71974F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:54,551:INFO:Checking exceptions
2025-04-09 13:52:54,551:INFO:Preloading libraries
2025-04-09 13:52:54,551:INFO:Set up data.
2025-04-09 13:52:54,555:INFO:Set up index.
2025-04-09 13:52:55,166:INFO:Initializing predict_model()
2025-04-09 13:52:55,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:55,166:INFO:Checking exceptions
2025-04-09 13:52:55,166:INFO:Preloading libraries
2025-04-09 13:52:55,166:INFO:Set up data.
2025-04-09 13:52:55,182:INFO:Set up index.
2025-04-09 13:52:55,854:INFO:Initializing predict_model()
2025-04-09 13:52:55,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196D1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:55,854:INFO:Checking exceptions
2025-04-09 13:52:55,854:INFO:Preloading libraries
2025-04-09 13:52:55,854:INFO:Set up data.
2025-04-09 13:52:55,860:INFO:Set up index.
2025-04-09 13:52:56,515:INFO:Initializing predict_model()
2025-04-09 13:52:56,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71974F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:56,515:INFO:Checking exceptions
2025-04-09 13:52:56,515:INFO:Preloading libraries
2025-04-09 13:52:56,515:INFO:Set up data.
2025-04-09 13:52:56,520:INFO:Set up index.
2025-04-09 13:52:57,182:INFO:Initializing predict_model()
2025-04-09 13:52:57,202:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197B650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:57,202:INFO:Checking exceptions
2025-04-09 13:52:57,202:INFO:Preloading libraries
2025-04-09 13:52:57,202:INFO:Set up data.
2025-04-09 13:52:57,202:INFO:Set up index.
2025-04-09 13:52:57,800:INFO:Initializing predict_model()
2025-04-09 13:52:57,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71975E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB718F9B20>)
2025-04-09 13:52:57,800:INFO:Checking exceptions
2025-04-09 13:52:57,800:INFO:Preloading libraries
2025-04-09 13:52:57,800:INFO:Set up data.
2025-04-09 13:52:57,800:INFO:Set up index.
2025-04-09 13:52:58,429:INFO:Initializing predict_model()
2025-04-09 13:52:58,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB710DFFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:58,429:INFO:Checking exceptions
2025-04-09 13:52:58,429:INFO:Preloading libraries
2025-04-09 13:52:58,429:INFO:Set up data.
2025-04-09 13:52:58,429:INFO:Set up index.
2025-04-09 13:52:59,049:INFO:Initializing predict_model()
2025-04-09 13:52:59,049:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71972810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:59,049:INFO:Checking exceptions
2025-04-09 13:52:59,049:INFO:Preloading libraries
2025-04-09 13:52:59,049:INFO:Set up data.
2025-04-09 13:52:59,053:INFO:Set up index.
2025-04-09 13:52:59,675:INFO:Initializing predict_model()
2025-04-09 13:52:59,675:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7193EDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:52:59,675:INFO:Checking exceptions
2025-04-09 13:52:59,675:INFO:Preloading libraries
2025-04-09 13:52:59,675:INFO:Set up data.
2025-04-09 13:52:59,684:INFO:Set up index.
2025-04-09 13:53:00,302:INFO:Initializing predict_model()
2025-04-09 13:53:00,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71982B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:00,302:INFO:Checking exceptions
2025-04-09 13:53:00,302:INFO:Preloading libraries
2025-04-09 13:53:00,302:INFO:Set up data.
2025-04-09 13:53:00,306:INFO:Set up index.
2025-04-09 13:53:00,949:INFO:Initializing predict_model()
2025-04-09 13:53:00,949:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195F1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:00,950:INFO:Checking exceptions
2025-04-09 13:53:00,950:INFO:Preloading libraries
2025-04-09 13:53:00,950:INFO:Set up data.
2025-04-09 13:53:00,954:INFO:Set up index.
2025-04-09 13:53:01,633:INFO:Initializing predict_model()
2025-04-09 13:53:01,633:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195DE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:01,633:INFO:Checking exceptions
2025-04-09 13:53:01,633:INFO:Preloading libraries
2025-04-09 13:53:01,633:INFO:Set up data.
2025-04-09 13:53:01,633:INFO:Set up index.
2025-04-09 13:53:02,331:INFO:Initializing predict_model()
2025-04-09 13:53:02,331:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196A150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:02,331:INFO:Checking exceptions
2025-04-09 13:53:02,331:INFO:Preloading libraries
2025-04-09 13:53:02,331:INFO:Set up data.
2025-04-09 13:53:02,345:INFO:Set up index.
2025-04-09 13:53:02,975:INFO:Initializing predict_model()
2025-04-09 13:53:02,975:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71980490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:02,975:INFO:Checking exceptions
2025-04-09 13:53:02,975:INFO:Preloading libraries
2025-04-09 13:53:02,975:INFO:Set up data.
2025-04-09 13:53:02,975:INFO:Set up index.
2025-04-09 13:53:03,633:INFO:Initializing predict_model()
2025-04-09 13:53:03,633:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71971510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:03,633:INFO:Checking exceptions
2025-04-09 13:53:03,633:INFO:Preloading libraries
2025-04-09 13:53:03,634:INFO:Set up data.
2025-04-09 13:53:03,638:INFO:Set up index.
2025-04-09 13:53:04,353:INFO:Initializing predict_model()
2025-04-09 13:53:04,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71968C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:04,354:INFO:Checking exceptions
2025-04-09 13:53:04,354:INFO:Preloading libraries
2025-04-09 13:53:04,354:INFO:Set up data.
2025-04-09 13:53:04,357:INFO:Set up index.
2025-04-09 13:53:05,119:INFO:Initializing predict_model()
2025-04-09 13:53:05,119:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195ECD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:05,119:INFO:Checking exceptions
2025-04-09 13:53:05,119:INFO:Preloading libraries
2025-04-09 13:53:05,119:INFO:Set up data.
2025-04-09 13:53:05,126:INFO:Set up index.
2025-04-09 13:53:05,761:INFO:Initializing predict_model()
2025-04-09 13:53:05,762:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71951E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:05,762:INFO:Checking exceptions
2025-04-09 13:53:05,762:INFO:Preloading libraries
2025-04-09 13:53:05,763:INFO:Set up data.
2025-04-09 13:53:05,766:INFO:Set up index.
2025-04-09 13:53:06,466:INFO:Initializing predict_model()
2025-04-09 13:53:06,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719726D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:06,466:INFO:Checking exceptions
2025-04-09 13:53:06,466:INFO:Preloading libraries
2025-04-09 13:53:06,466:INFO:Set up data.
2025-04-09 13:53:06,474:INFO:Set up index.
2025-04-09 13:53:07,160:INFO:Initializing predict_model()
2025-04-09 13:53:07,160:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719752D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:07,160:INFO:Checking exceptions
2025-04-09 13:53:07,160:INFO:Preloading libraries
2025-04-09 13:53:07,162:INFO:Set up data.
2025-04-09 13:53:07,162:INFO:Set up index.
2025-04-09 13:53:07,804:INFO:Initializing predict_model()
2025-04-09 13:53:07,804:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71970210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:07,804:INFO:Checking exceptions
2025-04-09 13:53:07,804:INFO:Preloading libraries
2025-04-09 13:53:07,804:INFO:Set up data.
2025-04-09 13:53:07,804:INFO:Set up index.
2025-04-09 13:53:08,438:INFO:Initializing predict_model()
2025-04-09 13:53:08,438:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197BED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:08,438:INFO:Checking exceptions
2025-04-09 13:53:08,438:INFO:Preloading libraries
2025-04-09 13:53:08,439:INFO:Set up data.
2025-04-09 13:53:08,441:INFO:Set up index.
2025-04-09 13:53:09,042:INFO:Initializing predict_model()
2025-04-09 13:53:09,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71968C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:09,047:INFO:Checking exceptions
2025-04-09 13:53:09,047:INFO:Preloading libraries
2025-04-09 13:53:09,048:INFO:Set up data.
2025-04-09 13:53:09,050:INFO:Set up index.
2025-04-09 13:53:09,655:INFO:Initializing predict_model()
2025-04-09 13:53:09,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196FD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:09,655:INFO:Checking exceptions
2025-04-09 13:53:09,655:INFO:Preloading libraries
2025-04-09 13:53:09,655:INFO:Set up data.
2025-04-09 13:53:09,663:INFO:Set up index.
2025-04-09 13:53:10,275:INFO:Initializing predict_model()
2025-04-09 13:53:10,275:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71951290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:10,275:INFO:Checking exceptions
2025-04-09 13:53:10,275:INFO:Preloading libraries
2025-04-09 13:53:10,280:INFO:Set up data.
2025-04-09 13:53:10,284:INFO:Set up index.
2025-04-09 13:53:11,070:INFO:Initializing predict_model()
2025-04-09 13:53:11,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB719685D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:11,073:INFO:Checking exceptions
2025-04-09 13:53:11,073:INFO:Preloading libraries
2025-04-09 13:53:11,073:INFO:Set up data.
2025-04-09 13:53:11,073:INFO:Set up index.
2025-04-09 13:53:11,749:INFO:Initializing predict_model()
2025-04-09 13:53:11,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71970A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:11,749:INFO:Checking exceptions
2025-04-09 13:53:11,749:INFO:Preloading libraries
2025-04-09 13:53:11,749:INFO:Set up data.
2025-04-09 13:53:11,749:INFO:Set up index.
2025-04-09 13:53:12,390:INFO:Initializing predict_model()
2025-04-09 13:53:12,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196F450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:12,390:INFO:Checking exceptions
2025-04-09 13:53:12,390:INFO:Preloading libraries
2025-04-09 13:53:12,390:INFO:Set up data.
2025-04-09 13:53:12,390:INFO:Set up index.
2025-04-09 13:53:13,093:INFO:Initializing predict_model()
2025-04-09 13:53:13,094:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:13,094:INFO:Checking exceptions
2025-04-09 13:53:13,094:INFO:Preloading libraries
2025-04-09 13:53:13,094:INFO:Set up data.
2025-04-09 13:53:13,098:INFO:Set up index.
2025-04-09 13:53:13,705:INFO:Initializing predict_model()
2025-04-09 13:53:13,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71983BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:13,705:INFO:Checking exceptions
2025-04-09 13:53:13,705:INFO:Preloading libraries
2025-04-09 13:53:13,705:INFO:Set up data.
2025-04-09 13:53:13,708:INFO:Set up index.
2025-04-09 13:53:14,321:INFO:Initializing predict_model()
2025-04-09 13:53:14,321:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71968B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:14,321:INFO:Checking exceptions
2025-04-09 13:53:14,321:INFO:Preloading libraries
2025-04-09 13:53:14,321:INFO:Set up data.
2025-04-09 13:53:14,321:INFO:Set up index.
2025-04-09 13:53:14,960:INFO:Initializing predict_model()
2025-04-09 13:53:14,960:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195CC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:14,960:INFO:Checking exceptions
2025-04-09 13:53:14,960:INFO:Preloading libraries
2025-04-09 13:53:14,961:INFO:Set up data.
2025-04-09 13:53:14,965:INFO:Set up index.
2025-04-09 13:53:15,816:INFO:Initializing predict_model()
2025-04-09 13:53:15,816:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196D850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:15,816:INFO:Checking exceptions
2025-04-09 13:53:15,816:INFO:Preloading libraries
2025-04-09 13:53:15,816:INFO:Set up data.
2025-04-09 13:53:15,822:INFO:Set up index.
2025-04-09 13:53:16,467:INFO:Initializing predict_model()
2025-04-09 13:53:16,467:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71983F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:16,467:INFO:Checking exceptions
2025-04-09 13:53:16,467:INFO:Preloading libraries
2025-04-09 13:53:16,467:INFO:Set up data.
2025-04-09 13:53:16,477:INFO:Set up index.
2025-04-09 13:53:17,217:INFO:Initializing predict_model()
2025-04-09 13:53:17,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71981510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:17,217:INFO:Checking exceptions
2025-04-09 13:53:17,217:INFO:Preloading libraries
2025-04-09 13:53:17,217:INFO:Set up data.
2025-04-09 13:53:17,217:INFO:Set up index.
2025-04-09 13:53:17,963:INFO:Initializing predict_model()
2025-04-09 13:53:17,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71976F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:17,963:INFO:Checking exceptions
2025-04-09 13:53:17,963:INFO:Preloading libraries
2025-04-09 13:53:17,963:INFO:Set up data.
2025-04-09 13:53:17,968:INFO:Set up index.
2025-04-09 13:53:18,671:INFO:Initializing predict_model()
2025-04-09 13:53:18,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71951E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:18,671:INFO:Checking exceptions
2025-04-09 13:53:18,671:INFO:Preloading libraries
2025-04-09 13:53:18,671:INFO:Set up data.
2025-04-09 13:53:18,671:INFO:Set up index.
2025-04-09 13:53:19,273:INFO:Initializing predict_model()
2025-04-09 13:53:19,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71971250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:19,273:INFO:Checking exceptions
2025-04-09 13:53:19,273:INFO:Preloading libraries
2025-04-09 13:53:19,273:INFO:Set up data.
2025-04-09 13:53:19,273:INFO:Set up index.
2025-04-09 13:53:19,920:INFO:Initializing predict_model()
2025-04-09 13:53:19,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195DE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:19,920:INFO:Checking exceptions
2025-04-09 13:53:19,920:INFO:Preloading libraries
2025-04-09 13:53:19,920:INFO:Set up data.
2025-04-09 13:53:19,927:INFO:Set up index.
2025-04-09 13:53:20,760:INFO:Initializing predict_model()
2025-04-09 13:53:20,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71974790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:20,760:INFO:Checking exceptions
2025-04-09 13:53:20,760:INFO:Preloading libraries
2025-04-09 13:53:20,760:INFO:Set up data.
2025-04-09 13:53:20,760:INFO:Set up index.
2025-04-09 13:53:21,466:INFO:Initializing predict_model()
2025-04-09 13:53:21,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196E210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:21,466:INFO:Checking exceptions
2025-04-09 13:53:21,466:INFO:Preloading libraries
2025-04-09 13:53:21,473:INFO:Set up data.
2025-04-09 13:53:21,473:INFO:Set up index.
2025-04-09 13:53:22,161:INFO:Initializing predict_model()
2025-04-09 13:53:22,162:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71971390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:22,162:INFO:Checking exceptions
2025-04-09 13:53:22,162:INFO:Preloading libraries
2025-04-09 13:53:22,162:INFO:Set up data.
2025-04-09 13:53:22,166:INFO:Set up index.
2025-04-09 13:53:22,854:INFO:Initializing predict_model()
2025-04-09 13:53:22,866:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195DE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:22,866:INFO:Checking exceptions
2025-04-09 13:53:22,866:INFO:Preloading libraries
2025-04-09 13:53:22,866:INFO:Set up data.
2025-04-09 13:53:22,866:INFO:Set up index.
2025-04-09 13:53:23,492:INFO:Initializing predict_model()
2025-04-09 13:53:23,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195DF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:23,499:INFO:Checking exceptions
2025-04-09 13:53:23,499:INFO:Preloading libraries
2025-04-09 13:53:23,500:INFO:Set up data.
2025-04-09 13:53:23,501:INFO:Set up index.
2025-04-09 13:53:24,182:INFO:Initializing predict_model()
2025-04-09 13:53:24,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71968C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:24,182:INFO:Checking exceptions
2025-04-09 13:53:24,182:INFO:Preloading libraries
2025-04-09 13:53:24,182:INFO:Set up data.
2025-04-09 13:53:24,185:INFO:Set up index.
2025-04-09 13:53:24,847:INFO:Initializing predict_model()
2025-04-09 13:53:24,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7196A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:24,848:INFO:Checking exceptions
2025-04-09 13:53:24,848:INFO:Preloading libraries
2025-04-09 13:53:24,849:INFO:Set up data.
2025-04-09 13:53:24,852:INFO:Set up index.
2025-04-09 13:53:25,550:INFO:Initializing predict_model()
2025-04-09 13:53:25,550:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7195F790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:25,550:INFO:Checking exceptions
2025-04-09 13:53:25,550:INFO:Preloading libraries
2025-04-09 13:53:25,550:INFO:Set up data.
2025-04-09 13:53:25,556:INFO:Set up index.
2025-04-09 13:53:26,221:INFO:Initializing predict_model()
2025-04-09 13:53:26,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71987890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:26,221:INFO:Checking exceptions
2025-04-09 13:53:26,221:INFO:Preloading libraries
2025-04-09 13:53:26,221:INFO:Set up data.
2025-04-09 13:53:26,221:INFO:Set up index.
2025-04-09 13:53:26,911:INFO:Initializing predict_model()
2025-04-09 13:53:26,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71983BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:26,911:INFO:Checking exceptions
2025-04-09 13:53:26,911:INFO:Preloading libraries
2025-04-09 13:53:26,911:INFO:Set up data.
2025-04-09 13:53:26,916:INFO:Set up index.
2025-04-09 13:53:27,583:INFO:Initializing predict_model()
2025-04-09 13:53:27,583:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB7197AA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:27,583:INFO:Checking exceptions
2025-04-09 13:53:27,583:INFO:Preloading libraries
2025-04-09 13:53:27,583:INFO:Set up data.
2025-04-09 13:53:27,593:INFO:Set up index.
2025-04-09 13:53:28,240:INFO:Initializing predict_model()
2025-04-09 13:53:28,240:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71979550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673DED40>)
2025-04-09 13:53:28,240:INFO:Checking exceptions
2025-04-09 13:53:28,240:INFO:Preloading libraries
2025-04-09 13:53:28,240:INFO:Set up data.
2025-04-09 13:53:28,240:INFO:Set up index.
2025-04-09 13:53:28,898:INFO:Initializing predict_model()
2025-04-09 13:53:28,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AB71976ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002AB673A7D80>)
2025-04-09 13:53:28,899:INFO:Checking exceptions
2025-04-09 13:53:28,899:INFO:Preloading libraries
2025-04-09 13:53:28,899:INFO:Set up data.
2025-04-09 13:53:28,903:INFO:Set up index.
2025-04-09 13:53:51,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:53:51,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:53:51,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:53:51,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:53:57,368:INFO:Initializing load_model()
2025-04-09 13:53:57,368:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:53:57,415:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:54:01,574:INFO:Initializing predict_model()
2025-04-09 13:54:01,574:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115B5C050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:01,574:INFO:Checking exceptions
2025-04-09 13:54:01,574:INFO:Preloading libraries
2025-04-09 13:54:01,574:INFO:Set up data.
2025-04-09 13:54:01,574:INFO:Set up index.
2025-04-09 13:54:02,247:INFO:Initializing predict_model()
2025-04-09 13:54:02,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115915F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:02,247:INFO:Checking exceptions
2025-04-09 13:54:02,247:INFO:Preloading libraries
2025-04-09 13:54:02,247:INFO:Set up data.
2025-04-09 13:54:02,256:INFO:Set up index.
2025-04-09 13:54:02,896:INFO:Initializing predict_model()
2025-04-09 13:54:02,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111594C1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:02,896:INFO:Checking exceptions
2025-04-09 13:54:02,896:INFO:Preloading libraries
2025-04-09 13:54:02,896:INFO:Set up data.
2025-04-09 13:54:02,902:INFO:Set up index.
2025-04-09 13:54:03,565:INFO:Initializing predict_model()
2025-04-09 13:54:03,565:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115BA9E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:03,565:INFO:Checking exceptions
2025-04-09 13:54:03,565:INFO:Preloading libraries
2025-04-09 13:54:03,565:INFO:Set up data.
2025-04-09 13:54:03,575:INFO:Set up index.
2025-04-09 13:54:04,223:INFO:Initializing predict_model()
2025-04-09 13:54:04,223:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121382F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:04,223:INFO:Checking exceptions
2025-04-09 13:54:04,223:INFO:Preloading libraries
2025-04-09 13:54:04,223:INFO:Set up data.
2025-04-09 13:54:04,223:INFO:Set up index.
2025-04-09 13:54:04,858:INFO:Initializing predict_model()
2025-04-09 13:54:04,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115A15F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:04,858:INFO:Checking exceptions
2025-04-09 13:54:04,858:INFO:Preloading libraries
2025-04-09 13:54:04,859:INFO:Set up data.
2025-04-09 13:54:04,863:INFO:Set up index.
2025-04-09 13:54:05,495:INFO:Initializing predict_model()
2025-04-09 13:54:05,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115C7F6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:05,496:INFO:Checking exceptions
2025-04-09 13:54:05,496:INFO:Preloading libraries
2025-04-09 13:54:05,496:INFO:Set up data.
2025-04-09 13:54:05,500:INFO:Set up index.
2025-04-09 13:54:06,127:INFO:Initializing predict_model()
2025-04-09 13:54:06,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115C98790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:06,127:INFO:Checking exceptions
2025-04-09 13:54:06,127:INFO:Preloading libraries
2025-04-09 13:54:06,127:INFO:Set up data.
2025-04-09 13:54:06,127:INFO:Set up index.
2025-04-09 13:54:06,754:INFO:Initializing predict_model()
2025-04-09 13:54:06,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121196A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:06,754:INFO:Checking exceptions
2025-04-09 13:54:06,754:INFO:Preloading libraries
2025-04-09 13:54:06,754:INFO:Set up data.
2025-04-09 13:54:06,754:INFO:Set up index.
2025-04-09 13:54:07,366:INFO:Initializing predict_model()
2025-04-09 13:54:07,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115BAB350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:07,366:INFO:Checking exceptions
2025-04-09 13:54:07,366:INFO:Preloading libraries
2025-04-09 13:54:07,366:INFO:Set up data.
2025-04-09 13:54:07,369:INFO:Set up index.
2025-04-09 13:54:07,978:INFO:Initializing predict_model()
2025-04-09 13:54:07,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111574C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:07,978:INFO:Checking exceptions
2025-04-09 13:54:07,978:INFO:Preloading libraries
2025-04-09 13:54:07,978:INFO:Set up data.
2025-04-09 13:54:07,978:INFO:Set up index.
2025-04-09 13:54:08,589:INFO:Initializing predict_model()
2025-04-09 13:54:08,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112127D3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:08,589:INFO:Checking exceptions
2025-04-09 13:54:08,589:INFO:Preloading libraries
2025-04-09 13:54:08,589:INFO:Set up data.
2025-04-09 13:54:08,589:INFO:Set up index.
2025-04-09 13:54:10,092:INFO:Initializing predict_model()
2025-04-09 13:54:10,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111FB7EDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:10,092:INFO:Checking exceptions
2025-04-09 13:54:10,092:INFO:Preloading libraries
2025-04-09 13:54:10,092:INFO:Set up data.
2025-04-09 13:54:10,092:INFO:Set up index.
2025-04-09 13:54:10,708:INFO:Initializing predict_model()
2025-04-09 13:54:10,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136EA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:10,708:INFO:Checking exceptions
2025-04-09 13:54:10,708:INFO:Preloading libraries
2025-04-09 13:54:10,708:INFO:Set up data.
2025-04-09 13:54:10,708:INFO:Set up index.
2025-04-09 13:54:11,301:INFO:Initializing predict_model()
2025-04-09 13:54:11,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121199510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:11,301:INFO:Checking exceptions
2025-04-09 13:54:11,301:INFO:Preloading libraries
2025-04-09 13:54:11,308:INFO:Set up data.
2025-04-09 13:54:11,308:INFO:Set up index.
2025-04-09 13:54:11,949:INFO:Initializing predict_model()
2025-04-09 13:54:11,949:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136FD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:11,949:INFO:Checking exceptions
2025-04-09 13:54:11,949:INFO:Preloading libraries
2025-04-09 13:54:11,949:INFO:Set up data.
2025-04-09 13:54:11,956:INFO:Set up index.
2025-04-09 13:54:12,610:INFO:Initializing predict_model()
2025-04-09 13:54:12,610:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111594F4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:12,610:INFO:Checking exceptions
2025-04-09 13:54:12,610:INFO:Preloading libraries
2025-04-09 13:54:12,610:INFO:Set up data.
2025-04-09 13:54:12,610:INFO:Set up index.
2025-04-09 13:54:13,212:INFO:Initializing predict_model()
2025-04-09 13:54:13,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112127FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:13,212:INFO:Checking exceptions
2025-04-09 13:54:13,212:INFO:Preloading libraries
2025-04-09 13:54:13,212:INFO:Set up data.
2025-04-09 13:54:13,212:INFO:Set up index.
2025-04-09 13:54:13,812:INFO:Initializing predict_model()
2025-04-09 13:54:13,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021115C98790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:13,812:INFO:Checking exceptions
2025-04-09 13:54:13,812:INFO:Preloading libraries
2025-04-09 13:54:13,812:INFO:Set up data.
2025-04-09 13:54:13,812:INFO:Set up index.
2025-04-09 13:54:14,478:INFO:Initializing predict_model()
2025-04-09 13:54:14,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139BFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:14,478:INFO:Checking exceptions
2025-04-09 13:54:14,478:INFO:Preloading libraries
2025-04-09 13:54:14,478:INFO:Set up data.
2025-04-09 13:54:14,494:INFO:Set up index.
2025-04-09 13:54:15,138:INFO:Initializing predict_model()
2025-04-09 13:54:15,138:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121194E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:15,138:INFO:Checking exceptions
2025-04-09 13:54:15,138:INFO:Preloading libraries
2025-04-09 13:54:15,138:INFO:Set up data.
2025-04-09 13:54:15,138:INFO:Set up index.
2025-04-09 13:54:15,752:INFO:Initializing predict_model()
2025-04-09 13:54:15,752:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136F8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:15,752:INFO:Checking exceptions
2025-04-09 13:54:15,753:INFO:Preloading libraries
2025-04-09 13:54:15,753:INFO:Set up data.
2025-04-09 13:54:15,756:INFO:Set up index.
2025-04-09 13:54:16,395:INFO:Initializing predict_model()
2025-04-09 13:54:16,395:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136E950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:16,395:INFO:Checking exceptions
2025-04-09 13:54:16,395:INFO:Preloading libraries
2025-04-09 13:54:16,395:INFO:Set up data.
2025-04-09 13:54:16,409:INFO:Set up index.
2025-04-09 13:54:17,050:INFO:Initializing predict_model()
2025-04-09 13:54:17,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121381B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:17,050:INFO:Checking exceptions
2025-04-09 13:54:17,050:INFO:Preloading libraries
2025-04-09 13:54:17,050:INFO:Set up data.
2025-04-09 13:54:17,062:INFO:Set up index.
2025-04-09 13:54:17,717:INFO:Initializing predict_model()
2025-04-09 13:54:17,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121381E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:17,717:INFO:Checking exceptions
2025-04-09 13:54:17,717:INFO:Preloading libraries
2025-04-09 13:54:17,717:INFO:Set up data.
2025-04-09 13:54:17,717:INFO:Set up index.
2025-04-09 13:54:18,386:INFO:Initializing predict_model()
2025-04-09 13:54:18,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139BD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:18,386:INFO:Checking exceptions
2025-04-09 13:54:18,386:INFO:Preloading libraries
2025-04-09 13:54:18,386:INFO:Set up data.
2025-04-09 13:54:18,386:INFO:Set up index.
2025-04-09 13:54:19,060:INFO:Initializing predict_model()
2025-04-09 13:54:19,060:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138C6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:19,060:INFO:Checking exceptions
2025-04-09 13:54:19,060:INFO:Preloading libraries
2025-04-09 13:54:19,060:INFO:Set up data.
2025-04-09 13:54:19,060:INFO:Set up index.
2025-04-09 13:54:19,673:INFO:Initializing predict_model()
2025-04-09 13:54:19,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138C750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:19,673:INFO:Checking exceptions
2025-04-09 13:54:19,673:INFO:Preloading libraries
2025-04-09 13:54:19,673:INFO:Set up data.
2025-04-09 13:54:19,688:INFO:Set up index.
2025-04-09 13:54:20,310:INFO:Initializing predict_model()
2025-04-09 13:54:20,310:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121161590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:20,311:INFO:Checking exceptions
2025-04-09 13:54:20,311:INFO:Preloading libraries
2025-04-09 13:54:20,311:INFO:Set up data.
2025-04-09 13:54:20,314:INFO:Set up index.
2025-04-09 13:54:20,930:INFO:Initializing predict_model()
2025-04-09 13:54:20,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:20,931:INFO:Checking exceptions
2025-04-09 13:54:20,931:INFO:Preloading libraries
2025-04-09 13:54:20,931:INFO:Set up data.
2025-04-09 13:54:20,936:INFO:Set up index.
2025-04-09 13:54:21,564:INFO:Initializing predict_model()
2025-04-09 13:54:21,564:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121196A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:21,564:INFO:Checking exceptions
2025-04-09 13:54:21,564:INFO:Preloading libraries
2025-04-09 13:54:21,564:INFO:Set up data.
2025-04-09 13:54:21,580:INFO:Set up index.
2025-04-09 13:54:22,224:INFO:Initializing predict_model()
2025-04-09 13:54:22,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136D5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:22,224:INFO:Checking exceptions
2025-04-09 13:54:22,224:INFO:Preloading libraries
2025-04-09 13:54:22,224:INFO:Set up data.
2025-04-09 13:54:22,224:INFO:Set up index.
2025-04-09 13:54:22,868:INFO:Initializing predict_model()
2025-04-09 13:54:22,868:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121380910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:22,868:INFO:Checking exceptions
2025-04-09 13:54:22,868:INFO:Preloading libraries
2025-04-09 13:54:22,868:INFO:Set up data.
2025-04-09 13:54:22,883:INFO:Set up index.
2025-04-09 13:54:23,520:INFO:Initializing predict_model()
2025-04-09 13:54:23,521:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138DF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:23,521:INFO:Checking exceptions
2025-04-09 13:54:23,521:INFO:Preloading libraries
2025-04-09 13:54:23,521:INFO:Set up data.
2025-04-09 13:54:23,524:INFO:Set up index.
2025-04-09 13:54:24,152:INFO:Initializing predict_model()
2025-04-09 13:54:24,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138E0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:24,152:INFO:Checking exceptions
2025-04-09 13:54:24,152:INFO:Preloading libraries
2025-04-09 13:54:24,152:INFO:Set up data.
2025-04-09 13:54:24,152:INFO:Set up index.
2025-04-09 13:54:24,765:INFO:Initializing predict_model()
2025-04-09 13:54:24,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139F950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:24,765:INFO:Checking exceptions
2025-04-09 13:54:24,765:INFO:Preloading libraries
2025-04-09 13:54:24,765:INFO:Set up data.
2025-04-09 13:54:24,765:INFO:Set up index.
2025-04-09 13:54:25,354:INFO:Initializing predict_model()
2025-04-09 13:54:25,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138E810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:25,355:INFO:Checking exceptions
2025-04-09 13:54:25,355:INFO:Preloading libraries
2025-04-09 13:54:25,355:INFO:Set up data.
2025-04-09 13:54:25,358:INFO:Set up index.
2025-04-09 13:54:26,017:INFO:Initializing predict_model()
2025-04-09 13:54:26,017:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:26,017:INFO:Checking exceptions
2025-04-09 13:54:26,017:INFO:Preloading libraries
2025-04-09 13:54:26,017:INFO:Set up data.
2025-04-09 13:54:26,017:INFO:Set up index.
2025-04-09 13:54:26,613:INFO:Initializing predict_model()
2025-04-09 13:54:26,613:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:26,613:INFO:Checking exceptions
2025-04-09 13:54:26,613:INFO:Preloading libraries
2025-04-09 13:54:26,613:INFO:Set up data.
2025-04-09 13:54:26,613:INFO:Set up index.
2025-04-09 13:54:27,225:INFO:Initializing predict_model()
2025-04-09 13:54:27,225:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139F850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:27,225:INFO:Checking exceptions
2025-04-09 13:54:27,225:INFO:Preloading libraries
2025-04-09 13:54:27,230:INFO:Set up data.
2025-04-09 13:54:27,230:INFO:Set up index.
2025-04-09 13:54:27,831:INFO:Initializing predict_model()
2025-04-09 13:54:27,831:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:27,831:INFO:Checking exceptions
2025-04-09 13:54:27,831:INFO:Preloading libraries
2025-04-09 13:54:27,831:INFO:Set up data.
2025-04-09 13:54:27,835:INFO:Set up index.
2025-04-09 13:54:28,463:INFO:Initializing predict_model()
2025-04-09 13:54:28,463:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111FB92490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:28,463:INFO:Checking exceptions
2025-04-09 13:54:28,463:INFO:Preloading libraries
2025-04-09 13:54:28,463:INFO:Set up data.
2025-04-09 13:54:28,479:INFO:Set up index.
2025-04-09 13:54:29,075:INFO:Initializing predict_model()
2025-04-09 13:54:29,075:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:29,075:INFO:Checking exceptions
2025-04-09 13:54:29,075:INFO:Preloading libraries
2025-04-09 13:54:29,075:INFO:Set up data.
2025-04-09 13:54:29,075:INFO:Set up index.
2025-04-09 13:54:29,672:INFO:Initializing predict_model()
2025-04-09 13:54:29,672:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A3810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:29,672:INFO:Checking exceptions
2025-04-09 13:54:29,672:INFO:Preloading libraries
2025-04-09 13:54:29,672:INFO:Set up data.
2025-04-09 13:54:29,672:INFO:Set up index.
2025-04-09 13:54:30,344:INFO:Initializing predict_model()
2025-04-09 13:54:30,344:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121382690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:30,344:INFO:Checking exceptions
2025-04-09 13:54:30,344:INFO:Preloading libraries
2025-04-09 13:54:30,345:INFO:Set up data.
2025-04-09 13:54:30,350:INFO:Set up index.
2025-04-09 13:54:31,014:INFO:Initializing predict_model()
2025-04-09 13:54:31,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111FB92490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:54:31,014:INFO:Checking exceptions
2025-04-09 13:54:31,014:INFO:Preloading libraries
2025-04-09 13:54:31,015:INFO:Set up data.
2025-04-09 13:54:31,020:INFO:Set up index.
2025-04-09 13:54:31,617:INFO:Initializing predict_model()
2025-04-09 13:54:31,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A3810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:31,617:INFO:Checking exceptions
2025-04-09 13:54:31,617:INFO:Preloading libraries
2025-04-09 13:54:31,617:INFO:Set up data.
2025-04-09 13:54:31,632:INFO:Set up index.
2025-04-09 13:54:32,265:INFO:Initializing predict_model()
2025-04-09 13:54:32,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136F9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:32,265:INFO:Checking exceptions
2025-04-09 13:54:32,265:INFO:Preloading libraries
2025-04-09 13:54:32,266:INFO:Set up data.
2025-04-09 13:54:32,268:INFO:Set up index.
2025-04-09 13:54:32,899:INFO:Initializing predict_model()
2025-04-09 13:54:32,899:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111FB92490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:32,899:INFO:Checking exceptions
2025-04-09 13:54:32,899:INFO:Preloading libraries
2025-04-09 13:54:32,899:INFO:Set up data.
2025-04-09 13:54:32,899:INFO:Set up index.
2025-04-09 13:54:33,495:INFO:Initializing predict_model()
2025-04-09 13:54:33,495:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:33,495:INFO:Checking exceptions
2025-04-09 13:54:33,495:INFO:Preloading libraries
2025-04-09 13:54:33,495:INFO:Set up data.
2025-04-09 13:54:33,495:INFO:Set up index.
2025-04-09 13:54:34,140:INFO:Initializing predict_model()
2025-04-09 13:54:34,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121382950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:34,140:INFO:Checking exceptions
2025-04-09 13:54:34,140:INFO:Preloading libraries
2025-04-09 13:54:34,140:INFO:Set up data.
2025-04-09 13:54:34,140:INFO:Set up index.
2025-04-09 13:54:34,783:INFO:Initializing predict_model()
2025-04-09 13:54:34,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138C410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:34,783:INFO:Checking exceptions
2025-04-09 13:54:34,783:INFO:Preloading libraries
2025-04-09 13:54:34,783:INFO:Set up data.
2025-04-09 13:54:34,783:INFO:Set up index.
2025-04-09 13:54:35,410:INFO:Initializing predict_model()
2025-04-09 13:54:35,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121381D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:35,410:INFO:Checking exceptions
2025-04-09 13:54:35,410:INFO:Preloading libraries
2025-04-09 13:54:35,410:INFO:Set up data.
2025-04-09 13:54:35,410:INFO:Set up index.
2025-04-09 13:54:35,991:INFO:Initializing predict_model()
2025-04-09 13:54:35,991:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136E5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:35,991:INFO:Checking exceptions
2025-04-09 13:54:35,991:INFO:Preloading libraries
2025-04-09 13:54:35,991:INFO:Set up data.
2025-04-09 13:54:36,006:INFO:Set up index.
2025-04-09 13:54:36,645:INFO:Initializing predict_model()
2025-04-09 13:54:36,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136F7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:36,645:INFO:Checking exceptions
2025-04-09 13:54:36,645:INFO:Preloading libraries
2025-04-09 13:54:36,645:INFO:Set up data.
2025-04-09 13:54:36,645:INFO:Set up index.
2025-04-09 13:54:37,293:INFO:Initializing predict_model()
2025-04-09 13:54:37,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:37,294:INFO:Checking exceptions
2025-04-09 13:54:37,294:INFO:Preloading libraries
2025-04-09 13:54:37,294:INFO:Set up data.
2025-04-09 13:54:37,300:INFO:Set up index.
2025-04-09 13:54:37,926:INFO:Initializing predict_model()
2025-04-09 13:54:37,926:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136F250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:37,926:INFO:Checking exceptions
2025-04-09 13:54:37,926:INFO:Preloading libraries
2025-04-09 13:54:37,926:INFO:Set up data.
2025-04-09 13:54:37,926:INFO:Set up index.
2025-04-09 13:54:38,554:INFO:Initializing predict_model()
2025-04-09 13:54:38,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121196ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:38,554:INFO:Checking exceptions
2025-04-09 13:54:38,554:INFO:Preloading libraries
2025-04-09 13:54:38,554:INFO:Set up data.
2025-04-09 13:54:38,554:INFO:Set up index.
2025-04-09 13:54:39,226:INFO:Initializing predict_model()
2025-04-09 13:54:39,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:39,226:INFO:Checking exceptions
2025-04-09 13:54:39,226:INFO:Preloading libraries
2025-04-09 13:54:39,226:INFO:Set up data.
2025-04-09 13:54:39,226:INFO:Set up index.
2025-04-09 13:54:39,911:INFO:Initializing predict_model()
2025-04-09 13:54:39,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A7450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:39,911:INFO:Checking exceptions
2025-04-09 13:54:39,911:INFO:Preloading libraries
2025-04-09 13:54:39,911:INFO:Set up data.
2025-04-09 13:54:39,927:INFO:Set up index.
2025-04-09 13:54:40,524:INFO:Initializing predict_model()
2025-04-09 13:54:40,524:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121399450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:40,524:INFO:Checking exceptions
2025-04-09 13:54:40,524:INFO:Preloading libraries
2025-04-09 13:54:40,524:INFO:Set up data.
2025-04-09 13:54:40,524:INFO:Set up index.
2025-04-09 13:54:41,136:INFO:Initializing predict_model()
2025-04-09 13:54:41,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213985D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:41,136:INFO:Checking exceptions
2025-04-09 13:54:41,136:INFO:Preloading libraries
2025-04-09 13:54:41,136:INFO:Set up data.
2025-04-09 13:54:41,136:INFO:Set up index.
2025-04-09 13:54:41,781:INFO:Initializing predict_model()
2025-04-09 13:54:41,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213995D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:41,781:INFO:Checking exceptions
2025-04-09 13:54:41,781:INFO:Preloading libraries
2025-04-09 13:54:41,782:INFO:Set up data.
2025-04-09 13:54:41,785:INFO:Set up index.
2025-04-09 13:54:42,404:INFO:Initializing predict_model()
2025-04-09 13:54:42,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138F4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:42,404:INFO:Checking exceptions
2025-04-09 13:54:42,404:INFO:Preloading libraries
2025-04-09 13:54:42,404:INFO:Set up data.
2025-04-09 13:54:42,420:INFO:Set up index.
2025-04-09 13:54:43,048:INFO:Initializing predict_model()
2025-04-09 13:54:43,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138F450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:43,048:INFO:Checking exceptions
2025-04-09 13:54:43,048:INFO:Preloading libraries
2025-04-09 13:54:43,048:INFO:Set up data.
2025-04-09 13:54:43,048:INFO:Set up index.
2025-04-09 13:54:43,684:INFO:Initializing predict_model()
2025-04-09 13:54:43,684:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139CA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:43,684:INFO:Checking exceptions
2025-04-09 13:54:43,684:INFO:Preloading libraries
2025-04-09 13:54:43,685:INFO:Set up data.
2025-04-09 13:54:43,690:INFO:Set up index.
2025-04-09 13:54:44,346:INFO:Initializing predict_model()
2025-04-09 13:54:44,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A7D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:44,346:INFO:Checking exceptions
2025-04-09 13:54:44,346:INFO:Preloading libraries
2025-04-09 13:54:44,346:INFO:Set up data.
2025-04-09 13:54:44,356:INFO:Set up index.
2025-04-09 13:54:44,958:INFO:Initializing predict_model()
2025-04-09 13:54:44,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139EF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:44,958:INFO:Checking exceptions
2025-04-09 13:54:44,958:INFO:Preloading libraries
2025-04-09 13:54:44,958:INFO:Set up data.
2025-04-09 13:54:44,958:INFO:Set up index.
2025-04-09 13:54:45,585:INFO:Initializing predict_model()
2025-04-09 13:54:45,585:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A7610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:45,585:INFO:Checking exceptions
2025-04-09 13:54:45,585:INFO:Preloading libraries
2025-04-09 13:54:45,585:INFO:Set up data.
2025-04-09 13:54:45,585:INFO:Set up index.
2025-04-09 13:54:46,241:INFO:Initializing predict_model()
2025-04-09 13:54:46,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121383490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:46,259:INFO:Checking exceptions
2025-04-09 13:54:46,259:INFO:Preloading libraries
2025-04-09 13:54:46,259:INFO:Set up data.
2025-04-09 13:54:46,270:INFO:Set up index.
2025-04-09 13:54:46,931:INFO:Initializing predict_model()
2025-04-09 13:54:46,931:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A6A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:46,931:INFO:Checking exceptions
2025-04-09 13:54:46,931:INFO:Preloading libraries
2025-04-09 13:54:46,931:INFO:Set up data.
2025-04-09 13:54:46,946:INFO:Set up index.
2025-04-09 13:54:47,543:INFO:Initializing predict_model()
2025-04-09 13:54:47,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121398F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:47,543:INFO:Checking exceptions
2025-04-09 13:54:47,543:INFO:Preloading libraries
2025-04-09 13:54:47,543:INFO:Set up data.
2025-04-09 13:54:47,543:INFO:Set up index.
2025-04-09 13:54:48,156:INFO:Initializing predict_model()
2025-04-09 13:54:48,156:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139FF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:48,156:INFO:Checking exceptions
2025-04-09 13:54:48,156:INFO:Preloading libraries
2025-04-09 13:54:48,156:INFO:Set up data.
2025-04-09 13:54:48,162:INFO:Set up index.
2025-04-09 13:54:48,797:INFO:Initializing predict_model()
2025-04-09 13:54:48,797:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213995D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:48,797:INFO:Checking exceptions
2025-04-09 13:54:48,797:INFO:Preloading libraries
2025-04-09 13:54:48,797:INFO:Set up data.
2025-04-09 13:54:48,812:INFO:Set up index.
2025-04-09 13:54:49,393:INFO:Initializing predict_model()
2025-04-09 13:54:49,393:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139BC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:49,393:INFO:Checking exceptions
2025-04-09 13:54:49,393:INFO:Preloading libraries
2025-04-09 13:54:49,393:INFO:Set up data.
2025-04-09 13:54:49,409:INFO:Set up index.
2025-04-09 13:54:50,036:INFO:Initializing predict_model()
2025-04-09 13:54:50,036:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121398AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:50,036:INFO:Checking exceptions
2025-04-09 13:54:50,036:INFO:Preloading libraries
2025-04-09 13:54:50,036:INFO:Set up data.
2025-04-09 13:54:50,036:INFO:Set up index.
2025-04-09 13:54:50,665:INFO:Initializing predict_model()
2025-04-09 13:54:50,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139BE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:50,665:INFO:Checking exceptions
2025-04-09 13:54:50,665:INFO:Preloading libraries
2025-04-09 13:54:50,666:INFO:Set up data.
2025-04-09 13:54:50,670:INFO:Set up index.
2025-04-09 13:54:51,296:INFO:Initializing predict_model()
2025-04-09 13:54:51,296:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A6B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:51,296:INFO:Checking exceptions
2025-04-09 13:54:51,296:INFO:Preloading libraries
2025-04-09 13:54:51,296:INFO:Set up data.
2025-04-09 13:54:51,296:INFO:Set up index.
2025-04-09 13:54:51,960:INFO:Initializing predict_model()
2025-04-09 13:54:51,960:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:51,960:INFO:Checking exceptions
2025-04-09 13:54:51,960:INFO:Preloading libraries
2025-04-09 13:54:51,962:INFO:Set up data.
2025-04-09 13:54:51,964:INFO:Set up index.
2025-04-09 13:54:52,642:INFO:Initializing predict_model()
2025-04-09 13:54:52,642:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213AA1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:52,642:INFO:Checking exceptions
2025-04-09 13:54:52,642:INFO:Preloading libraries
2025-04-09 13:54:52,642:INFO:Set up data.
2025-04-09 13:54:52,645:INFO:Set up index.
2025-04-09 13:54:53,326:INFO:Initializing predict_model()
2025-04-09 13:54:53,326:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:53,326:INFO:Checking exceptions
2025-04-09 13:54:53,326:INFO:Preloading libraries
2025-04-09 13:54:53,326:INFO:Set up data.
2025-04-09 13:54:53,326:INFO:Set up index.
2025-04-09 13:54:54,174:INFO:Initializing predict_model()
2025-04-09 13:54:54,174:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002111FB92490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:54,174:INFO:Checking exceptions
2025-04-09 13:54:54,174:INFO:Preloading libraries
2025-04-09 13:54:54,174:INFO:Set up data.
2025-04-09 13:54:54,174:INFO:Set up index.
2025-04-09 13:54:54,896:INFO:Initializing predict_model()
2025-04-09 13:54:54,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121398E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:54,896:INFO:Checking exceptions
2025-04-09 13:54:54,896:INFO:Preloading libraries
2025-04-09 13:54:54,896:INFO:Set up data.
2025-04-09 13:54:54,896:INFO:Set up index.
2025-04-09 13:54:55,603:INFO:Initializing predict_model()
2025-04-09 13:54:55,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A3910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:55,603:INFO:Checking exceptions
2025-04-09 13:54:55,604:INFO:Preloading libraries
2025-04-09 13:54:55,604:INFO:Set up data.
2025-04-09 13:54:55,609:INFO:Set up index.
2025-04-09 13:54:56,338:INFO:Initializing predict_model()
2025-04-09 13:54:56,338:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:56,338:INFO:Checking exceptions
2025-04-09 13:54:56,338:INFO:Preloading libraries
2025-04-09 13:54:56,338:INFO:Set up data.
2025-04-09 13:54:56,338:INFO:Set up index.
2025-04-09 13:54:57,186:INFO:Initializing predict_model()
2025-04-09 13:54:57,186:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A6590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:57,186:INFO:Checking exceptions
2025-04-09 13:54:57,186:INFO:Preloading libraries
2025-04-09 13:54:57,186:INFO:Set up data.
2025-04-09 13:54:57,186:INFO:Set up index.
2025-04-09 13:54:58,078:INFO:Initializing predict_model()
2025-04-09 13:54:58,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A4090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:58,078:INFO:Checking exceptions
2025-04-09 13:54:58,078:INFO:Preloading libraries
2025-04-09 13:54:58,078:INFO:Set up data.
2025-04-09 13:54:58,078:INFO:Set up index.
2025-04-09 13:54:58,829:INFO:Initializing predict_model()
2025-04-09 13:54:58,829:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:58,829:INFO:Checking exceptions
2025-04-09 13:54:58,829:INFO:Preloading libraries
2025-04-09 13:54:58,829:INFO:Set up data.
2025-04-09 13:54:58,845:INFO:Set up index.
2025-04-09 13:54:59,520:INFO:Initializing predict_model()
2025-04-09 13:54:59,520:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121195F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:54:59,520:INFO:Checking exceptions
2025-04-09 13:54:59,520:INFO:Preloading libraries
2025-04-09 13:54:59,520:INFO:Set up data.
2025-04-09 13:54:59,520:INFO:Set up index.
2025-04-09 13:55:00,236:INFO:Initializing predict_model()
2025-04-09 13:55:00,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121196ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:00,236:INFO:Checking exceptions
2025-04-09 13:55:00,236:INFO:Preloading libraries
2025-04-09 13:55:00,236:INFO:Set up data.
2025-04-09 13:55:00,241:INFO:Set up index.
2025-04-09 13:55:00,915:INFO:Initializing predict_model()
2025-04-09 13:55:00,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A8710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:00,915:INFO:Checking exceptions
2025-04-09 13:55:00,915:INFO:Preloading libraries
2025-04-09 13:55:00,915:INFO:Set up data.
2025-04-09 13:55:00,915:INFO:Set up index.
2025-04-09 13:55:01,605:INFO:Initializing predict_model()
2025-04-09 13:55:01,605:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121383350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:01,605:INFO:Checking exceptions
2025-04-09 13:55:01,605:INFO:Preloading libraries
2025-04-09 13:55:01,605:INFO:Set up data.
2025-04-09 13:55:01,612:INFO:Set up index.
2025-04-09 13:55:03,011:INFO:Initializing predict_model()
2025-04-09 13:55:03,012:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139B9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:03,012:INFO:Checking exceptions
2025-04-09 13:55:03,012:INFO:Preloading libraries
2025-04-09 13:55:03,012:INFO:Set up data.
2025-04-09 13:55:03,015:INFO:Set up index.
2025-04-09 13:55:03,739:INFO:Initializing predict_model()
2025-04-09 13:55:03,739:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139D6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:03,739:INFO:Checking exceptions
2025-04-09 13:55:03,739:INFO:Preloading libraries
2025-04-09 13:55:03,740:INFO:Set up data.
2025-04-09 13:55:03,743:INFO:Set up index.
2025-04-09 13:55:04,474:INFO:Initializing predict_model()
2025-04-09 13:55:04,474:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121399390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:04,474:INFO:Checking exceptions
2025-04-09 13:55:04,474:INFO:Preloading libraries
2025-04-09 13:55:04,475:INFO:Set up data.
2025-04-09 13:55:04,481:INFO:Set up index.
2025-04-09 13:55:05,245:INFO:Initializing predict_model()
2025-04-09 13:55:05,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138F290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:05,245:INFO:Checking exceptions
2025-04-09 13:55:05,245:INFO:Preloading libraries
2025-04-09 13:55:05,246:INFO:Set up data.
2025-04-09 13:55:05,250:INFO:Set up index.
2025-04-09 13:55:05,980:INFO:Initializing predict_model()
2025-04-09 13:55:05,980:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A9D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:05,980:INFO:Checking exceptions
2025-04-09 13:55:05,981:INFO:Preloading libraries
2025-04-09 13:55:05,981:INFO:Set up data.
2025-04-09 13:55:05,986:INFO:Set up index.
2025-04-09 13:55:06,689:INFO:Initializing predict_model()
2025-04-09 13:55:06,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121383D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:06,689:INFO:Checking exceptions
2025-04-09 13:55:06,689:INFO:Preloading libraries
2025-04-09 13:55:06,690:INFO:Set up data.
2025-04-09 13:55:06,694:INFO:Set up index.
2025-04-09 13:55:07,407:INFO:Initializing predict_model()
2025-04-09 13:55:07,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138F650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:07,407:INFO:Checking exceptions
2025-04-09 13:55:07,407:INFO:Preloading libraries
2025-04-09 13:55:07,408:INFO:Set up data.
2025-04-09 13:55:07,412:INFO:Set up index.
2025-04-09 13:55:08,123:INFO:Initializing predict_model()
2025-04-09 13:55:08,123:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:08,123:INFO:Checking exceptions
2025-04-09 13:55:08,123:INFO:Preloading libraries
2025-04-09 13:55:08,124:INFO:Set up data.
2025-04-09 13:55:08,128:INFO:Set up index.
2025-04-09 13:55:08,807:INFO:Initializing predict_model()
2025-04-09 13:55:08,808:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121380DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:08,808:INFO:Checking exceptions
2025-04-09 13:55:08,808:INFO:Preloading libraries
2025-04-09 13:55:08,808:INFO:Set up data.
2025-04-09 13:55:08,813:INFO:Set up index.
2025-04-09 13:55:09,535:INFO:Initializing predict_model()
2025-04-09 13:55:09,535:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136EB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:09,535:INFO:Checking exceptions
2025-04-09 13:55:09,535:INFO:Preloading libraries
2025-04-09 13:55:09,535:INFO:Set up data.
2025-04-09 13:55:09,539:INFO:Set up index.
2025-04-09 13:55:10,273:INFO:Initializing predict_model()
2025-04-09 13:55:10,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139AE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:10,274:INFO:Checking exceptions
2025-04-09 13:55:10,274:INFO:Preloading libraries
2025-04-09 13:55:10,275:INFO:Set up data.
2025-04-09 13:55:10,280:INFO:Set up index.
2025-04-09 13:55:10,992:INFO:Initializing predict_model()
2025-04-09 13:55:10,992:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A5FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:10,992:INFO:Checking exceptions
2025-04-09 13:55:10,992:INFO:Preloading libraries
2025-04-09 13:55:10,993:INFO:Set up data.
2025-04-09 13:55:10,997:INFO:Set up index.
2025-04-09 13:55:11,874:INFO:Initializing predict_model()
2025-04-09 13:55:11,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B1990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:11,874:INFO:Checking exceptions
2025-04-09 13:55:11,874:INFO:Preloading libraries
2025-04-09 13:55:11,875:INFO:Set up data.
2025-04-09 13:55:11,881:INFO:Set up index.
2025-04-09 13:55:12,694:INFO:Initializing predict_model()
2025-04-09 13:55:12,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139C450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:12,695:INFO:Checking exceptions
2025-04-09 13:55:12,695:INFO:Preloading libraries
2025-04-09 13:55:12,695:INFO:Set up data.
2025-04-09 13:55:12,700:INFO:Set up index.
2025-04-09 13:55:13,432:INFO:Initializing predict_model()
2025-04-09 13:55:13,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A8710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:13,432:INFO:Checking exceptions
2025-04-09 13:55:13,432:INFO:Preloading libraries
2025-04-09 13:55:13,432:INFO:Set up data.
2025-04-09 13:55:13,437:INFO:Set up index.
2025-04-09 13:55:14,213:INFO:Initializing predict_model()
2025-04-09 13:55:14,213:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B3150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:14,213:INFO:Checking exceptions
2025-04-09 13:55:14,214:INFO:Preloading libraries
2025-04-09 13:55:14,214:INFO:Set up data.
2025-04-09 13:55:14,219:INFO:Set up index.
2025-04-09 13:55:14,981:INFO:Initializing predict_model()
2025-04-09 13:55:14,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A8790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:14,982:INFO:Checking exceptions
2025-04-09 13:55:14,982:INFO:Preloading libraries
2025-04-09 13:55:14,982:INFO:Set up data.
2025-04-09 13:55:14,986:INFO:Set up index.
2025-04-09 13:55:15,734:INFO:Initializing predict_model()
2025-04-09 13:55:15,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:15,734:INFO:Checking exceptions
2025-04-09 13:55:15,734:INFO:Preloading libraries
2025-04-09 13:55:15,735:INFO:Set up data.
2025-04-09 13:55:15,740:INFO:Set up index.
2025-04-09 13:55:16,507:INFO:Initializing predict_model()
2025-04-09 13:55:16,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A1710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:16,507:INFO:Checking exceptions
2025-04-09 13:55:16,507:INFO:Preloading libraries
2025-04-09 13:55:16,507:INFO:Set up data.
2025-04-09 13:55:16,513:INFO:Set up index.
2025-04-09 13:55:17,219:INFO:Initializing predict_model()
2025-04-09 13:55:17,220:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121399B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:17,220:INFO:Checking exceptions
2025-04-09 13:55:17,220:INFO:Preloading libraries
2025-04-09 13:55:17,220:INFO:Set up data.
2025-04-09 13:55:17,225:INFO:Set up index.
2025-04-09 13:55:17,919:INFO:Initializing predict_model()
2025-04-09 13:55:17,919:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:17,920:INFO:Checking exceptions
2025-04-09 13:55:17,920:INFO:Preloading libraries
2025-04-09 13:55:17,920:INFO:Set up data.
2025-04-09 13:55:17,925:INFO:Set up index.
2025-04-09 13:55:18,708:INFO:Initializing predict_model()
2025-04-09 13:55:18,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213AA1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:18,708:INFO:Checking exceptions
2025-04-09 13:55:18,708:INFO:Preloading libraries
2025-04-09 13:55:18,709:INFO:Set up data.
2025-04-09 13:55:18,713:INFO:Set up index.
2025-04-09 13:55:19,465:INFO:Initializing predict_model()
2025-04-09 13:55:19,465:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B3150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:19,465:INFO:Checking exceptions
2025-04-09 13:55:19,466:INFO:Preloading libraries
2025-04-09 13:55:19,466:INFO:Set up data.
2025-04-09 13:55:19,471:INFO:Set up index.
2025-04-09 13:55:20,216:INFO:Initializing predict_model()
2025-04-09 13:55:20,216:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112136F550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:20,216:INFO:Checking exceptions
2025-04-09 13:55:20,216:INFO:Preloading libraries
2025-04-09 13:55:20,217:INFO:Set up data.
2025-04-09 13:55:20,223:INFO:Set up index.
2025-04-09 13:55:20,982:INFO:Initializing predict_model()
2025-04-09 13:55:20,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:20,983:INFO:Checking exceptions
2025-04-09 13:55:20,983:INFO:Preloading libraries
2025-04-09 13:55:20,984:INFO:Set up data.
2025-04-09 13:55:20,990:INFO:Set up index.
2025-04-09 13:55:21,717:INFO:Initializing predict_model()
2025-04-09 13:55:21,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:21,717:INFO:Checking exceptions
2025-04-09 13:55:21,717:INFO:Preloading libraries
2025-04-09 13:55:21,718:INFO:Set up data.
2025-04-09 13:55:21,721:INFO:Set up index.
2025-04-09 13:55:22,446:INFO:Initializing predict_model()
2025-04-09 13:55:22,447:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:22,447:INFO:Checking exceptions
2025-04-09 13:55:22,447:INFO:Preloading libraries
2025-04-09 13:55:22,447:INFO:Set up data.
2025-04-09 13:55:22,452:INFO:Set up index.
2025-04-09 13:55:23,166:INFO:Initializing predict_model()
2025-04-09 13:55:23,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A7ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:23,166:INFO:Checking exceptions
2025-04-09 13:55:23,166:INFO:Preloading libraries
2025-04-09 13:55:23,167:INFO:Set up data.
2025-04-09 13:55:23,171:INFO:Set up index.
2025-04-09 13:55:23,915:INFO:Initializing predict_model()
2025-04-09 13:55:23,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139B050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:23,915:INFO:Checking exceptions
2025-04-09 13:55:23,915:INFO:Preloading libraries
2025-04-09 13:55:23,916:INFO:Set up data.
2025-04-09 13:55:23,921:INFO:Set up index.
2025-04-09 13:55:24,634:INFO:Initializing predict_model()
2025-04-09 13:55:24,635:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:24,635:INFO:Checking exceptions
2025-04-09 13:55:24,635:INFO:Preloading libraries
2025-04-09 13:55:24,635:INFO:Set up data.
2025-04-09 13:55:24,641:INFO:Set up index.
2025-04-09 13:55:25,355:INFO:Initializing predict_model()
2025-04-09 13:55:25,355:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213AA950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:25,355:INFO:Checking exceptions
2025-04-09 13:55:25,355:INFO:Preloading libraries
2025-04-09 13:55:25,356:INFO:Set up data.
2025-04-09 13:55:25,360:INFO:Set up index.
2025-04-09 13:55:26,149:INFO:Initializing predict_model()
2025-04-09 13:55:26,149:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138E650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:26,149:INFO:Checking exceptions
2025-04-09 13:55:26,149:INFO:Preloading libraries
2025-04-09 13:55:26,150:INFO:Set up data.
2025-04-09 13:55:26,155:INFO:Set up index.
2025-04-09 13:55:26,896:INFO:Initializing predict_model()
2025-04-09 13:55:26,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A68D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:26,896:INFO:Checking exceptions
2025-04-09 13:55:26,896:INFO:Preloading libraries
2025-04-09 13:55:26,897:INFO:Set up data.
2025-04-09 13:55:26,902:INFO:Set up index.
2025-04-09 13:55:27,640:INFO:Initializing predict_model()
2025-04-09 13:55:27,640:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A3710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:27,640:INFO:Checking exceptions
2025-04-09 13:55:27,640:INFO:Preloading libraries
2025-04-09 13:55:27,641:INFO:Set up data.
2025-04-09 13:55:27,645:INFO:Set up index.
2025-04-09 13:55:28,477:INFO:Initializing predict_model()
2025-04-09 13:55:28,477:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121399010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:28,477:INFO:Checking exceptions
2025-04-09 13:55:28,477:INFO:Preloading libraries
2025-04-09 13:55:28,478:INFO:Set up data.
2025-04-09 13:55:28,483:INFO:Set up index.
2025-04-09 13:55:29,255:INFO:Initializing predict_model()
2025-04-09 13:55:29,255:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:29,255:INFO:Checking exceptions
2025-04-09 13:55:29,256:INFO:Preloading libraries
2025-04-09 13:55:29,256:INFO:Set up data.
2025-04-09 13:55:29,261:INFO:Set up index.
2025-04-09 13:55:29,948:INFO:Initializing predict_model()
2025-04-09 13:55:29,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138E450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:29,949:INFO:Checking exceptions
2025-04-09 13:55:29,949:INFO:Preloading libraries
2025-04-09 13:55:29,949:INFO:Set up data.
2025-04-09 13:55:29,953:INFO:Set up index.
2025-04-09 13:55:30,664:INFO:Initializing predict_model()
2025-04-09 13:55:30,664:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B0610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:30,664:INFO:Checking exceptions
2025-04-09 13:55:30,664:INFO:Preloading libraries
2025-04-09 13:55:30,664:INFO:Set up data.
2025-04-09 13:55:30,668:INFO:Set up index.
2025-04-09 13:55:31,312:INFO:Initializing predict_model()
2025-04-09 13:55:31,312:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:31,312:INFO:Checking exceptions
2025-04-09 13:55:31,312:INFO:Preloading libraries
2025-04-09 13:55:31,313:INFO:Set up data.
2025-04-09 13:55:31,317:INFO:Set up index.
2025-04-09 13:55:31,965:INFO:Initializing predict_model()
2025-04-09 13:55:31,965:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213BF1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D5ED40>)
2025-04-09 13:55:31,965:INFO:Checking exceptions
2025-04-09 13:55:31,965:INFO:Preloading libraries
2025-04-09 13:55:31,966:INFO:Set up data.
2025-04-09 13:55:31,971:INFO:Set up index.
2025-04-09 13:55:32,750:INFO:Initializing predict_model()
2025-04-09 13:55:32,751:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139C7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:32,751:INFO:Checking exceptions
2025-04-09 13:55:32,751:INFO:Preloading libraries
2025-04-09 13:55:32,752:INFO:Set up data.
2025-04-09 13:55:32,759:INFO:Set up index.
2025-04-09 13:55:33,432:INFO:Initializing predict_model()
2025-04-09 13:55:33,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A7BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:33,433:INFO:Checking exceptions
2025-04-09 13:55:33,433:INFO:Preloading libraries
2025-04-09 13:55:33,433:INFO:Set up data.
2025-04-09 13:55:33,436:INFO:Set up index.
2025-04-09 13:55:34,104:INFO:Initializing predict_model()
2025-04-09 13:55:34,104:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:34,104:INFO:Checking exceptions
2025-04-09 13:55:34,104:INFO:Preloading libraries
2025-04-09 13:55:34,105:INFO:Set up data.
2025-04-09 13:55:34,110:INFO:Set up index.
2025-04-09 13:55:34,796:INFO:Initializing predict_model()
2025-04-09 13:55:34,797:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:34,797:INFO:Checking exceptions
2025-04-09 13:55:34,797:INFO:Preloading libraries
2025-04-09 13:55:34,797:INFO:Set up data.
2025-04-09 13:55:34,802:INFO:Set up index.
2025-04-09 13:55:35,499:INFO:Initializing predict_model()
2025-04-09 13:55:35,500:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B2350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:35,500:INFO:Checking exceptions
2025-04-09 13:55:35,500:INFO:Preloading libraries
2025-04-09 13:55:35,500:INFO:Set up data.
2025-04-09 13:55:35,504:INFO:Set up index.
2025-04-09 13:55:36,202:INFO:Initializing predict_model()
2025-04-09 13:55:36,202:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139E990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:36,202:INFO:Checking exceptions
2025-04-09 13:55:36,202:INFO:Preloading libraries
2025-04-09 13:55:36,203:INFO:Set up data.
2025-04-09 13:55:36,207:INFO:Set up index.
2025-04-09 13:55:36,897:INFO:Initializing predict_model()
2025-04-09 13:55:36,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B2E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:36,897:INFO:Checking exceptions
2025-04-09 13:55:36,897:INFO:Preloading libraries
2025-04-09 13:55:36,898:INFO:Set up data.
2025-04-09 13:55:36,904:INFO:Set up index.
2025-04-09 13:55:37,671:INFO:Initializing predict_model()
2025-04-09 13:55:37,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:37,671:INFO:Checking exceptions
2025-04-09 13:55:37,671:INFO:Preloading libraries
2025-04-09 13:55:37,672:INFO:Set up data.
2025-04-09 13:55:37,675:INFO:Set up index.
2025-04-09 13:55:38,349:INFO:Initializing predict_model()
2025-04-09 13:55:38,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B0650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:38,350:INFO:Checking exceptions
2025-04-09 13:55:38,350:INFO:Preloading libraries
2025-04-09 13:55:38,350:INFO:Set up data.
2025-04-09 13:55:38,355:INFO:Set up index.
2025-04-09 13:55:43,763:INFO:Initializing predict_model()
2025-04-09 13:55:43,763:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A93D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:43,763:INFO:Checking exceptions
2025-04-09 13:55:43,763:INFO:Preloading libraries
2025-04-09 13:55:43,764:INFO:Set up data.
2025-04-09 13:55:43,768:INFO:Set up index.
2025-04-09 13:55:44,495:INFO:Initializing predict_model()
2025-04-09 13:55:44,495:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139F790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:44,495:INFO:Checking exceptions
2025-04-09 13:55:44,495:INFO:Preloading libraries
2025-04-09 13:55:44,495:INFO:Set up data.
2025-04-09 13:55:44,500:INFO:Set up index.
2025-04-09 13:55:45,201:INFO:Initializing predict_model()
2025-04-09 13:55:45,202:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213ABED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:45,202:INFO:Checking exceptions
2025-04-09 13:55:45,202:INFO:Preloading libraries
2025-04-09 13:55:45,202:INFO:Set up data.
2025-04-09 13:55:45,206:INFO:Set up index.
2025-04-09 13:55:45,864:INFO:Initializing predict_model()
2025-04-09 13:55:45,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A8590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:45,864:INFO:Checking exceptions
2025-04-09 13:55:45,864:INFO:Preloading libraries
2025-04-09 13:55:45,864:INFO:Set up data.
2025-04-09 13:55:45,868:INFO:Set up index.
2025-04-09 13:55:46,563:INFO:Initializing predict_model()
2025-04-09 13:55:46,564:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A8410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:46,564:INFO:Checking exceptions
2025-04-09 13:55:46,564:INFO:Preloading libraries
2025-04-09 13:55:46,565:INFO:Set up data.
2025-04-09 13:55:46,569:INFO:Set up index.
2025-04-09 13:55:47,228:INFO:Initializing predict_model()
2025-04-09 13:55:47,228:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139D790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:47,229:INFO:Checking exceptions
2025-04-09 13:55:47,229:INFO:Preloading libraries
2025-04-09 13:55:47,229:INFO:Set up data.
2025-04-09 13:55:47,233:INFO:Set up index.
2025-04-09 13:55:47,899:INFO:Initializing predict_model()
2025-04-09 13:55:47,899:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A6890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:47,899:INFO:Checking exceptions
2025-04-09 13:55:47,899:INFO:Preloading libraries
2025-04-09 13:55:47,899:INFO:Set up data.
2025-04-09 13:55:47,904:INFO:Set up index.
2025-04-09 13:55:48,582:INFO:Initializing predict_model()
2025-04-09 13:55:48,583:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213BF490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:48,583:INFO:Checking exceptions
2025-04-09 13:55:48,583:INFO:Preloading libraries
2025-04-09 13:55:48,583:INFO:Set up data.
2025-04-09 13:55:48,586:INFO:Set up index.
2025-04-09 13:55:49,279:INFO:Initializing predict_model()
2025-04-09 13:55:49,279:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B6C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:49,280:INFO:Checking exceptions
2025-04-09 13:55:49,280:INFO:Preloading libraries
2025-04-09 13:55:49,280:INFO:Set up data.
2025-04-09 13:55:49,284:INFO:Set up index.
2025-04-09 13:55:49,931:INFO:Initializing predict_model()
2025-04-09 13:55:49,931:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B23D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:49,931:INFO:Checking exceptions
2025-04-09 13:55:49,932:INFO:Preloading libraries
2025-04-09 13:55:49,932:INFO:Set up data.
2025-04-09 13:55:49,938:INFO:Set up index.
2025-04-09 13:55:50,615:INFO:Initializing predict_model()
2025-04-09 13:55:50,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A6A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:50,616:INFO:Checking exceptions
2025-04-09 13:55:50,616:INFO:Preloading libraries
2025-04-09 13:55:50,616:INFO:Set up data.
2025-04-09 13:55:50,620:INFO:Set up index.
2025-04-09 13:55:51,252:INFO:Initializing predict_model()
2025-04-09 13:55:51,253:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121382390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:51,253:INFO:Checking exceptions
2025-04-09 13:55:51,253:INFO:Preloading libraries
2025-04-09 13:55:51,253:INFO:Set up data.
2025-04-09 13:55:51,258:INFO:Set up index.
2025-04-09 13:55:51,939:INFO:Initializing predict_model()
2025-04-09 13:55:51,940:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139E410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:51,940:INFO:Checking exceptions
2025-04-09 13:55:51,940:INFO:Preloading libraries
2025-04-09 13:55:51,940:INFO:Set up data.
2025-04-09 13:55:51,944:INFO:Set up index.
2025-04-09 13:55:52,623:INFO:Initializing predict_model()
2025-04-09 13:55:52,624:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A87D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:52,624:INFO:Checking exceptions
2025-04-09 13:55:52,624:INFO:Preloading libraries
2025-04-09 13:55:52,624:INFO:Set up data.
2025-04-09 13:55:52,630:INFO:Set up index.
2025-04-09 13:55:53,285:INFO:Initializing predict_model()
2025-04-09 13:55:53,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213AA8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:53,286:INFO:Checking exceptions
2025-04-09 13:55:53,286:INFO:Preloading libraries
2025-04-09 13:55:53,286:INFO:Set up data.
2025-04-09 13:55:53,291:INFO:Set up index.
2025-04-09 13:55:54,015:INFO:Initializing predict_model()
2025-04-09 13:55:54,015:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121383710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:54,016:INFO:Checking exceptions
2025-04-09 13:55:54,016:INFO:Preloading libraries
2025-04-09 13:55:54,016:INFO:Set up data.
2025-04-09 13:55:54,021:INFO:Set up index.
2025-04-09 13:55:54,788:INFO:Initializing predict_model()
2025-04-09 13:55:54,789:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:54,789:INFO:Checking exceptions
2025-04-09 13:55:54,789:INFO:Preloading libraries
2025-04-09 13:55:54,789:INFO:Set up data.
2025-04-09 13:55:54,793:INFO:Set up index.
2025-04-09 13:55:55,487:INFO:Initializing predict_model()
2025-04-09 13:55:55,487:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A1A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:55,487:INFO:Checking exceptions
2025-04-09 13:55:55,487:INFO:Preloading libraries
2025-04-09 13:55:55,488:INFO:Set up data.
2025-04-09 13:55:55,491:INFO:Set up index.
2025-04-09 13:55:56,351:INFO:Initializing predict_model()
2025-04-09 13:55:56,351:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:56,352:INFO:Checking exceptions
2025-04-09 13:55:56,352:INFO:Preloading libraries
2025-04-09 13:55:56,352:INFO:Set up data.
2025-04-09 13:55:56,357:INFO:Set up index.
2025-04-09 13:55:57,249:INFO:Initializing predict_model()
2025-04-09 13:55:57,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B4E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:57,249:INFO:Checking exceptions
2025-04-09 13:55:57,249:INFO:Preloading libraries
2025-04-09 13:55:57,250:INFO:Set up data.
2025-04-09 13:55:57,256:INFO:Set up index.
2025-04-09 13:55:58,066:INFO:Initializing predict_model()
2025-04-09 13:55:58,066:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:58,066:INFO:Checking exceptions
2025-04-09 13:55:58,066:INFO:Preloading libraries
2025-04-09 13:55:58,067:INFO:Set up data.
2025-04-09 13:55:58,074:INFO:Set up index.
2025-04-09 13:55:58,923:INFO:Initializing predict_model()
2025-04-09 13:55:58,924:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213BD3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:58,924:INFO:Checking exceptions
2025-04-09 13:55:58,924:INFO:Preloading libraries
2025-04-09 13:55:58,925:INFO:Set up data.
2025-04-09 13:55:58,930:INFO:Set up index.
2025-04-09 13:55:59,691:INFO:Initializing predict_model()
2025-04-09 13:55:59,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139E410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:55:59,691:INFO:Checking exceptions
2025-04-09 13:55:59,691:INFO:Preloading libraries
2025-04-09 13:55:59,692:INFO:Set up data.
2025-04-09 13:55:59,696:INFO:Set up index.
2025-04-09 13:56:00,527:INFO:Initializing predict_model()
2025-04-09 13:56:00,527:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A8150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:56:00,527:INFO:Checking exceptions
2025-04-09 13:56:00,527:INFO:Preloading libraries
2025-04-09 13:56:00,528:INFO:Set up data.
2025-04-09 13:56:00,533:INFO:Set up index.
2025-04-09 13:56:01,295:INFO:Initializing predict_model()
2025-04-09 13:56:01,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112138FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:56:01,295:INFO:Checking exceptions
2025-04-09 13:56:01,295:INFO:Preloading libraries
2025-04-09 13:56:01,296:INFO:Set up data.
2025-04-09 13:56:01,300:INFO:Set up index.
2025-04-09 13:56:02,020:INFO:Initializing predict_model()
2025-04-09 13:56:02,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213BE010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115D78C20>)
2025-04-09 13:56:02,020:INFO:Checking exceptions
2025-04-09 13:56:02,020:INFO:Preloading libraries
2025-04-09 13:56:02,021:INFO:Set up data.
2025-04-09 13:56:02,025:INFO:Set up index.
2025-04-09 13:56:02,808:INFO:Initializing predict_model()
2025-04-09 13:56:02,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121383810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:02,809:INFO:Checking exceptions
2025-04-09 13:56:02,809:INFO:Preloading libraries
2025-04-09 13:56:02,810:INFO:Set up data.
2025-04-09 13:56:02,815:INFO:Set up index.
2025-04-09 13:56:03,575:INFO:Initializing predict_model()
2025-04-09 13:56:03,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139B650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:03,575:INFO:Checking exceptions
2025-04-09 13:56:03,575:INFO:Preloading libraries
2025-04-09 13:56:03,576:INFO:Set up data.
2025-04-09 13:56:03,581:INFO:Set up index.
2025-04-09 13:56:04,424:INFO:Initializing predict_model()
2025-04-09 13:56:04,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A1CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:04,424:INFO:Checking exceptions
2025-04-09 13:56:04,425:INFO:Preloading libraries
2025-04-09 13:56:04,425:INFO:Set up data.
2025-04-09 13:56:04,430:INFO:Set up index.
2025-04-09 13:56:05,403:INFO:Initializing predict_model()
2025-04-09 13:56:05,403:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213B7F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:05,403:INFO:Checking exceptions
2025-04-09 13:56:05,403:INFO:Preloading libraries
2025-04-09 13:56:05,404:INFO:Set up data.
2025-04-09 13:56:05,411:INFO:Set up index.
2025-04-09 13:56:06,300:INFO:Initializing predict_model()
2025-04-09 13:56:06,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121382390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:06,301:INFO:Checking exceptions
2025-04-09 13:56:06,301:INFO:Preloading libraries
2025-04-09 13:56:06,301:INFO:Set up data.
2025-04-09 13:56:06,309:INFO:Set up index.
2025-04-09 13:56:07,143:INFO:Initializing predict_model()
2025-04-09 13:56:07,143:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002112139C7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:07,143:INFO:Checking exceptions
2025-04-09 13:56:07,143:INFO:Preloading libraries
2025-04-09 13:56:07,144:INFO:Set up data.
2025-04-09 13:56:07,151:INFO:Set up index.
2025-04-09 13:56:07,988:INFO:Initializing predict_model()
2025-04-09 13:56:07,988:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213986D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:07,988:INFO:Checking exceptions
2025-04-09 13:56:07,988:INFO:Preloading libraries
2025-04-09 13:56:07,989:INFO:Set up data.
2025-04-09 13:56:07,994:INFO:Set up index.
2025-04-09 13:56:08,736:INFO:Initializing predict_model()
2025-04-09 13:56:08,736:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021121398FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:08,736:INFO:Checking exceptions
2025-04-09 13:56:08,736:INFO:Preloading libraries
2025-04-09 13:56:08,737:INFO:Set up data.
2025-04-09 13:56:08,742:INFO:Set up index.
2025-04-09 13:56:09,497:INFO:Initializing predict_model()
2025-04-09 13:56:09,497:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213BF210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:09,497:INFO:Checking exceptions
2025-04-09 13:56:09,497:INFO:Preloading libraries
2025-04-09 13:56:09,497:INFO:Set up data.
2025-04-09 13:56:09,501:INFO:Set up index.
2025-04-09 13:56:10,299:INFO:Initializing predict_model()
2025-04-09 13:56:10,299:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A5B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:10,299:INFO:Checking exceptions
2025-04-09 13:56:10,300:INFO:Preloading libraries
2025-04-09 13:56:10,300:INFO:Set up data.
2025-04-09 13:56:10,304:INFO:Set up index.
2025-04-09 13:56:11,099:INFO:Initializing predict_model()
2025-04-09 13:56:11,099:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:11,099:INFO:Checking exceptions
2025-04-09 13:56:11,099:INFO:Preloading libraries
2025-04-09 13:56:11,100:INFO:Set up data.
2025-04-09 13:56:11,105:INFO:Set up index.
2025-04-09 13:56:11,836:INFO:Initializing predict_model()
2025-04-09 13:56:11,836:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A9F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:11,836:INFO:Checking exceptions
2025-04-09 13:56:11,837:INFO:Preloading libraries
2025-04-09 13:56:11,837:INFO:Set up data.
2025-04-09 13:56:11,842:INFO:Set up index.
2025-04-09 13:56:12,567:INFO:Initializing predict_model()
2025-04-09 13:56:12,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213C3BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:12,567:INFO:Checking exceptions
2025-04-09 13:56:12,567:INFO:Preloading libraries
2025-04-09 13:56:12,568:INFO:Set up data.
2025-04-09 13:56:12,574:INFO:Set up index.
2025-04-09 13:56:13,295:INFO:Initializing predict_model()
2025-04-09 13:56:13,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213ABAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:13,295:INFO:Checking exceptions
2025-04-09 13:56:13,295:INFO:Preloading libraries
2025-04-09 13:56:13,296:INFO:Set up data.
2025-04-09 13:56:13,299:INFO:Set up index.
2025-04-09 13:56:13,969:INFO:Initializing predict_model()
2025-04-09 13:56:13,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211213A1BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021121329B20>)
2025-04-09 13:56:13,969:INFO:Checking exceptions
2025-04-09 13:56:13,969:INFO:Preloading libraries
2025-04-09 13:56:13,970:INFO:Set up data.
2025-04-09 13:56:13,975:INFO:Set up index.
2025-04-09 13:56:33,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:56:33,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:56:33,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:56:33,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 13:56:37,573:INFO:Initializing load_model()
2025-04-09 13:56:37,573:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 13:56:37,624:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 13:56:41,990:INFO:Initializing predict_model()
2025-04-09 13:56:41,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EED20B5310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:41,990:INFO:Checking exceptions
2025-04-09 13:56:41,990:INFO:Preloading libraries
2025-04-09 13:56:41,991:INFO:Set up data.
2025-04-09 13:56:41,995:INFO:Set up index.
2025-04-09 13:56:42,707:INFO:Initializing predict_model()
2025-04-09 13:56:42,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4E8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:42,708:INFO:Checking exceptions
2025-04-09 13:56:42,708:INFO:Preloading libraries
2025-04-09 13:56:42,708:INFO:Set up data.
2025-04-09 13:56:42,713:INFO:Set up index.
2025-04-09 13:56:43,357:INFO:Initializing predict_model()
2025-04-09 13:56:43,358:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EED1F3D0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:43,358:INFO:Checking exceptions
2025-04-09 13:56:43,358:INFO:Preloading libraries
2025-04-09 13:56:43,358:INFO:Set up data.
2025-04-09 13:56:43,362:INFO:Set up index.
2025-04-09 13:56:44,059:INFO:Initializing predict_model()
2025-04-09 13:56:44,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4E1E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:44,059:INFO:Checking exceptions
2025-04-09 13:56:44,059:INFO:Preloading libraries
2025-04-09 13:56:44,059:INFO:Set up data.
2025-04-09 13:56:44,064:INFO:Set up index.
2025-04-09 13:56:44,790:INFO:Initializing predict_model()
2025-04-09 13:56:44,790:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDBE3F110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:44,790:INFO:Checking exceptions
2025-04-09 13:56:44,790:INFO:Preloading libraries
2025-04-09 13:56:44,791:INFO:Set up data.
2025-04-09 13:56:44,795:INFO:Set up index.
2025-04-09 13:56:45,501:INFO:Initializing predict_model()
2025-04-09 13:56:45,501:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD697390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:45,501:INFO:Checking exceptions
2025-04-09 13:56:45,501:INFO:Preloading libraries
2025-04-09 13:56:45,501:INFO:Set up data.
2025-04-09 13:56:45,505:INFO:Set up index.
2025-04-09 13:56:46,240:INFO:Initializing predict_model()
2025-04-09 13:56:46,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EED1F3D0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:46,241:INFO:Checking exceptions
2025-04-09 13:56:46,241:INFO:Preloading libraries
2025-04-09 13:56:46,241:INFO:Set up data.
2025-04-09 13:56:46,247:INFO:Set up index.
2025-04-09 13:56:46,942:INFO:Initializing predict_model()
2025-04-09 13:56:46,942:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4E56D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:46,942:INFO:Checking exceptions
2025-04-09 13:56:46,942:INFO:Preloading libraries
2025-04-09 13:56:46,942:INFO:Set up data.
2025-04-09 13:56:46,946:INFO:Set up index.
2025-04-09 13:56:47,605:INFO:Initializing predict_model()
2025-04-09 13:56:47,606:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD697390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:47,606:INFO:Checking exceptions
2025-04-09 13:56:47,606:INFO:Preloading libraries
2025-04-09 13:56:47,607:INFO:Set up data.
2025-04-09 13:56:47,612:INFO:Set up index.
2025-04-09 13:56:48,269:INFO:Initializing predict_model()
2025-04-09 13:56:48,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDC2F7B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:48,270:INFO:Checking exceptions
2025-04-09 13:56:48,270:INFO:Preloading libraries
2025-04-09 13:56:48,270:INFO:Set up data.
2025-04-09 13:56:48,275:INFO:Set up index.
2025-04-09 13:56:49,038:INFO:Initializing predict_model()
2025-04-09 13:56:49,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4E8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:49,039:INFO:Checking exceptions
2025-04-09 13:56:49,039:INFO:Preloading libraries
2025-04-09 13:56:49,039:INFO:Set up data.
2025-04-09 13:56:49,044:INFO:Set up index.
2025-04-09 13:56:49,683:INFO:Initializing predict_model()
2025-04-09 13:56:49,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BE050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:49,683:INFO:Checking exceptions
2025-04-09 13:56:49,683:INFO:Preloading libraries
2025-04-09 13:56:49,684:INFO:Set up data.
2025-04-09 13:56:49,689:INFO:Set up index.
2025-04-09 13:56:50,345:INFO:Initializing predict_model()
2025-04-09 13:56:50,345:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDC2F7B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EEDD679B20>)
2025-04-09 13:56:50,346:INFO:Checking exceptions
2025-04-09 13:56:50,346:INFO:Preloading libraries
2025-04-09 13:56:50,346:INFO:Set up data.
2025-04-09 13:56:50,350:INFO:Set up index.
2025-04-09 13:56:51,070:INFO:Initializing predict_model()
2025-04-09 13:56:51,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BE490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:56:51,070:INFO:Checking exceptions
2025-04-09 13:56:51,070:INFO:Preloading libraries
2025-04-09 13:56:51,070:INFO:Set up data.
2025-04-09 13:56:51,077:INFO:Set up index.
2025-04-09 13:56:51,728:INFO:Initializing predict_model()
2025-04-09 13:56:51,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EB450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:51,728:INFO:Checking exceptions
2025-04-09 13:56:51,728:INFO:Preloading libraries
2025-04-09 13:56:51,729:INFO:Set up data.
2025-04-09 13:56:51,732:INFO:Set up index.
2025-04-09 13:56:52,377:INFO:Initializing predict_model()
2025-04-09 13:56:52,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EED1D89890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:52,377:INFO:Checking exceptions
2025-04-09 13:56:52,378:INFO:Preloading libraries
2025-04-09 13:56:52,378:INFO:Set up data.
2025-04-09 13:56:52,382:INFO:Set up index.
2025-04-09 13:56:53,032:INFO:Initializing predict_model()
2025-04-09 13:56:53,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D3F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:53,032:INFO:Checking exceptions
2025-04-09 13:56:53,032:INFO:Preloading libraries
2025-04-09 13:56:53,033:INFO:Set up data.
2025-04-09 13:56:53,037:INFO:Set up index.
2025-04-09 13:56:53,715:INFO:Initializing predict_model()
2025-04-09 13:56:53,715:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDBED75D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:53,716:INFO:Checking exceptions
2025-04-09 13:56:53,716:INFO:Preloading libraries
2025-04-09 13:56:53,716:INFO:Set up data.
2025-04-09 13:56:53,721:INFO:Set up index.
2025-04-09 13:56:54,385:INFO:Initializing predict_model()
2025-04-09 13:56:54,394:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BEAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:54,394:INFO:Checking exceptions
2025-04-09 13:56:54,394:INFO:Preloading libraries
2025-04-09 13:56:54,395:INFO:Set up data.
2025-04-09 13:56:54,399:INFO:Set up index.
2025-04-09 13:56:55,067:INFO:Initializing predict_model()
2025-04-09 13:56:55,067:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D1B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:55,067:INFO:Checking exceptions
2025-04-09 13:56:55,067:INFO:Preloading libraries
2025-04-09 13:56:55,068:INFO:Set up data.
2025-04-09 13:56:55,072:INFO:Set up index.
2025-04-09 13:56:55,785:INFO:Initializing predict_model()
2025-04-09 13:56:55,785:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4E4A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:55,785:INFO:Checking exceptions
2025-04-09 13:56:55,785:INFO:Preloading libraries
2025-04-09 13:56:55,786:INFO:Set up data.
2025-04-09 13:56:55,789:INFO:Set up index.
2025-04-09 13:56:56,492:INFO:Initializing predict_model()
2025-04-09 13:56:56,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4E17D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:56,492:INFO:Checking exceptions
2025-04-09 13:56:56,492:INFO:Preloading libraries
2025-04-09 13:56:56,492:INFO:Set up data.
2025-04-09 13:56:56,496:INFO:Set up index.
2025-04-09 13:56:57,207:INFO:Initializing predict_model()
2025-04-09 13:56:57,207:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BEBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:57,207:INFO:Checking exceptions
2025-04-09 13:56:57,207:INFO:Preloading libraries
2025-04-09 13:56:57,208:INFO:Set up data.
2025-04-09 13:56:57,212:INFO:Set up index.
2025-04-09 13:56:57,912:INFO:Initializing predict_model()
2025-04-09 13:56:57,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DF1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:57,912:INFO:Checking exceptions
2025-04-09 13:56:57,912:INFO:Preloading libraries
2025-04-09 13:56:57,913:INFO:Set up data.
2025-04-09 13:56:57,917:INFO:Set up index.
2025-04-09 13:56:58,597:INFO:Initializing predict_model()
2025-04-09 13:56:58,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DEF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:58,597:INFO:Checking exceptions
2025-04-09 13:56:58,597:INFO:Preloading libraries
2025-04-09 13:56:58,598:INFO:Set up data.
2025-04-09 13:56:58,601:INFO:Set up index.
2025-04-09 13:56:59,252:INFO:Initializing predict_model()
2025-04-09 13:56:59,252:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D36D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:59,253:INFO:Checking exceptions
2025-04-09 13:56:59,253:INFO:Preloading libraries
2025-04-09 13:56:59,253:INFO:Set up data.
2025-04-09 13:56:59,257:INFO:Set up index.
2025-04-09 13:56:59,982:INFO:Initializing predict_model()
2025-04-09 13:56:59,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D18D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:56:59,982:INFO:Checking exceptions
2025-04-09 13:56:59,982:INFO:Preloading libraries
2025-04-09 13:56:59,982:INFO:Set up data.
2025-04-09 13:56:59,988:INFO:Set up index.
2025-04-09 13:57:00,744:INFO:Initializing predict_model()
2025-04-09 13:57:00,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BE3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:00,744:INFO:Checking exceptions
2025-04-09 13:57:00,744:INFO:Preloading libraries
2025-04-09 13:57:00,745:INFO:Set up data.
2025-04-09 13:57:00,750:INFO:Set up index.
2025-04-09 13:57:01,511:INFO:Initializing predict_model()
2025-04-09 13:57:01,511:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DFF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:01,511:INFO:Checking exceptions
2025-04-09 13:57:01,512:INFO:Preloading libraries
2025-04-09 13:57:01,512:INFO:Set up data.
2025-04-09 13:57:01,518:INFO:Set up index.
2025-04-09 13:57:02,207:INFO:Initializing predict_model()
2025-04-09 13:57:02,207:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DEF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:02,207:INFO:Checking exceptions
2025-04-09 13:57:02,208:INFO:Preloading libraries
2025-04-09 13:57:02,208:INFO:Set up data.
2025-04-09 13:57:02,212:INFO:Set up index.
2025-04-09 13:57:02,927:INFO:Initializing predict_model()
2025-04-09 13:57:02,927:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EED1F926D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:02,927:INFO:Checking exceptions
2025-04-09 13:57:02,927:INFO:Preloading libraries
2025-04-09 13:57:02,928:INFO:Set up data.
2025-04-09 13:57:02,932:INFO:Set up index.
2025-04-09 13:57:03,593:INFO:Initializing predict_model()
2025-04-09 13:57:03,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DC350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:03,593:INFO:Checking exceptions
2025-04-09 13:57:03,593:INFO:Preloading libraries
2025-04-09 13:57:03,593:INFO:Set up data.
2025-04-09 13:57:03,597:INFO:Set up index.
2025-04-09 13:57:04,287:INFO:Initializing predict_model()
2025-04-09 13:57:04,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DEA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:04,288:INFO:Checking exceptions
2025-04-09 13:57:04,288:INFO:Preloading libraries
2025-04-09 13:57:04,288:INFO:Set up data.
2025-04-09 13:57:04,293:INFO:Set up index.
2025-04-09 13:57:05,063:INFO:Initializing predict_model()
2025-04-09 13:57:05,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EEF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:05,063:INFO:Checking exceptions
2025-04-09 13:57:05,063:INFO:Preloading libraries
2025-04-09 13:57:05,064:INFO:Set up data.
2025-04-09 13:57:05,069:INFO:Set up index.
2025-04-09 13:57:05,724:INFO:Initializing predict_model()
2025-04-09 13:57:05,725:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6E8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:05,725:INFO:Checking exceptions
2025-04-09 13:57:05,725:INFO:Preloading libraries
2025-04-09 13:57:05,726:INFO:Set up data.
2025-04-09 13:57:05,730:INFO:Set up index.
2025-04-09 13:57:06,414:INFO:Initializing predict_model()
2025-04-09 13:57:06,414:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDBEACE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:06,414:INFO:Checking exceptions
2025-04-09 13:57:06,414:INFO:Preloading libraries
2025-04-09 13:57:06,415:INFO:Set up data.
2025-04-09 13:57:06,418:INFO:Set up index.
2025-04-09 13:57:07,130:INFO:Initializing predict_model()
2025-04-09 13:57:07,130:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6E9190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:07,130:INFO:Checking exceptions
2025-04-09 13:57:07,130:INFO:Preloading libraries
2025-04-09 13:57:07,130:INFO:Set up data.
2025-04-09 13:57:07,134:INFO:Set up index.
2025-04-09 13:57:07,820:INFO:Initializing predict_model()
2025-04-09 13:57:07,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DF410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:07,821:INFO:Checking exceptions
2025-04-09 13:57:07,821:INFO:Preloading libraries
2025-04-09 13:57:07,821:INFO:Set up data.
2025-04-09 13:57:07,825:INFO:Set up index.
2025-04-09 13:57:08,500:INFO:Initializing predict_model()
2025-04-09 13:57:08,500:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D3590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:08,500:INFO:Checking exceptions
2025-04-09 13:57:08,500:INFO:Preloading libraries
2025-04-09 13:57:08,501:INFO:Set up data.
2025-04-09 13:57:08,505:INFO:Set up index.
2025-04-09 13:57:09,200:INFO:Initializing predict_model()
2025-04-09 13:57:09,201:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD4B6CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:09,201:INFO:Checking exceptions
2025-04-09 13:57:09,201:INFO:Preloading libraries
2025-04-09 13:57:09,202:INFO:Set up data.
2025-04-09 13:57:09,207:INFO:Set up index.
2025-04-09 13:57:09,911:INFO:Initializing predict_model()
2025-04-09 13:57:09,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6E9450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:09,911:INFO:Checking exceptions
2025-04-09 13:57:09,911:INFO:Preloading libraries
2025-04-09 13:57:09,912:INFO:Set up data.
2025-04-09 13:57:09,915:INFO:Set up index.
2025-04-09 13:57:10,575:INFO:Initializing predict_model()
2025-04-09 13:57:10,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EED20198D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:10,576:INFO:Checking exceptions
2025-04-09 13:57:10,576:INFO:Preloading libraries
2025-04-09 13:57:10,576:INFO:Set up data.
2025-04-09 13:57:10,580:INFO:Set up index.
2025-04-09 13:57:11,269:INFO:Initializing predict_model()
2025-04-09 13:57:11,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F2C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:11,269:INFO:Checking exceptions
2025-04-09 13:57:11,269:INFO:Preloading libraries
2025-04-09 13:57:11,269:INFO:Set up data.
2025-04-09 13:57:11,273:INFO:Set up index.
2025-04-09 13:57:12,000:INFO:Initializing predict_model()
2025-04-09 13:57:12,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D2C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:12,000:INFO:Checking exceptions
2025-04-09 13:57:12,000:INFO:Preloading libraries
2025-04-09 13:57:12,001:INFO:Set up data.
2025-04-09 13:57:12,005:INFO:Set up index.
2025-04-09 13:57:12,759:INFO:Initializing predict_model()
2025-04-09 13:57:12,759:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BEC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:12,759:INFO:Checking exceptions
2025-04-09 13:57:12,759:INFO:Preloading libraries
2025-04-09 13:57:12,760:INFO:Set up data.
2025-04-09 13:57:12,765:INFO:Set up index.
2025-04-09 13:57:13,431:INFO:Initializing predict_model()
2025-04-09 13:57:13,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:13,431:INFO:Checking exceptions
2025-04-09 13:57:13,431:INFO:Preloading libraries
2025-04-09 13:57:13,432:INFO:Set up data.
2025-04-09 13:57:13,436:INFO:Set up index.
2025-04-09 13:57:14,187:INFO:Initializing predict_model()
2025-04-09 13:57:14,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D0750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:14,187:INFO:Checking exceptions
2025-04-09 13:57:14,187:INFO:Preloading libraries
2025-04-09 13:57:14,188:INFO:Set up data.
2025-04-09 13:57:14,193:INFO:Set up index.
2025-04-09 13:57:14,912:INFO:Initializing predict_model()
2025-04-09 13:57:14,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BECD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:14,912:INFO:Checking exceptions
2025-04-09 13:57:14,912:INFO:Preloading libraries
2025-04-09 13:57:14,913:INFO:Set up data.
2025-04-09 13:57:14,918:INFO:Set up index.
2025-04-09 13:57:15,602:INFO:Initializing predict_model()
2025-04-09 13:57:15,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6E9550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:15,603:INFO:Checking exceptions
2025-04-09 13:57:15,603:INFO:Preloading libraries
2025-04-09 13:57:15,603:INFO:Set up data.
2025-04-09 13:57:15,607:INFO:Set up index.
2025-04-09 13:57:16,278:INFO:Initializing predict_model()
2025-04-09 13:57:16,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EBC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:16,278:INFO:Checking exceptions
2025-04-09 13:57:16,278:INFO:Preloading libraries
2025-04-09 13:57:16,278:INFO:Set up data.
2025-04-09 13:57:16,283:INFO:Set up index.
2025-04-09 13:57:16,973:INFO:Initializing predict_model()
2025-04-09 13:57:16,973:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F0890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:16,973:INFO:Checking exceptions
2025-04-09 13:57:16,973:INFO:Preloading libraries
2025-04-09 13:57:16,973:INFO:Set up data.
2025-04-09 13:57:16,978:INFO:Set up index.
2025-04-09 13:57:17,686:INFO:Initializing predict_model()
2025-04-09 13:57:17,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BE450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:17,687:INFO:Checking exceptions
2025-04-09 13:57:17,687:INFO:Preloading libraries
2025-04-09 13:57:17,687:INFO:Set up data.
2025-04-09 13:57:17,691:INFO:Set up index.
2025-04-09 13:57:18,388:INFO:Initializing predict_model()
2025-04-09 13:57:18,389:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F0310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:18,389:INFO:Checking exceptions
2025-04-09 13:57:18,389:INFO:Preloading libraries
2025-04-09 13:57:18,389:INFO:Set up data.
2025-04-09 13:57:18,393:INFO:Set up index.
2025-04-09 13:57:19,115:INFO:Initializing predict_model()
2025-04-09 13:57:19,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:19,115:INFO:Checking exceptions
2025-04-09 13:57:19,115:INFO:Preloading libraries
2025-04-09 13:57:19,116:INFO:Set up data.
2025-04-09 13:57:19,122:INFO:Set up index.
2025-04-09 13:57:19,809:INFO:Initializing predict_model()
2025-04-09 13:57:19,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F38D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:19,810:INFO:Checking exceptions
2025-04-09 13:57:19,810:INFO:Preloading libraries
2025-04-09 13:57:19,810:INFO:Set up data.
2025-04-09 13:57:19,815:INFO:Set up index.
2025-04-09 13:57:20,535:INFO:Initializing predict_model()
2025-04-09 13:57:20,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D1450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:20,536:INFO:Checking exceptions
2025-04-09 13:57:20,536:INFO:Preloading libraries
2025-04-09 13:57:20,536:INFO:Set up data.
2025-04-09 13:57:20,540:INFO:Set up index.
2025-04-09 13:57:21,322:INFO:Initializing predict_model()
2025-04-09 13:57:21,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F0C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:21,323:INFO:Checking exceptions
2025-04-09 13:57:21,323:INFO:Preloading libraries
2025-04-09 13:57:21,323:INFO:Set up data.
2025-04-09 13:57:21,327:INFO:Set up index.
2025-04-09 13:57:22,024:INFO:Initializing predict_model()
2025-04-09 13:57:22,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BF5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:22,025:INFO:Checking exceptions
2025-04-09 13:57:22,025:INFO:Preloading libraries
2025-04-09 13:57:22,025:INFO:Set up data.
2025-04-09 13:57:22,029:INFO:Set up index.
2025-04-09 13:57:22,712:INFO:Initializing predict_model()
2025-04-09 13:57:22,712:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F11D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:22,712:INFO:Checking exceptions
2025-04-09 13:57:22,712:INFO:Preloading libraries
2025-04-09 13:57:22,713:INFO:Set up data.
2025-04-09 13:57:22,718:INFO:Set up index.
2025-04-09 13:57:23,439:INFO:Initializing predict_model()
2025-04-09 13:57:23,440:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DF5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:23,440:INFO:Checking exceptions
2025-04-09 13:57:23,440:INFO:Preloading libraries
2025-04-09 13:57:23,440:INFO:Set up data.
2025-04-09 13:57:23,445:INFO:Set up index.
2025-04-09 13:57:24,160:INFO:Initializing predict_model()
2025-04-09 13:57:24,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F2E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:24,161:INFO:Checking exceptions
2025-04-09 13:57:24,161:INFO:Preloading libraries
2025-04-09 13:57:24,161:INFO:Set up data.
2025-04-09 13:57:24,167:INFO:Set up index.
2025-04-09 13:57:24,864:INFO:Initializing predict_model()
2025-04-09 13:57:24,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EA490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:24,865:INFO:Checking exceptions
2025-04-09 13:57:24,865:INFO:Preloading libraries
2025-04-09 13:57:24,865:INFO:Set up data.
2025-04-09 13:57:24,869:INFO:Set up index.
2025-04-09 13:57:25,558:INFO:Initializing predict_model()
2025-04-09 13:57:25,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D3B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:25,558:INFO:Checking exceptions
2025-04-09 13:57:25,558:INFO:Preloading libraries
2025-04-09 13:57:25,558:INFO:Set up data.
2025-04-09 13:57:25,563:INFO:Set up index.
2025-04-09 13:57:26,309:INFO:Initializing predict_model()
2025-04-09 13:57:26,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6BF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:26,310:INFO:Checking exceptions
2025-04-09 13:57:26,310:INFO:Preloading libraries
2025-04-09 13:57:26,310:INFO:Set up data.
2025-04-09 13:57:26,313:INFO:Set up index.
2025-04-09 13:57:27,029:INFO:Initializing predict_model()
2025-04-09 13:57:27,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F1190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:27,029:INFO:Checking exceptions
2025-04-09 13:57:27,029:INFO:Preloading libraries
2025-04-09 13:57:27,029:INFO:Set up data.
2025-04-09 13:57:27,033:INFO:Set up index.
2025-04-09 13:57:27,717:INFO:Initializing predict_model()
2025-04-09 13:57:27,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D29D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:27,717:INFO:Checking exceptions
2025-04-09 13:57:27,717:INFO:Preloading libraries
2025-04-09 13:57:27,718:INFO:Set up data.
2025-04-09 13:57:27,723:INFO:Set up index.
2025-04-09 13:57:28,491:INFO:Initializing predict_model()
2025-04-09 13:57:28,491:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DCA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:28,492:INFO:Checking exceptions
2025-04-09 13:57:28,492:INFO:Preloading libraries
2025-04-09 13:57:28,492:INFO:Set up data.
2025-04-09 13:57:28,497:INFO:Set up index.
2025-04-09 13:57:29,224:INFO:Initializing predict_model()
2025-04-09 13:57:29,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDBECEF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:29,224:INFO:Checking exceptions
2025-04-09 13:57:29,224:INFO:Preloading libraries
2025-04-09 13:57:29,225:INFO:Set up data.
2025-04-09 13:57:29,228:INFO:Set up index.
2025-04-09 13:57:29,883:INFO:Initializing predict_model()
2025-04-09 13:57:29,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6ED210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:29,883:INFO:Checking exceptions
2025-04-09 13:57:29,883:INFO:Preloading libraries
2025-04-09 13:57:29,884:INFO:Set up data.
2025-04-09 13:57:29,888:INFO:Set up index.
2025-04-09 13:57:30,696:INFO:Initializing predict_model()
2025-04-09 13:57:30,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6ED6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:30,697:INFO:Checking exceptions
2025-04-09 13:57:30,697:INFO:Preloading libraries
2025-04-09 13:57:30,697:INFO:Set up data.
2025-04-09 13:57:30,702:INFO:Set up index.
2025-04-09 13:57:31,444:INFO:Initializing predict_model()
2025-04-09 13:57:31,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EDE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:31,444:INFO:Checking exceptions
2025-04-09 13:57:31,445:INFO:Preloading libraries
2025-04-09 13:57:31,445:INFO:Set up data.
2025-04-09 13:57:31,450:INFO:Set up index.
2025-04-09 13:57:32,144:INFO:Initializing predict_model()
2025-04-09 13:57:32,145:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D1490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:32,145:INFO:Checking exceptions
2025-04-09 13:57:32,145:INFO:Preloading libraries
2025-04-09 13:57:32,145:INFO:Set up data.
2025-04-09 13:57:32,151:INFO:Set up index.
2025-04-09 13:57:32,900:INFO:Initializing predict_model()
2025-04-09 13:57:32,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6ED110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:32,900:INFO:Checking exceptions
2025-04-09 13:57:32,900:INFO:Preloading libraries
2025-04-09 13:57:32,901:INFO:Set up data.
2025-04-09 13:57:32,904:INFO:Set up index.
2025-04-09 13:57:33,611:INFO:Initializing predict_model()
2025-04-09 13:57:33,611:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D0B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:33,612:INFO:Checking exceptions
2025-04-09 13:57:33,612:INFO:Preloading libraries
2025-04-09 13:57:33,612:INFO:Set up data.
2025-04-09 13:57:33,617:INFO:Set up index.
2025-04-09 13:57:34,345:INFO:Initializing predict_model()
2025-04-09 13:57:34,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D2610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:34,346:INFO:Checking exceptions
2025-04-09 13:57:34,346:INFO:Preloading libraries
2025-04-09 13:57:34,347:INFO:Set up data.
2025-04-09 13:57:34,353:INFO:Set up index.
2025-04-09 13:57:35,139:INFO:Initializing predict_model()
2025-04-09 13:57:35,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DDF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:35,140:INFO:Checking exceptions
2025-04-09 13:57:35,140:INFO:Preloading libraries
2025-04-09 13:57:35,140:INFO:Set up data.
2025-04-09 13:57:35,145:INFO:Set up index.
2025-04-09 13:57:35,831:INFO:Initializing predict_model()
2025-04-09 13:57:35,831:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6D1410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:35,831:INFO:Checking exceptions
2025-04-09 13:57:35,831:INFO:Preloading libraries
2025-04-09 13:57:35,832:INFO:Set up data.
2025-04-09 13:57:35,837:INFO:Set up index.
2025-04-09 13:57:36,550:INFO:Initializing predict_model()
2025-04-09 13:57:36,550:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F6710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:36,550:INFO:Checking exceptions
2025-04-09 13:57:36,551:INFO:Preloading libraries
2025-04-09 13:57:36,551:INFO:Set up data.
2025-04-09 13:57:36,555:INFO:Set up index.
2025-04-09 13:57:37,243:INFO:Initializing predict_model()
2025-04-09 13:57:37,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F6390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:37,244:INFO:Checking exceptions
2025-04-09 13:57:37,244:INFO:Preloading libraries
2025-04-09 13:57:37,244:INFO:Set up data.
2025-04-09 13:57:37,249:INFO:Set up index.
2025-04-09 13:57:38,003:INFO:Initializing predict_model()
2025-04-09 13:57:38,003:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6E81D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:38,004:INFO:Checking exceptions
2025-04-09 13:57:38,004:INFO:Preloading libraries
2025-04-09 13:57:38,004:INFO:Set up data.
2025-04-09 13:57:38,010:INFO:Set up index.
2025-04-09 13:57:38,739:INFO:Initializing predict_model()
2025-04-09 13:57:38,739:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F6390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:38,739:INFO:Checking exceptions
2025-04-09 13:57:38,739:INFO:Preloading libraries
2025-04-09 13:57:38,740:INFO:Set up data.
2025-04-09 13:57:38,745:INFO:Set up index.
2025-04-09 13:57:39,537:INFO:Initializing predict_model()
2025-04-09 13:57:39,537:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EEE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:39,537:INFO:Checking exceptions
2025-04-09 13:57:39,537:INFO:Preloading libraries
2025-04-09 13:57:39,538:INFO:Set up data.
2025-04-09 13:57:39,543:INFO:Set up index.
2025-04-09 13:57:40,348:INFO:Initializing predict_model()
2025-04-09 13:57:40,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EDE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:40,349:INFO:Checking exceptions
2025-04-09 13:57:40,349:INFO:Preloading libraries
2025-04-09 13:57:40,349:INFO:Set up data.
2025-04-09 13:57:40,355:INFO:Set up index.
2025-04-09 13:57:41,082:INFO:Initializing predict_model()
2025-04-09 13:57:41,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6EBB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:41,083:INFO:Checking exceptions
2025-04-09 13:57:41,083:INFO:Preloading libraries
2025-04-09 13:57:41,083:INFO:Set up data.
2025-04-09 13:57:41,088:INFO:Set up index.
2025-04-09 13:57:41,846:INFO:Initializing predict_model()
2025-04-09 13:57:41,846:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6E93D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:41,846:INFO:Checking exceptions
2025-04-09 13:57:41,846:INFO:Preloading libraries
2025-04-09 13:57:41,847:INFO:Set up data.
2025-04-09 13:57:41,851:INFO:Set up index.
2025-04-09 13:57:42,699:INFO:Initializing predict_model()
2025-04-09 13:57:42,700:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F6690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED21B8C20>)
2025-04-09 13:57:42,700:INFO:Checking exceptions
2025-04-09 13:57:42,700:INFO:Preloading libraries
2025-04-09 13:57:42,701:INFO:Set up data.
2025-04-09 13:57:42,707:INFO:Set up index.
2025-04-09 13:57:43,482:INFO:Initializing predict_model()
2025-04-09 13:57:43,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F2810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:43,482:INFO:Checking exceptions
2025-04-09 13:57:43,482:INFO:Preloading libraries
2025-04-09 13:57:43,482:INFO:Set up data.
2025-04-09 13:57:43,486:INFO:Set up index.
2025-04-09 13:57:44,278:INFO:Initializing predict_model()
2025-04-09 13:57:44,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6F3410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:44,278:INFO:Checking exceptions
2025-04-09 13:57:44,278:INFO:Preloading libraries
2025-04-09 13:57:44,279:INFO:Set up data.
2025-04-09 13:57:44,284:INFO:Set up index.
2025-04-09 13:57:45,067:INFO:Initializing predict_model()
2025-04-09 13:57:45,067:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EEDD6DD590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EED219ED40>)
2025-04-09 13:57:45,067:INFO:Checking exceptions
2025-04-09 13:57:45,067:INFO:Preloading libraries
2025-04-09 13:57:45,068:INFO:Set up data.
2025-04-09 13:57:45,073:INFO:Set up index.
2025-04-09 14:00:29,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:00:29,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:00:29,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:00:29,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:00:39,770:INFO:Initializing load_model()
2025-04-09 14:00:39,771:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:00:39,937:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:01:12,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:01:12,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:01:12,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:01:12,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:01:20,452:INFO:Initializing load_model()
2025-04-09 14:01:20,452:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:01:20,600:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:01:40,192:INFO:Initializing predict_model()
2025-04-09 14:01:40,193:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BD0EE510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD398C20>)
2025-04-09 14:01:40,193:INFO:Checking exceptions
2025-04-09 14:01:40,193:INFO:Preloading libraries
2025-04-09 14:01:40,195:INFO:Set up data.
2025-04-09 14:01:40,211:INFO:Set up index.
2025-04-09 14:01:41,693:INFO:Initializing predict_model()
2025-04-09 14:01:41,693:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BD08D050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD398C20>)
2025-04-09 14:01:41,694:INFO:Checking exceptions
2025-04-09 14:01:41,694:INFO:Preloading libraries
2025-04-09 14:01:41,695:INFO:Set up data.
2025-04-09 14:01:41,710:INFO:Set up index.
2025-04-09 14:01:43,216:INFO:Initializing predict_model()
2025-04-09 14:01:43,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BCF4FB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD398C20>)
2025-04-09 14:01:43,217:INFO:Checking exceptions
2025-04-09 14:01:43,217:INFO:Preloading libraries
2025-04-09 14:01:43,219:INFO:Set up data.
2025-04-09 14:01:43,231:INFO:Set up index.
2025-04-09 14:01:44,800:INFO:Initializing predict_model()
2025-04-09 14:01:44,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BCFC0A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD398C20>)
2025-04-09 14:01:44,801:INFO:Checking exceptions
2025-04-09 14:01:44,801:INFO:Preloading libraries
2025-04-09 14:01:44,802:INFO:Set up data.
2025-04-09 14:01:44,813:INFO:Set up index.
2025-04-09 14:01:46,456:INFO:Initializing predict_model()
2025-04-09 14:01:46,457:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BCF54F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD37ED40>)
2025-04-09 14:01:46,457:INFO:Checking exceptions
2025-04-09 14:01:46,457:INFO:Preloading libraries
2025-04-09 14:01:46,458:INFO:Set up data.
2025-04-09 14:01:46,467:INFO:Set up index.
2025-04-09 14:01:48,000:INFO:Initializing predict_model()
2025-04-09 14:01:48,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BCF6DF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD398C20>)
2025-04-09 14:01:48,000:INFO:Checking exceptions
2025-04-09 14:01:48,001:INFO:Preloading libraries
2025-04-09 14:01:48,002:INFO:Set up data.
2025-04-09 14:01:48,012:INFO:Set up index.
2025-04-09 14:01:49,670:INFO:Initializing predict_model()
2025-04-09 14:01:49,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C878EA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:49,670:INFO:Checking exceptions
2025-04-09 14:01:49,671:INFO:Preloading libraries
2025-04-09 14:01:49,671:INFO:Set up data.
2025-04-09 14:01:49,681:INFO:Set up index.
2025-04-09 14:01:51,202:INFO:Initializing predict_model()
2025-04-09 14:01:51,202:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C878D4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:51,203:INFO:Checking exceptions
2025-04-09 14:01:51,203:INFO:Preloading libraries
2025-04-09 14:01:51,204:INFO:Set up data.
2025-04-09 14:01:51,216:INFO:Set up index.
2025-04-09 14:01:52,759:INFO:Initializing predict_model()
2025-04-09 14:01:52,759:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C89822D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:52,759:INFO:Checking exceptions
2025-04-09 14:01:52,760:INFO:Preloading libraries
2025-04-09 14:01:52,761:INFO:Set up data.
2025-04-09 14:01:52,768:INFO:Set up index.
2025-04-09 14:01:54,339:INFO:Initializing predict_model()
2025-04-09 14:01:54,340:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C8983C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:54,340:INFO:Checking exceptions
2025-04-09 14:01:54,340:INFO:Preloading libraries
2025-04-09 14:01:54,341:INFO:Set up data.
2025-04-09 14:01:54,355:INFO:Set up index.
2025-04-09 14:01:55,928:INFO:Initializing predict_model()
2025-04-09 14:01:55,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C70D4AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:55,928:INFO:Checking exceptions
2025-04-09 14:01:55,929:INFO:Preloading libraries
2025-04-09 14:01:55,930:INFO:Set up data.
2025-04-09 14:01:55,940:INFO:Set up index.
2025-04-09 14:01:57,651:INFO:Initializing predict_model()
2025-04-09 14:01:57,651:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8BCF4E810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:57,652:INFO:Checking exceptions
2025-04-09 14:01:57,652:INFO:Preloading libraries
2025-04-09 14:01:57,653:INFO:Set up data.
2025-04-09 14:01:57,665:INFO:Set up index.
2025-04-09 14:01:59,255:INFO:Initializing predict_model()
2025-04-09 14:01:59,255:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C74FFB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8C892DB20>)
2025-04-09 14:01:59,255:INFO:Checking exceptions
2025-04-09 14:01:59,256:INFO:Preloading libraries
2025-04-09 14:01:59,257:INFO:Set up data.
2025-04-09 14:01:59,267:INFO:Set up index.
2025-04-09 14:02:00,896:INFO:Initializing predict_model()
2025-04-09 14:02:00,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C750F110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD37ED40>)
2025-04-09 14:02:00,897:INFO:Checking exceptions
2025-04-09 14:02:00,897:INFO:Preloading libraries
2025-04-09 14:02:00,898:INFO:Set up data.
2025-04-09 14:02:00,908:INFO:Set up index.
2025-04-09 14:02:02,644:INFO:Initializing predict_model()
2025-04-09 14:02:02,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C8980950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD37ED40>)
2025-04-09 14:02:02,645:INFO:Checking exceptions
2025-04-09 14:02:02,645:INFO:Preloading libraries
2025-04-09 14:02:02,645:INFO:Set up data.
2025-04-09 14:02:02,656:INFO:Set up index.
2025-04-09 14:02:04,286:INFO:Initializing predict_model()
2025-04-09 14:02:04,286:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8C8982D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8BD37ED40>)
2025-04-09 14:02:04,286:INFO:Checking exceptions
2025-04-09 14:02:04,286:INFO:Preloading libraries
2025-04-09 14:02:04,287:INFO:Set up data.
2025-04-09 14:02:04,298:INFO:Set up index.
2025-04-09 14:05:07,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:05:07,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:05:07,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:05:07,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:05:16,766:INFO:Initializing load_model()
2025-04-09 14:05:16,767:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:05:16,941:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:05:29,450:INFO:Initializing predict_model()
2025-04-09 14:05:29,450:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B489EC810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B48DB3D80>)
2025-04-09 14:05:29,451:INFO:Checking exceptions
2025-04-09 14:05:29,451:INFO:Preloading libraries
2025-04-09 14:05:29,453:INFO:Set up data.
2025-04-09 14:05:29,467:INFO:Set up index.
2025-04-09 14:05:39,153:INFO:Initializing predict_model()
2025-04-09 14:05:39,153:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B52AAFD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B48DB3D80>)
2025-04-09 14:05:39,153:INFO:Checking exceptions
2025-04-09 14:05:39,153:INFO:Preloading libraries
2025-04-09 14:05:39,154:INFO:Set up data.
2025-04-09 14:05:39,166:INFO:Set up index.
2025-04-09 14:05:40,721:INFO:Initializing predict_model()
2025-04-09 14:05:40,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B52ACD310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B48DB3D80>)
2025-04-09 14:05:40,721:INFO:Checking exceptions
2025-04-09 14:05:40,722:INFO:Preloading libraries
2025-04-09 14:05:40,723:INFO:Set up data.
2025-04-09 14:05:40,732:INFO:Set up index.
2025-04-09 14:05:42,268:INFO:Initializing predict_model()
2025-04-09 14:05:42,268:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B542C5490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B48DB3D80>)
2025-04-09 14:05:42,268:INFO:Checking exceptions
2025-04-09 14:05:42,269:INFO:Preloading libraries
2025-04-09 14:05:42,270:INFO:Set up data.
2025-04-09 14:05:42,279:INFO:Set up index.
2025-04-09 14:05:43,799:INFO:Initializing predict_model()
2025-04-09 14:05:43,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B48D1D550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B48DB3D80>)
2025-04-09 14:05:43,800:INFO:Checking exceptions
2025-04-09 14:05:43,800:INFO:Preloading libraries
2025-04-09 14:05:43,801:INFO:Set up data.
2025-04-09 14:05:43,810:INFO:Set up index.
2025-04-09 14:05:45,338:INFO:Initializing predict_model()
2025-04-09 14:05:45,338:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B48C60350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5429DB20>)
2025-04-09 14:05:45,339:INFO:Checking exceptions
2025-04-09 14:05:45,339:INFO:Preloading libraries
2025-04-09 14:05:45,340:INFO:Set up data.
2025-04-09 14:05:45,349:INFO:Set up index.
2025-04-09 14:05:47,023:INFO:Initializing predict_model()
2025-04-09 14:05:47,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B48D1CAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B48DB3D80>)
2025-04-09 14:05:47,024:INFO:Checking exceptions
2025-04-09 14:05:47,024:INFO:Preloading libraries
2025-04-09 14:05:47,025:INFO:Set up data.
2025-04-09 14:05:47,035:INFO:Set up index.
2025-04-09 14:05:48,613:INFO:Initializing predict_model()
2025-04-09 14:05:48,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B542F33D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:48,614:INFO:Checking exceptions
2025-04-09 14:05:48,614:INFO:Preloading libraries
2025-04-09 14:05:48,615:INFO:Set up data.
2025-04-09 14:05:48,623:INFO:Set up index.
2025-04-09 14:05:50,199:INFO:Initializing predict_model()
2025-04-09 14:05:50,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B542AF5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:50,200:INFO:Checking exceptions
2025-04-09 14:05:50,200:INFO:Preloading libraries
2025-04-09 14:05:50,201:INFO:Set up data.
2025-04-09 14:05:50,213:INFO:Set up index.
2025-04-09 14:05:51,760:INFO:Initializing predict_model()
2025-04-09 14:05:51,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B52EAB110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:51,761:INFO:Checking exceptions
2025-04-09 14:05:51,761:INFO:Preloading libraries
2025-04-09 14:05:51,762:INFO:Set up data.
2025-04-09 14:05:51,774:INFO:Set up index.
2025-04-09 14:05:53,308:INFO:Initializing predict_model()
2025-04-09 14:05:53,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B542F3A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:53,309:INFO:Checking exceptions
2025-04-09 14:05:53,310:INFO:Preloading libraries
2025-04-09 14:05:53,311:INFO:Set up data.
2025-04-09 14:05:53,321:INFO:Set up index.
2025-04-09 14:05:54,817:INFO:Initializing predict_model()
2025-04-09 14:05:54,818:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B542DF5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:54,818:INFO:Checking exceptions
2025-04-09 14:05:54,818:INFO:Preloading libraries
2025-04-09 14:05:54,819:INFO:Set up data.
2025-04-09 14:05:54,829:INFO:Set up index.
2025-04-09 14:05:56,367:INFO:Initializing predict_model()
2025-04-09 14:05:56,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B542DF010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:56,369:INFO:Checking exceptions
2025-04-09 14:05:56,369:INFO:Preloading libraries
2025-04-09 14:05:56,370:INFO:Set up data.
2025-04-09 14:05:56,380:INFO:Set up index.
2025-04-09 14:05:57,922:INFO:Initializing predict_model()
2025-04-09 14:05:57,923:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018B52EAB110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018B5225F240>)
2025-04-09 14:05:57,923:INFO:Checking exceptions
2025-04-09 14:05:57,923:INFO:Preloading libraries
2025-04-09 14:05:57,924:INFO:Set up data.
2025-04-09 14:05:57,933:INFO:Set up index.
2025-04-09 14:14:08,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:14:08,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:14:08,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:14:08,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:14:15,085:INFO:Initializing load_model()
2025-04-09 14:14:15,085:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:14:15,144:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:15:09,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:15:09,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:15:09,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:15:09,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:15:13,403:INFO:Initializing load_model()
2025-04-09 14:15:13,403:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:15:13,456:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:16:18,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:16:18,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:16:18,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:16:18,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:16:26,579:INFO:Initializing load_model()
2025-04-09 14:16:26,579:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:16:26,659:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:24:28,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:24:28,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:24:28,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:24:28,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:24:45,708:INFO:Initializing load_model()
2025-04-09 14:24:45,708:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:24:46,003:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:28:12,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:28:12,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:28:12,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:28:12,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:28:16,445:INFO:Initializing load_model()
2025-04-09 14:28:16,445:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:28:16,507:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:28:21,524:INFO:Initializing predict_model()
2025-04-09 14:28:21,524:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E054C710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:21,525:INFO:Checking exceptions
2025-04-09 14:28:21,525:INFO:Preloading libraries
2025-04-09 14:28:21,526:INFO:Set up data.
2025-04-09 14:28:21,537:INFO:Set up index.
2025-04-09 14:28:22,484:INFO:Initializing predict_model()
2025-04-09 14:28:22,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E06D4190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:22,498:INFO:Checking exceptions
2025-04-09 14:28:22,498:INFO:Preloading libraries
2025-04-09 14:28:22,498:INFO:Set up data.
2025-04-09 14:28:22,498:INFO:Set up index.
2025-04-09 14:28:23,230:INFO:Initializing predict_model()
2025-04-09 14:28:23,230:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E032BF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:23,230:INFO:Checking exceptions
2025-04-09 14:28:23,230:INFO:Preloading libraries
2025-04-09 14:28:23,230:INFO:Set up data.
2025-04-09 14:28:23,230:INFO:Set up index.
2025-04-09 14:28:24,019:INFO:Initializing predict_model()
2025-04-09 14:28:24,019:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBC84AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:24,019:INFO:Checking exceptions
2025-04-09 14:28:24,020:INFO:Preloading libraries
2025-04-09 14:28:24,020:INFO:Set up data.
2025-04-09 14:28:24,027:INFO:Set up index.
2025-04-09 14:28:24,870:INFO:Initializing predict_model()
2025-04-09 14:28:24,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E0852410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:24,870:INFO:Checking exceptions
2025-04-09 14:28:24,870:INFO:Preloading libraries
2025-04-09 14:28:24,870:INFO:Set up data.
2025-04-09 14:28:24,870:INFO:Set up index.
2025-04-09 14:28:25,672:INFO:Initializing predict_model()
2025-04-09 14:28:25,672:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E054C710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:25,672:INFO:Checking exceptions
2025-04-09 14:28:25,672:INFO:Preloading libraries
2025-04-09 14:28:25,672:INFO:Set up data.
2025-04-09 14:28:25,679:INFO:Set up index.
2025-04-09 14:28:26,541:INFO:Initializing predict_model()
2025-04-09 14:28:26,541:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E06BB1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:26,541:INFO:Checking exceptions
2025-04-09 14:28:26,541:INFO:Preloading libraries
2025-04-09 14:28:26,541:INFO:Set up data.
2025-04-09 14:28:26,541:INFO:Set up index.
2025-04-09 14:28:27,324:INFO:Initializing predict_model()
2025-04-09 14:28:27,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E05578D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:27,324:INFO:Checking exceptions
2025-04-09 14:28:27,324:INFO:Preloading libraries
2025-04-09 14:28:27,324:INFO:Set up data.
2025-04-09 14:28:27,340:INFO:Set up index.
2025-04-09 14:28:28,124:INFO:Initializing predict_model()
2025-04-09 14:28:28,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBC81210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:28,124:INFO:Checking exceptions
2025-04-09 14:28:28,124:INFO:Preloading libraries
2025-04-09 14:28:28,124:INFO:Set up data.
2025-04-09 14:28:28,124:INFO:Set up index.
2025-04-09 14:28:29,001:INFO:Initializing predict_model()
2025-04-09 14:28:29,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E065BED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:29,001:INFO:Checking exceptions
2025-04-09 14:28:29,001:INFO:Preloading libraries
2025-04-09 14:28:29,001:INFO:Set up data.
2025-04-09 14:28:29,001:INFO:Set up index.
2025-04-09 14:28:29,783:INFO:Initializing predict_model()
2025-04-09 14:28:29,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE5F710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:29,783:INFO:Checking exceptions
2025-04-09 14:28:29,783:INFO:Preloading libraries
2025-04-09 14:28:29,783:INFO:Set up data.
2025-04-09 14:28:29,783:INFO:Set up index.
2025-04-09 14:28:30,480:INFO:Initializing predict_model()
2025-04-09 14:28:30,480:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E0852310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:30,480:INFO:Checking exceptions
2025-04-09 14:28:30,480:INFO:Preloading libraries
2025-04-09 14:28:30,480:INFO:Set up data.
2025-04-09 14:28:30,490:INFO:Set up index.
2025-04-09 14:28:31,205:INFO:Initializing predict_model()
2025-04-09 14:28:31,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EAA8F7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4EBE1DB20>)
2025-04-09 14:28:31,205:INFO:Checking exceptions
2025-04-09 14:28:31,205:INFO:Preloading libraries
2025-04-09 14:28:31,205:INFO:Set up data.
2025-04-09 14:28:31,211:INFO:Set up index.
2025-04-09 14:28:31,938:INFO:Initializing predict_model()
2025-04-09 14:28:31,938:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EA6702D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:31,938:INFO:Checking exceptions
2025-04-09 14:28:31,938:INFO:Preloading libraries
2025-04-09 14:28:31,938:INFO:Set up data.
2025-04-09 14:28:31,945:INFO:Set up index.
2025-04-09 14:28:32,665:INFO:Initializing predict_model()
2025-04-09 14:28:32,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE5F550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:32,665:INFO:Checking exceptions
2025-04-09 14:28:32,665:INFO:Preloading libraries
2025-04-09 14:28:32,665:INFO:Set up data.
2025-04-09 14:28:32,665:INFO:Set up index.
2025-04-09 14:28:33,356:INFO:Initializing predict_model()
2025-04-09 14:28:33,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBC75D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:33,356:INFO:Checking exceptions
2025-04-09 14:28:33,356:INFO:Preloading libraries
2025-04-09 14:28:33,356:INFO:Set up data.
2025-04-09 14:28:33,356:INFO:Set up index.
2025-04-09 14:28:34,059:INFO:Initializing predict_model()
2025-04-09 14:28:34,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE72790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:34,059:INFO:Checking exceptions
2025-04-09 14:28:34,059:INFO:Preloading libraries
2025-04-09 14:28:34,059:INFO:Set up data.
2025-04-09 14:28:34,075:INFO:Set up index.
2025-04-09 14:28:34,733:INFO:Initializing predict_model()
2025-04-09 14:28:34,733:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EA672850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:34,733:INFO:Checking exceptions
2025-04-09 14:28:34,733:INFO:Preloading libraries
2025-04-09 14:28:34,733:INFO:Set up data.
2025-04-09 14:28:34,749:INFO:Set up index.
2025-04-09 14:28:35,440:INFO:Initializing predict_model()
2025-04-09 14:28:35,440:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBC84B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:35,440:INFO:Checking exceptions
2025-04-09 14:28:35,440:INFO:Preloading libraries
2025-04-09 14:28:35,440:INFO:Set up data.
2025-04-09 14:28:35,456:INFO:Set up index.
2025-04-09 14:28:36,176:INFO:Initializing predict_model()
2025-04-09 14:28:36,176:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE5F250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:36,176:INFO:Checking exceptions
2025-04-09 14:28:36,176:INFO:Preloading libraries
2025-04-09 14:28:36,176:INFO:Set up data.
2025-04-09 14:28:36,176:INFO:Set up index.
2025-04-09 14:28:36,959:INFO:Initializing predict_model()
2025-04-09 14:28:36,959:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7FD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:36,959:INFO:Checking exceptions
2025-04-09 14:28:36,959:INFO:Preloading libraries
2025-04-09 14:28:36,959:INFO:Set up data.
2025-04-09 14:28:36,959:INFO:Set up index.
2025-04-09 14:28:37,618:INFO:Initializing predict_model()
2025-04-09 14:28:37,618:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7E050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:37,618:INFO:Checking exceptions
2025-04-09 14:28:37,618:INFO:Preloading libraries
2025-04-09 14:28:37,618:INFO:Set up data.
2025-04-09 14:28:37,634:INFO:Set up index.
2025-04-09 14:28:38,396:INFO:Initializing predict_model()
2025-04-09 14:28:38,396:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE73150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:38,396:INFO:Checking exceptions
2025-04-09 14:28:38,396:INFO:Preloading libraries
2025-04-09 14:28:38,400:INFO:Set up data.
2025-04-09 14:28:38,400:INFO:Set up index.
2025-04-09 14:28:39,105:INFO:Initializing predict_model()
2025-04-09 14:28:39,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7FB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:39,105:INFO:Checking exceptions
2025-04-09 14:28:39,105:INFO:Preloading libraries
2025-04-09 14:28:39,105:INFO:Set up data.
2025-04-09 14:28:39,105:INFO:Set up index.
2025-04-09 14:28:39,812:INFO:Initializing predict_model()
2025-04-09 14:28:39,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7AAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:39,812:INFO:Checking exceptions
2025-04-09 14:28:39,812:INFO:Preloading libraries
2025-04-09 14:28:39,812:INFO:Set up data.
2025-04-09 14:28:39,827:INFO:Set up index.
2025-04-09 14:28:40,550:INFO:Initializing predict_model()
2025-04-09 14:28:40,551:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8E9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:40,551:INFO:Checking exceptions
2025-04-09 14:28:40,551:INFO:Preloading libraries
2025-04-09 14:28:40,552:INFO:Set up data.
2025-04-09 14:28:40,552:INFO:Set up index.
2025-04-09 14:28:41,263:INFO:Initializing predict_model()
2025-04-09 14:28:41,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EA672850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:41,263:INFO:Checking exceptions
2025-04-09 14:28:41,263:INFO:Preloading libraries
2025-04-09 14:28:41,264:INFO:Set up data.
2025-04-09 14:28:41,268:INFO:Set up index.
2025-04-09 14:28:41,989:INFO:Initializing predict_model()
2025-04-09 14:28:41,989:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7A550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:41,989:INFO:Checking exceptions
2025-04-09 14:28:41,989:INFO:Preloading libraries
2025-04-09 14:28:41,989:INFO:Set up data.
2025-04-09 14:28:41,989:INFO:Set up index.
2025-04-09 14:28:42,756:INFO:Initializing predict_model()
2025-04-09 14:28:42,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7E510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:42,756:INFO:Checking exceptions
2025-04-09 14:28:42,756:INFO:Preloading libraries
2025-04-09 14:28:42,758:INFO:Set up data.
2025-04-09 14:28:42,758:INFO:Set up index.
2025-04-09 14:28:43,461:INFO:Initializing predict_model()
2025-04-09 14:28:43,461:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7F4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:43,461:INFO:Checking exceptions
2025-04-09 14:28:43,461:INFO:Preloading libraries
2025-04-09 14:28:43,462:INFO:Set up data.
2025-04-09 14:28:43,467:INFO:Set up index.
2025-04-09 14:28:44,230:INFO:Initializing predict_model()
2025-04-09 14:28:44,230:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EAA2A250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:44,230:INFO:Checking exceptions
2025-04-09 14:28:44,230:INFO:Preloading libraries
2025-04-09 14:28:44,230:INFO:Set up data.
2025-04-09 14:28:44,230:INFO:Set up index.
2025-04-09 14:28:44,999:INFO:Initializing predict_model()
2025-04-09 14:28:44,999:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8F1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:44,999:INFO:Checking exceptions
2025-04-09 14:28:44,999:INFO:Preloading libraries
2025-04-09 14:28:45,006:INFO:Set up data.
2025-04-09 14:28:45,010:INFO:Set up index.
2025-04-09 14:28:45,687:INFO:Initializing predict_model()
2025-04-09 14:28:45,687:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE5D390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:45,687:INFO:Checking exceptions
2025-04-09 14:28:45,687:INFO:Preloading libraries
2025-04-09 14:28:45,687:INFO:Set up data.
2025-04-09 14:28:45,703:INFO:Set up index.
2025-04-09 14:28:46,454:INFO:Initializing predict_model()
2025-04-09 14:28:46,454:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE72890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:46,454:INFO:Checking exceptions
2025-04-09 14:28:46,454:INFO:Preloading libraries
2025-04-09 14:28:46,454:INFO:Set up data.
2025-04-09 14:28:46,454:INFO:Set up index.
2025-04-09 14:28:47,129:INFO:Initializing predict_model()
2025-04-09 14:28:47,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE713D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:47,129:INFO:Checking exceptions
2025-04-09 14:28:47,129:INFO:Preloading libraries
2025-04-09 14:28:47,129:INFO:Set up data.
2025-04-09 14:28:47,129:INFO:Set up index.
2025-04-09 14:28:47,834:INFO:Initializing predict_model()
2025-04-09 14:28:47,834:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE70410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:47,834:INFO:Checking exceptions
2025-04-09 14:28:47,834:INFO:Preloading libraries
2025-04-09 14:28:47,834:INFO:Set up data.
2025-04-09 14:28:47,834:INFO:Set up index.
2025-04-09 14:28:48,616:INFO:Initializing predict_model()
2025-04-09 14:28:48,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8C090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:48,616:INFO:Checking exceptions
2025-04-09 14:28:48,616:INFO:Preloading libraries
2025-04-09 14:28:48,616:INFO:Set up data.
2025-04-09 14:28:48,632:INFO:Set up index.
2025-04-09 14:28:49,291:INFO:Initializing predict_model()
2025-04-09 14:28:49,291:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8D4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:49,291:INFO:Checking exceptions
2025-04-09 14:28:49,291:INFO:Preloading libraries
2025-04-09 14:28:49,291:INFO:Set up data.
2025-04-09 14:28:49,307:INFO:Set up index.
2025-04-09 14:28:50,027:INFO:Initializing predict_model()
2025-04-09 14:28:50,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8D050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:50,027:INFO:Checking exceptions
2025-04-09 14:28:50,027:INFO:Preloading libraries
2025-04-09 14:28:50,027:INFO:Set up data.
2025-04-09 14:28:50,043:INFO:Set up index.
2025-04-09 14:28:50,777:INFO:Initializing predict_model()
2025-04-09 14:28:50,777:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8D650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:28:50,777:INFO:Checking exceptions
2025-04-09 14:28:50,777:INFO:Preloading libraries
2025-04-09 14:28:50,777:INFO:Set up data.
2025-04-09 14:28:50,777:INFO:Set up index.
2025-04-09 14:28:51,483:INFO:Initializing predict_model()
2025-04-09 14:28:51,483:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8E190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:51,483:INFO:Checking exceptions
2025-04-09 14:28:51,483:INFO:Preloading libraries
2025-04-09 14:28:51,483:INFO:Set up data.
2025-04-09 14:28:51,499:INFO:Set up index.
2025-04-09 14:28:52,423:INFO:Initializing predict_model()
2025-04-09 14:28:52,423:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7DA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:52,423:INFO:Checking exceptions
2025-04-09 14:28:52,423:INFO:Preloading libraries
2025-04-09 14:28:52,423:INFO:Set up data.
2025-04-09 14:28:52,423:INFO:Set up index.
2025-04-09 14:28:53,459:INFO:Initializing predict_model()
2025-04-09 14:28:53,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE71490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:28:53,459:INFO:Checking exceptions
2025-04-09 14:28:53,459:INFO:Preloading libraries
2025-04-09 14:28:53,459:INFO:Set up data.
2025-04-09 14:28:53,459:INFO:Set up index.
2025-04-09 14:29:01,971:INFO:Initializing predict_model()
2025-04-09 14:29:01,971:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE73A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:01,971:INFO:Checking exceptions
2025-04-09 14:29:01,971:INFO:Preloading libraries
2025-04-09 14:29:01,971:INFO:Set up data.
2025-04-09 14:29:01,971:INFO:Set up index.
2025-04-09 14:29:02,760:INFO:Initializing predict_model()
2025-04-09 14:29:02,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8EC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:02,760:INFO:Checking exceptions
2025-04-09 14:29:02,760:INFO:Preloading libraries
2025-04-09 14:29:02,760:INFO:Set up data.
2025-04-09 14:29:02,776:INFO:Set up index.
2025-04-09 14:29:03,512:INFO:Initializing predict_model()
2025-04-09 14:29:03,512:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7CA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:03,512:INFO:Checking exceptions
2025-04-09 14:29:03,512:INFO:Preloading libraries
2025-04-09 14:29:03,513:INFO:Set up data.
2025-04-09 14:29:03,517:INFO:Set up index.
2025-04-09 14:29:04,297:INFO:Initializing predict_model()
2025-04-09 14:29:04,297:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7E990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:04,297:INFO:Checking exceptions
2025-04-09 14:29:04,297:INFO:Preloading libraries
2025-04-09 14:29:04,297:INFO:Set up data.
2025-04-09 14:29:04,297:INFO:Set up index.
2025-04-09 14:29:05,007:INFO:Initializing predict_model()
2025-04-09 14:29:05,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7C050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:05,007:INFO:Checking exceptions
2025-04-09 14:29:05,007:INFO:Preloading libraries
2025-04-09 14:29:05,007:INFO:Set up data.
2025-04-09 14:29:05,023:INFO:Set up index.
2025-04-09 14:29:05,713:INFO:Initializing predict_model()
2025-04-09 14:29:05,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7B7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:05,713:INFO:Checking exceptions
2025-04-09 14:29:05,713:INFO:Preloading libraries
2025-04-09 14:29:05,713:INFO:Set up data.
2025-04-09 14:29:05,713:INFO:Set up index.
2025-04-09 14:29:06,458:INFO:Initializing predict_model()
2025-04-09 14:29:06,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8F0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:06,458:INFO:Checking exceptions
2025-04-09 14:29:06,458:INFO:Preloading libraries
2025-04-09 14:29:06,458:INFO:Set up data.
2025-04-09 14:29:06,458:INFO:Set up index.
2025-04-09 14:29:07,199:INFO:Initializing predict_model()
2025-04-09 14:29:07,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4E053C310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:07,199:INFO:Checking exceptions
2025-04-09 14:29:07,199:INFO:Preloading libraries
2025-04-09 14:29:07,199:INFO:Set up data.
2025-04-09 14:29:07,199:INFO:Set up index.
2025-04-09 14:29:07,904:INFO:Initializing predict_model()
2025-04-09 14:29:07,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE78C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:07,904:INFO:Checking exceptions
2025-04-09 14:29:07,904:INFO:Preloading libraries
2025-04-09 14:29:07,904:INFO:Set up data.
2025-04-09 14:29:07,904:INFO:Set up index.
2025-04-09 14:29:08,702:INFO:Initializing predict_model()
2025-04-09 14:29:08,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE88510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:08,702:INFO:Checking exceptions
2025-04-09 14:29:08,702:INFO:Preloading libraries
2025-04-09 14:29:08,702:INFO:Set up data.
2025-04-09 14:29:08,702:INFO:Set up index.
2025-04-09 14:29:09,468:INFO:Initializing predict_model()
2025-04-09 14:29:09,468:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE795D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:09,468:INFO:Checking exceptions
2025-04-09 14:29:09,468:INFO:Preloading libraries
2025-04-09 14:29:09,468:INFO:Set up data.
2025-04-09 14:29:09,484:INFO:Set up index.
2025-04-09 14:29:10,189:INFO:Initializing predict_model()
2025-04-09 14:29:10,189:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE79110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:10,189:INFO:Checking exceptions
2025-04-09 14:29:10,189:INFO:Preloading libraries
2025-04-09 14:29:10,189:INFO:Set up data.
2025-04-09 14:29:10,205:INFO:Set up index.
2025-04-09 14:29:10,918:INFO:Initializing predict_model()
2025-04-09 14:29:10,918:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7AC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:10,918:INFO:Checking exceptions
2025-04-09 14:29:10,918:INFO:Preloading libraries
2025-04-09 14:29:10,918:INFO:Set up data.
2025-04-09 14:29:10,927:INFO:Set up index.
2025-04-09 14:29:11,637:INFO:Initializing predict_model()
2025-04-09 14:29:11,637:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:11,637:INFO:Checking exceptions
2025-04-09 14:29:11,637:INFO:Preloading libraries
2025-04-09 14:29:11,638:INFO:Set up data.
2025-04-09 14:29:11,643:INFO:Set up index.
2025-04-09 14:29:12,420:INFO:Initializing predict_model()
2025-04-09 14:29:12,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7CF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:12,420:INFO:Checking exceptions
2025-04-09 14:29:12,420:INFO:Preloading libraries
2025-04-09 14:29:12,420:INFO:Set up data.
2025-04-09 14:29:12,429:INFO:Set up index.
2025-04-09 14:29:13,122:INFO:Initializing predict_model()
2025-04-09 14:29:13,122:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7F890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:13,122:INFO:Checking exceptions
2025-04-09 14:29:13,122:INFO:Preloading libraries
2025-04-09 14:29:13,122:INFO:Set up data.
2025-04-09 14:29:13,122:INFO:Set up index.
2025-04-09 14:29:13,808:INFO:Initializing predict_model()
2025-04-09 14:29:13,808:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8F610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:13,808:INFO:Checking exceptions
2025-04-09 14:29:13,808:INFO:Preloading libraries
2025-04-09 14:29:13,808:INFO:Set up data.
2025-04-09 14:29:13,808:INFO:Set up index.
2025-04-09 14:29:14,541:INFO:Initializing predict_model()
2025-04-09 14:29:14,541:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8DF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:14,541:INFO:Checking exceptions
2025-04-09 14:29:14,541:INFO:Preloading libraries
2025-04-09 14:29:14,541:INFO:Set up data.
2025-04-09 14:29:14,541:INFO:Set up index.
2025-04-09 14:29:15,276:INFO:Initializing predict_model()
2025-04-09 14:29:15,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBC84BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:15,276:INFO:Checking exceptions
2025-04-09 14:29:15,276:INFO:Preloading libraries
2025-04-09 14:29:15,276:INFO:Set up data.
2025-04-09 14:29:15,276:INFO:Set up index.
2025-04-09 14:29:16,014:INFO:Initializing predict_model()
2025-04-09 14:29:16,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8F110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:16,014:INFO:Checking exceptions
2025-04-09 14:29:16,014:INFO:Preloading libraries
2025-04-09 14:29:16,014:INFO:Set up data.
2025-04-09 14:29:16,014:INFO:Set up index.
2025-04-09 14:29:16,781:INFO:Initializing predict_model()
2025-04-09 14:29:16,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7E410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:16,781:INFO:Checking exceptions
2025-04-09 14:29:16,781:INFO:Preloading libraries
2025-04-09 14:29:16,781:INFO:Set up data.
2025-04-09 14:29:16,781:INFO:Set up index.
2025-04-09 14:29:17,530:INFO:Initializing predict_model()
2025-04-09 14:29:17,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE78650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:17,530:INFO:Checking exceptions
2025-04-09 14:29:17,530:INFO:Preloading libraries
2025-04-09 14:29:17,544:INFO:Set up data.
2025-04-09 14:29:17,544:INFO:Set up index.
2025-04-09 14:29:18,276:INFO:Initializing predict_model()
2025-04-09 14:29:18,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7C9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:18,276:INFO:Checking exceptions
2025-04-09 14:29:18,276:INFO:Preloading libraries
2025-04-09 14:29:18,292:INFO:Set up data.
2025-04-09 14:29:18,292:INFO:Set up index.
2025-04-09 14:29:18,995:INFO:Initializing predict_model()
2025-04-09 14:29:18,995:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8D6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:18,995:INFO:Checking exceptions
2025-04-09 14:29:18,995:INFO:Preloading libraries
2025-04-09 14:29:18,995:INFO:Set up data.
2025-04-09 14:29:18,995:INFO:Set up index.
2025-04-09 14:29:19,749:INFO:Initializing predict_model()
2025-04-09 14:29:19,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EA467490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:19,749:INFO:Checking exceptions
2025-04-09 14:29:19,749:INFO:Preloading libraries
2025-04-09 14:29:19,749:INFO:Set up data.
2025-04-09 14:29:19,749:INFO:Set up index.
2025-04-09 14:29:20,454:INFO:Initializing predict_model()
2025-04-09 14:29:20,454:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE88A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:20,454:INFO:Checking exceptions
2025-04-09 14:29:20,454:INFO:Preloading libraries
2025-04-09 14:29:20,454:INFO:Set up data.
2025-04-09 14:29:20,454:INFO:Set up index.
2025-04-09 14:29:21,203:INFO:Initializing predict_model()
2025-04-09 14:29:21,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7DC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E0913D80>)
2025-04-09 14:29:21,203:INFO:Checking exceptions
2025-04-09 14:29:21,203:INFO:Preloading libraries
2025-04-09 14:29:21,218:INFO:Set up data.
2025-04-09 14:29:21,218:INFO:Set up index.
2025-04-09 14:29:21,917:INFO:Initializing predict_model()
2025-04-09 14:29:21,923:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE73CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:21,923:INFO:Checking exceptions
2025-04-09 14:29:21,923:INFO:Preloading libraries
2025-04-09 14:29:21,923:INFO:Set up data.
2025-04-09 14:29:21,927:INFO:Set up index.
2025-04-09 14:29:22,675:INFO:Initializing predict_model()
2025-04-09 14:29:22,675:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE93090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:22,675:INFO:Checking exceptions
2025-04-09 14:29:22,675:INFO:Preloading libraries
2025-04-09 14:29:22,675:INFO:Set up data.
2025-04-09 14:29:22,675:INFO:Set up index.
2025-04-09 14:29:23,394:INFO:Initializing predict_model()
2025-04-09 14:29:23,394:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBC76390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:23,394:INFO:Checking exceptions
2025-04-09 14:29:23,394:INFO:Preloading libraries
2025-04-09 14:29:23,394:INFO:Set up data.
2025-04-09 14:29:23,409:INFO:Set up index.
2025-04-09 14:29:24,131:INFO:Initializing predict_model()
2025-04-09 14:29:24,131:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE97D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:24,131:INFO:Checking exceptions
2025-04-09 14:29:24,131:INFO:Preloading libraries
2025-04-09 14:29:24,131:INFO:Set up data.
2025-04-09 14:29:24,147:INFO:Set up index.
2025-04-09 14:29:24,915:INFO:Initializing predict_model()
2025-04-09 14:29:24,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8C190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:24,915:INFO:Checking exceptions
2025-04-09 14:29:24,915:INFO:Preloading libraries
2025-04-09 14:29:24,915:INFO:Set up data.
2025-04-09 14:29:24,915:INFO:Set up index.
2025-04-09 14:29:25,678:INFO:Initializing predict_model()
2025-04-09 14:29:25,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7F890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:25,679:INFO:Checking exceptions
2025-04-09 14:29:25,679:INFO:Preloading libraries
2025-04-09 14:29:25,679:INFO:Set up data.
2025-04-09 14:29:25,682:INFO:Set up index.
2025-04-09 14:29:26,382:INFO:Initializing predict_model()
2025-04-09 14:29:26,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE97510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:26,382:INFO:Checking exceptions
2025-04-09 14:29:26,382:INFO:Preloading libraries
2025-04-09 14:29:26,382:INFO:Set up data.
2025-04-09 14:29:26,382:INFO:Set up index.
2025-04-09 14:29:27,132:INFO:Initializing predict_model()
2025-04-09 14:29:27,132:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8CFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:27,132:INFO:Checking exceptions
2025-04-09 14:29:27,132:INFO:Preloading libraries
2025-04-09 14:29:27,132:INFO:Set up data.
2025-04-09 14:29:27,147:INFO:Set up index.
2025-04-09 14:29:27,850:INFO:Initializing predict_model()
2025-04-09 14:29:27,850:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE8D410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:27,851:INFO:Checking exceptions
2025-04-09 14:29:27,851:INFO:Preloading libraries
2025-04-09 14:29:27,852:INFO:Set up data.
2025-04-09 14:29:27,857:INFO:Set up index.
2025-04-09 14:29:28,637:INFO:Initializing predict_model()
2025-04-09 14:29:28,637:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE95B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:28,637:INFO:Checking exceptions
2025-04-09 14:29:28,637:INFO:Preloading libraries
2025-04-09 14:29:28,637:INFO:Set up data.
2025-04-09 14:29:28,637:INFO:Set up index.
2025-04-09 14:29:29,360:INFO:Initializing predict_model()
2025-04-09 14:29:29,360:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE977D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:29,360:INFO:Checking exceptions
2025-04-09 14:29:29,360:INFO:Preloading libraries
2025-04-09 14:29:29,360:INFO:Set up data.
2025-04-09 14:29:29,375:INFO:Set up index.
2025-04-09 14:29:30,113:INFO:Initializing predict_model()
2025-04-09 14:29:30,113:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE79610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:30,113:INFO:Checking exceptions
2025-04-09 14:29:30,113:INFO:Preloading libraries
2025-04-09 14:29:30,113:INFO:Set up data.
2025-04-09 14:29:30,128:INFO:Set up index.
2025-04-09 14:29:30,913:INFO:Initializing predict_model()
2025-04-09 14:29:30,913:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE723D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:30,913:INFO:Checking exceptions
2025-04-09 14:29:30,913:INFO:Preloading libraries
2025-04-09 14:29:30,913:INFO:Set up data.
2025-04-09 14:29:30,929:INFO:Set up index.
2025-04-09 14:29:31,713:INFO:Initializing predict_model()
2025-04-09 14:29:31,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE95C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:31,713:INFO:Checking exceptions
2025-04-09 14:29:31,713:INFO:Preloading libraries
2025-04-09 14:29:31,713:INFO:Set up data.
2025-04-09 14:29:31,728:INFO:Set up index.
2025-04-09 14:29:32,534:INFO:Initializing predict_model()
2025-04-09 14:29:32,534:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE7D5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:32,534:INFO:Checking exceptions
2025-04-09 14:29:32,534:INFO:Preloading libraries
2025-04-09 14:29:32,534:INFO:Set up data.
2025-04-09 14:29:32,537:INFO:Set up index.
2025-04-09 14:29:33,352:INFO:Initializing predict_model()
2025-04-09 14:29:33,352:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE90D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:33,352:INFO:Checking exceptions
2025-04-09 14:29:33,352:INFO:Preloading libraries
2025-04-09 14:29:33,352:INFO:Set up data.
2025-04-09 14:29:33,352:INFO:Set up index.
2025-04-09 14:29:34,118:INFO:Initializing predict_model()
2025-04-09 14:29:34,118:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E4EBE97890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E4E094AD40>)
2025-04-09 14:29:34,118:INFO:Checking exceptions
2025-04-09 14:29:34,118:INFO:Preloading libraries
2025-04-09 14:29:34,118:INFO:Set up data.
2025-04-09 14:29:34,118:INFO:Set up index.
2025-04-09 14:29:57,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:29:57,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:29:57,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:29:57,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:30:04,605:INFO:Initializing load_model()
2025-04-09 14:30:04,605:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:30:04,682:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:30:59,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:30:59,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:30:59,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:30:59,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:31:04,730:INFO:Initializing load_model()
2025-04-09 14:31:04,730:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:31:04,793:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:31:59,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:31:59,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:31:59,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:31:59,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:32:07,583:INFO:Initializing load_model()
2025-04-09 14:32:07,583:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:32:07,621:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:32:11,494:INFO:Initializing predict_model()
2025-04-09 14:32:11,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A82483D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:11,494:INFO:Checking exceptions
2025-04-09 14:32:11,494:INFO:Preloading libraries
2025-04-09 14:32:11,495:INFO:Set up data.
2025-04-09 14:32:11,500:INFO:Set up index.
2025-04-09 14:32:12,300:INFO:Initializing predict_model()
2025-04-09 14:32:12,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A7F4BAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:12,300:INFO:Checking exceptions
2025-04-09 14:32:12,301:INFO:Preloading libraries
2025-04-09 14:32:12,301:INFO:Set up data.
2025-04-09 14:32:12,307:INFO:Set up index.
2025-04-09 14:32:13,062:INFO:Initializing predict_model()
2025-04-09 14:32:13,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A825D050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:13,062:INFO:Checking exceptions
2025-04-09 14:32:13,062:INFO:Preloading libraries
2025-04-09 14:32:13,062:INFO:Set up data.
2025-04-09 14:32:13,062:INFO:Set up index.
2025-04-09 14:32:13,869:INFO:Initializing predict_model()
2025-04-09 14:32:13,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A813F3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:13,870:INFO:Checking exceptions
2025-04-09 14:32:13,870:INFO:Preloading libraries
2025-04-09 14:32:13,870:INFO:Set up data.
2025-04-09 14:32:13,876:INFO:Set up index.
2025-04-09 14:32:14,644:INFO:Initializing predict_model()
2025-04-09 14:32:14,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A81EC650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:14,645:INFO:Checking exceptions
2025-04-09 14:32:14,645:INFO:Preloading libraries
2025-04-09 14:32:14,645:INFO:Set up data.
2025-04-09 14:32:14,650:INFO:Set up index.
2025-04-09 14:32:15,398:INFO:Initializing predict_model()
2025-04-09 14:32:15,399:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2649350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:15,399:INFO:Checking exceptions
2025-04-09 14:32:15,399:INFO:Preloading libraries
2025-04-09 14:32:15,399:INFO:Set up data.
2025-04-09 14:32:15,401:INFO:Set up index.
2025-04-09 14:32:16,180:INFO:Initializing predict_model()
2025-04-09 14:32:16,180:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B265F110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:16,180:INFO:Checking exceptions
2025-04-09 14:32:16,180:INFO:Preloading libraries
2025-04-09 14:32:16,180:INFO:Set up data.
2025-04-09 14:32:16,185:INFO:Set up index.
2025-04-09 14:32:16,884:INFO:Initializing predict_model()
2025-04-09 14:32:16,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A1DD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:16,884:INFO:Checking exceptions
2025-04-09 14:32:16,884:INFO:Preloading libraries
2025-04-09 14:32:16,884:INFO:Set up data.
2025-04-09 14:32:16,890:INFO:Set up index.
2025-04-09 14:32:17,614:INFO:Initializing predict_model()
2025-04-09 14:32:17,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A62150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:17,614:INFO:Checking exceptions
2025-04-09 14:32:17,614:INFO:Preloading libraries
2025-04-09 14:32:17,614:INFO:Set up data.
2025-04-09 14:32:17,614:INFO:Set up index.
2025-04-09 14:32:18,299:INFO:Initializing predict_model()
2025-04-09 14:32:18,299:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A815EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:18,299:INFO:Checking exceptions
2025-04-09 14:32:18,299:INFO:Preloading libraries
2025-04-09 14:32:18,299:INFO:Set up data.
2025-04-09 14:32:18,299:INFO:Set up index.
2025-04-09 14:32:18,972:INFO:Initializing predict_model()
2025-04-09 14:32:18,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B28754D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:18,972:INFO:Checking exceptions
2025-04-09 14:32:18,972:INFO:Preloading libraries
2025-04-09 14:32:18,972:INFO:Set up data.
2025-04-09 14:32:18,972:INFO:Set up index.
2025-04-09 14:32:19,707:INFO:Initializing predict_model()
2025-04-09 14:32:19,707:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A82485D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:19,707:INFO:Checking exceptions
2025-04-09 14:32:19,707:INFO:Preloading libraries
2025-04-09 14:32:19,707:INFO:Set up data.
2025-04-09 14:32:19,707:INFO:Set up index.
2025-04-09 14:32:20,523:INFO:Initializing predict_model()
2025-04-09 14:32:20,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A84A3690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:20,523:INFO:Checking exceptions
2025-04-09 14:32:20,523:INFO:Preloading libraries
2025-04-09 14:32:20,523:INFO:Set up data.
2025-04-09 14:32:20,523:INFO:Set up index.
2025-04-09 14:32:21,353:INFO:Initializing predict_model()
2025-04-09 14:32:21,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A84A27D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A8533D80>)
2025-04-09 14:32:21,353:INFO:Checking exceptions
2025-04-09 14:32:21,353:INFO:Preloading libraries
2025-04-09 14:32:21,353:INFO:Set up data.
2025-04-09 14:32:21,353:INFO:Set up index.
2025-04-09 14:32:22,212:INFO:Initializing predict_model()
2025-04-09 14:32:22,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2871A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:22,212:INFO:Checking exceptions
2025-04-09 14:32:22,212:INFO:Preloading libraries
2025-04-09 14:32:22,212:INFO:Set up data.
2025-04-09 14:32:22,212:INFO:Set up index.
2025-04-09 14:32:22,981:INFO:Initializing predict_model()
2025-04-09 14:32:22,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B286CF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:22,981:INFO:Checking exceptions
2025-04-09 14:32:22,981:INFO:Preloading libraries
2025-04-09 14:32:22,982:INFO:Set up data.
2025-04-09 14:32:22,987:INFO:Set up index.
2025-04-09 14:32:23,749:INFO:Initializing predict_model()
2025-04-09 14:32:23,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A63450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:23,749:INFO:Checking exceptions
2025-04-09 14:32:23,749:INFO:Preloading libraries
2025-04-09 14:32:23,749:INFO:Set up data.
2025-04-09 14:32:23,749:INFO:Set up index.
2025-04-09 14:32:24,562:INFO:Initializing predict_model()
2025-04-09 14:32:24,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2854DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:24,562:INFO:Checking exceptions
2025-04-09 14:32:24,562:INFO:Preloading libraries
2025-04-09 14:32:24,562:INFO:Set up data.
2025-04-09 14:32:24,562:INFO:Set up index.
2025-04-09 14:32:25,342:INFO:Initializing predict_model()
2025-04-09 14:32:25,342:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A70410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:25,342:INFO:Checking exceptions
2025-04-09 14:32:25,342:INFO:Preloading libraries
2025-04-09 14:32:25,342:INFO:Set up data.
2025-04-09 14:32:25,352:INFO:Set up index.
2025-04-09 14:32:26,144:INFO:Initializing predict_model()
2025-04-09 14:32:26,144:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A81B1210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:26,144:INFO:Checking exceptions
2025-04-09 14:32:26,144:INFO:Preloading libraries
2025-04-09 14:32:26,144:INFO:Set up data.
2025-04-09 14:32:26,147:INFO:Set up index.
2025-04-09 14:32:26,814:INFO:Initializing predict_model()
2025-04-09 14:32:26,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A824B1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:26,814:INFO:Checking exceptions
2025-04-09 14:32:26,814:INFO:Preloading libraries
2025-04-09 14:32:26,814:INFO:Set up data.
2025-04-09 14:32:26,814:INFO:Set up index.
2025-04-09 14:32:27,504:INFO:Initializing predict_model()
2025-04-09 14:32:27,504:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A4ECD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:27,504:INFO:Checking exceptions
2025-04-09 14:32:27,504:INFO:Preloading libraries
2025-04-09 14:32:27,504:INFO:Set up data.
2025-04-09 14:32:27,504:INFO:Set up index.
2025-04-09 14:32:28,210:INFO:Initializing predict_model()
2025-04-09 14:32:28,210:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6CB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:28,210:INFO:Checking exceptions
2025-04-09 14:32:28,210:INFO:Preloading libraries
2025-04-09 14:32:28,210:INFO:Set up data.
2025-04-09 14:32:28,210:INFO:Set up index.
2025-04-09 14:32:28,994:INFO:Initializing predict_model()
2025-04-09 14:32:28,994:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A60DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:28,994:INFO:Checking exceptions
2025-04-09 14:32:28,994:INFO:Preloading libraries
2025-04-09 14:32:28,994:INFO:Set up data.
2025-04-09 14:32:29,010:INFO:Set up index.
2025-04-09 14:32:29,668:INFO:Initializing predict_model()
2025-04-09 14:32:29,668:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A63290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:29,668:INFO:Checking exceptions
2025-04-09 14:32:29,668:INFO:Preloading libraries
2025-04-09 14:32:29,668:INFO:Set up data.
2025-04-09 14:32:29,684:INFO:Set up index.
2025-04-09 14:32:30,418:INFO:Initializing predict_model()
2025-04-09 14:32:30,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A638D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:30,418:INFO:Checking exceptions
2025-04-09 14:32:30,418:INFO:Preloading libraries
2025-04-09 14:32:30,418:INFO:Set up data.
2025-04-09 14:32:30,418:INFO:Set up index.
2025-04-09 14:32:31,124:INFO:Initializing predict_model()
2025-04-09 14:32:31,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A61010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:31,124:INFO:Checking exceptions
2025-04-09 14:32:31,124:INFO:Preloading libraries
2025-04-09 14:32:31,124:INFO:Set up data.
2025-04-09 14:32:31,124:INFO:Set up index.
2025-04-09 14:32:31,814:INFO:Initializing predict_model()
2025-04-09 14:32:31,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6F750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:31,814:INFO:Checking exceptions
2025-04-09 14:32:31,814:INFO:Preloading libraries
2025-04-09 14:32:31,814:INFO:Set up data.
2025-04-09 14:32:31,830:INFO:Set up index.
2025-04-09 14:32:32,630:INFO:Initializing predict_model()
2025-04-09 14:32:32,630:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6F8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:32,630:INFO:Checking exceptions
2025-04-09 14:32:32,630:INFO:Preloading libraries
2025-04-09 14:32:32,630:INFO:Set up data.
2025-04-09 14:32:32,630:INFO:Set up index.
2025-04-09 14:32:33,368:INFO:Initializing predict_model()
2025-04-09 14:32:33,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A815EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:33,368:INFO:Checking exceptions
2025-04-09 14:32:33,368:INFO:Preloading libraries
2025-04-09 14:32:33,368:INFO:Set up data.
2025-04-09 14:32:33,382:INFO:Set up index.
2025-04-09 14:32:34,088:INFO:Initializing predict_model()
2025-04-09 14:32:34,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A60D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:34,088:INFO:Checking exceptions
2025-04-09 14:32:34,088:INFO:Preloading libraries
2025-04-09 14:32:34,088:INFO:Set up data.
2025-04-09 14:32:34,104:INFO:Set up index.
2025-04-09 14:32:34,839:INFO:Initializing predict_model()
2025-04-09 14:32:34,840:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A62310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:34,840:INFO:Checking exceptions
2025-04-09 14:32:34,840:INFO:Preloading libraries
2025-04-09 14:32:34,840:INFO:Set up data.
2025-04-09 14:32:34,846:INFO:Set up index.
2025-04-09 14:32:35,565:INFO:Initializing predict_model()
2025-04-09 14:32:35,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A72D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:35,566:INFO:Checking exceptions
2025-04-09 14:32:35,566:INFO:Preloading libraries
2025-04-09 14:32:35,566:INFO:Set up data.
2025-04-09 14:32:35,571:INFO:Set up index.
2025-04-09 14:32:36,274:INFO:Initializing predict_model()
2025-04-09 14:32:36,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A61AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:36,274:INFO:Checking exceptions
2025-04-09 14:32:36,274:INFO:Preloading libraries
2025-04-09 14:32:36,274:INFO:Set up data.
2025-04-09 14:32:36,287:INFO:Set up index.
2025-04-09 14:32:37,040:INFO:Initializing predict_model()
2025-04-09 14:32:37,040:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A61310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:37,040:INFO:Checking exceptions
2025-04-09 14:32:37,040:INFO:Preloading libraries
2025-04-09 14:32:37,040:INFO:Set up data.
2025-04-09 14:32:37,043:INFO:Set up index.
2025-04-09 14:32:37,818:INFO:Initializing predict_model()
2025-04-09 14:32:37,818:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A73490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:37,818:INFO:Checking exceptions
2025-04-09 14:32:37,818:INFO:Preloading libraries
2025-04-09 14:32:37,818:INFO:Set up data.
2025-04-09 14:32:37,823:INFO:Set up index.
2025-04-09 14:32:38,527:INFO:Initializing predict_model()
2025-04-09 14:32:38,527:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A71C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:38,527:INFO:Checking exceptions
2025-04-09 14:32:38,527:INFO:Preloading libraries
2025-04-09 14:32:38,527:INFO:Set up data.
2025-04-09 14:32:38,543:INFO:Set up index.
2025-04-09 14:32:39,264:INFO:Initializing predict_model()
2025-04-09 14:32:39,264:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A718D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:39,264:INFO:Checking exceptions
2025-04-09 14:32:39,264:INFO:Preloading libraries
2025-04-09 14:32:39,264:INFO:Set up data.
2025-04-09 14:32:39,280:INFO:Set up index.
2025-04-09 14:32:39,985:INFO:Initializing predict_model()
2025-04-09 14:32:39,985:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A61310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:39,985:INFO:Checking exceptions
2025-04-09 14:32:39,985:INFO:Preloading libraries
2025-04-09 14:32:39,985:INFO:Set up data.
2025-04-09 14:32:40,000:INFO:Set up index.
2025-04-09 14:32:40,767:INFO:Initializing predict_model()
2025-04-09 14:32:40,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A62350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:40,767:INFO:Checking exceptions
2025-04-09 14:32:40,767:INFO:Preloading libraries
2025-04-09 14:32:40,767:INFO:Set up data.
2025-04-09 14:32:40,767:INFO:Set up index.
2025-04-09 14:32:41,458:INFO:Initializing predict_model()
2025-04-09 14:32:41,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6E650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1A856ED40>)
2025-04-09 14:32:41,458:INFO:Checking exceptions
2025-04-09 14:32:41,458:INFO:Preloading libraries
2025-04-09 14:32:41,458:INFO:Set up data.
2025-04-09 14:32:41,458:INFO:Set up index.
2025-04-09 14:32:42,210:INFO:Initializing predict_model()
2025-04-09 14:32:42,210:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A638D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:42,210:INFO:Checking exceptions
2025-04-09 14:32:42,210:INFO:Preloading libraries
2025-04-09 14:32:42,210:INFO:Set up data.
2025-04-09 14:32:42,210:INFO:Set up index.
2025-04-09 14:32:42,961:INFO:Initializing predict_model()
2025-04-09 14:32:42,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2870310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:42,961:INFO:Checking exceptions
2025-04-09 14:32:42,961:INFO:Preloading libraries
2025-04-09 14:32:42,961:INFO:Set up data.
2025-04-09 14:32:42,976:INFO:Set up index.
2025-04-09 14:32:43,688:INFO:Initializing predict_model()
2025-04-09 14:32:43,688:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:43,688:INFO:Checking exceptions
2025-04-09 14:32:43,688:INFO:Preloading libraries
2025-04-09 14:32:43,688:INFO:Set up data.
2025-04-09 14:32:43,688:INFO:Set up index.
2025-04-09 14:32:44,465:INFO:Initializing predict_model()
2025-04-09 14:32:44,465:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6D0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:44,465:INFO:Checking exceptions
2025-04-09 14:32:44,465:INFO:Preloading libraries
2025-04-09 14:32:44,465:INFO:Set up data.
2025-04-09 14:32:44,465:INFO:Set up index.
2025-04-09 14:32:45,265:INFO:Initializing predict_model()
2025-04-09 14:32:45,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A61AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:45,265:INFO:Checking exceptions
2025-04-09 14:32:45,265:INFO:Preloading libraries
2025-04-09 14:32:45,265:INFO:Set up data.
2025-04-09 14:32:45,281:INFO:Set up index.
2025-04-09 14:32:45,972:INFO:Initializing predict_model()
2025-04-09 14:32:45,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B286D350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:45,972:INFO:Checking exceptions
2025-04-09 14:32:45,972:INFO:Preloading libraries
2025-04-09 14:32:45,972:INFO:Set up data.
2025-04-09 14:32:45,987:INFO:Set up index.
2025-04-09 14:32:46,741:INFO:Initializing predict_model()
2025-04-09 14:32:46,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A71890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:46,741:INFO:Checking exceptions
2025-04-09 14:32:46,741:INFO:Preloading libraries
2025-04-09 14:32:46,741:INFO:Set up data.
2025-04-09 14:32:46,741:INFO:Set up index.
2025-04-09 14:32:47,507:INFO:Initializing predict_model()
2025-04-09 14:32:47,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A1F7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:47,507:INFO:Checking exceptions
2025-04-09 14:32:47,507:INFO:Preloading libraries
2025-04-09 14:32:47,507:INFO:Set up data.
2025-04-09 14:32:47,507:INFO:Set up index.
2025-04-09 14:32:48,276:INFO:Initializing predict_model()
2025-04-09 14:32:48,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6C490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:48,276:INFO:Checking exceptions
2025-04-09 14:32:48,276:INFO:Preloading libraries
2025-04-09 14:32:48,276:INFO:Set up data.
2025-04-09 14:32:48,292:INFO:Set up index.
2025-04-09 14:32:49,060:INFO:Initializing predict_model()
2025-04-09 14:32:49,060:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:49,060:INFO:Checking exceptions
2025-04-09 14:32:49,060:INFO:Preloading libraries
2025-04-09 14:32:49,060:INFO:Set up data.
2025-04-09 14:32:49,076:INFO:Set up index.
2025-04-09 14:32:49,827:INFO:Initializing predict_model()
2025-04-09 14:32:49,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A62F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:49,827:INFO:Checking exceptions
2025-04-09 14:32:49,827:INFO:Preloading libraries
2025-04-09 14:32:49,827:INFO:Set up data.
2025-04-09 14:32:49,827:INFO:Set up index.
2025-04-09 14:32:50,575:INFO:Initializing predict_model()
2025-04-09 14:32:50,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A4CE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:50,575:INFO:Checking exceptions
2025-04-09 14:32:50,575:INFO:Preloading libraries
2025-04-09 14:32:50,575:INFO:Set up data.
2025-04-09 14:32:50,575:INFO:Set up index.
2025-04-09 14:32:51,312:INFO:Initializing predict_model()
2025-04-09 14:32:51,312:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A6F4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:51,312:INFO:Checking exceptions
2025-04-09 14:32:51,312:INFO:Preloading libraries
2025-04-09 14:32:51,312:INFO:Set up data.
2025-04-09 14:32:51,327:INFO:Set up index.
2025-04-09 14:32:52,159:INFO:Initializing predict_model()
2025-04-09 14:32:52,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B286D350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:52,160:INFO:Checking exceptions
2025-04-09 14:32:52,160:INFO:Preloading libraries
2025-04-09 14:32:52,160:INFO:Set up data.
2025-04-09 14:32:52,167:INFO:Set up index.
2025-04-09 14:32:52,985:INFO:Initializing predict_model()
2025-04-09 14:32:52,985:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A824A490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:52,985:INFO:Checking exceptions
2025-04-09 14:32:52,985:INFO:Preloading libraries
2025-04-09 14:32:52,985:INFO:Set up data.
2025-04-09 14:32:52,985:INFO:Set up index.
2025-04-09 14:32:53,755:INFO:Initializing predict_model()
2025-04-09 14:32:53,755:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A1F7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:53,755:INFO:Checking exceptions
2025-04-09 14:32:53,755:INFO:Preloading libraries
2025-04-09 14:32:53,755:INFO:Set up data.
2025-04-09 14:32:53,755:INFO:Set up index.
2025-04-09 14:32:54,565:INFO:Initializing predict_model()
2025-04-09 14:32:54,565:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A7DE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:54,565:INFO:Checking exceptions
2025-04-09 14:32:54,565:INFO:Preloading libraries
2025-04-09 14:32:54,565:INFO:Set up data.
2025-04-09 14:32:54,565:INFO:Set up index.
2025-04-09 14:32:55,251:INFO:Initializing predict_model()
2025-04-09 14:32:55,251:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1B2A7C950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B1B2A0DB20>)
2025-04-09 14:32:55,251:INFO:Checking exceptions
2025-04-09 14:32:55,251:INFO:Preloading libraries
2025-04-09 14:32:55,251:INFO:Set up data.
2025-04-09 14:32:55,267:INFO:Set up index.
2025-04-09 14:34:26,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:34:26,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:34:26,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:34:26,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:34:31,763:INFO:Initializing load_model()
2025-04-09 14:34:31,763:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:34:31,810:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:34:35,749:INFO:Initializing predict_model()
2025-04-09 14:34:35,750:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F9D6F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:35,750:INFO:Checking exceptions
2025-04-09 14:34:35,750:INFO:Preloading libraries
2025-04-09 14:34:35,751:INFO:Set up data.
2025-04-09 14:34:35,757:INFO:Set up index.
2025-04-09 14:34:36,505:INFO:Initializing predict_model()
2025-04-09 14:34:36,505:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49C3EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:36,505:INFO:Checking exceptions
2025-04-09 14:34:36,505:INFO:Preloading libraries
2025-04-09 14:34:36,505:INFO:Set up data.
2025-04-09 14:34:36,505:INFO:Set up index.
2025-04-09 14:34:37,239:INFO:Initializing predict_model()
2025-04-09 14:34:37,239:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F92E1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:37,239:INFO:Checking exceptions
2025-04-09 14:34:37,239:INFO:Preloading libraries
2025-04-09 14:34:37,239:INFO:Set up data.
2025-04-09 14:34:37,239:INFO:Set up index.
2025-04-09 14:34:37,961:INFO:Initializing predict_model()
2025-04-09 14:34:37,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F82C590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:37,961:INFO:Checking exceptions
2025-04-09 14:34:37,961:INFO:Preloading libraries
2025-04-09 14:34:37,962:INFO:Set up data.
2025-04-09 14:34:37,966:INFO:Set up index.
2025-04-09 14:34:38,639:INFO:Initializing predict_model()
2025-04-09 14:34:38,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A02B490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:38,639:INFO:Checking exceptions
2025-04-09 14:34:38,639:INFO:Preloading libraries
2025-04-09 14:34:38,639:INFO:Set up data.
2025-04-09 14:34:38,655:INFO:Set up index.
2025-04-09 14:34:39,324:INFO:Initializing predict_model()
2025-04-09 14:34:39,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4970CD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:39,324:INFO:Checking exceptions
2025-04-09 14:34:39,324:INFO:Preloading libraries
2025-04-09 14:34:39,324:INFO:Set up data.
2025-04-09 14:34:39,328:INFO:Set up index.
2025-04-09 14:34:40,029:INFO:Initializing predict_model()
2025-04-09 14:34:40,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F541D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:40,029:INFO:Checking exceptions
2025-04-09 14:34:40,029:INFO:Preloading libraries
2025-04-09 14:34:40,029:INFO:Set up data.
2025-04-09 14:34:40,034:INFO:Set up index.
2025-04-09 14:34:40,748:INFO:Initializing predict_model()
2025-04-09 14:34:40,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A143210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:40,748:INFO:Checking exceptions
2025-04-09 14:34:40,748:INFO:Preloading libraries
2025-04-09 14:34:40,748:INFO:Set up data.
2025-04-09 14:34:40,764:INFO:Set up index.
2025-04-09 14:34:41,401:INFO:Initializing predict_model()
2025-04-09 14:34:41,401:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F55550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:41,401:INFO:Checking exceptions
2025-04-09 14:34:41,401:INFO:Preloading libraries
2025-04-09 14:34:41,401:INFO:Set up data.
2025-04-09 14:34:41,401:INFO:Set up index.
2025-04-09 14:34:42,072:INFO:Initializing predict_model()
2025-04-09 14:34:42,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49835150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:42,072:INFO:Checking exceptions
2025-04-09 14:34:42,072:INFO:Preloading libraries
2025-04-09 14:34:42,072:INFO:Set up data.
2025-04-09 14:34:42,079:INFO:Set up index.
2025-04-09 14:34:42,864:INFO:Initializing predict_model()
2025-04-09 14:34:42,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F84FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:42,864:INFO:Checking exceptions
2025-04-09 14:34:42,864:INFO:Preloading libraries
2025-04-09 14:34:42,864:INFO:Set up data.
2025-04-09 14:34:42,864:INFO:Set up index.
2025-04-09 14:34:43,593:INFO:Initializing predict_model()
2025-04-09 14:34:43,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F54510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:43,593:INFO:Checking exceptions
2025-04-09 14:34:43,593:INFO:Preloading libraries
2025-04-09 14:34:43,593:INFO:Set up data.
2025-04-09 14:34:43,593:INFO:Set up index.
2025-04-09 14:34:44,377:INFO:Initializing predict_model()
2025-04-09 14:34:44,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A114410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:34:44,377:INFO:Checking exceptions
2025-04-09 14:34:44,377:INFO:Preloading libraries
2025-04-09 14:34:44,377:INFO:Set up data.
2025-04-09 14:34:44,377:INFO:Set up index.
2025-04-09 14:34:45,238:INFO:Initializing predict_model()
2025-04-09 14:34:45,238:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F8A8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:34:45,238:INFO:Checking exceptions
2025-04-09 14:34:45,238:INFO:Preloading libraries
2025-04-09 14:34:45,238:INFO:Set up data.
2025-04-09 14:34:45,238:INFO:Set up index.
2025-04-09 14:34:46,054:INFO:Initializing predict_model()
2025-04-09 14:34:46,054:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F54F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:46,054:INFO:Checking exceptions
2025-04-09 14:34:46,054:INFO:Preloading libraries
2025-04-09 14:34:46,054:INFO:Set up data.
2025-04-09 14:34:46,054:INFO:Set up index.
2025-04-09 14:34:46,814:INFO:Initializing predict_model()
2025-04-09 14:34:46,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14AE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:46,814:INFO:Checking exceptions
2025-04-09 14:34:46,814:INFO:Preloading libraries
2025-04-09 14:34:46,814:INFO:Set up data.
2025-04-09 14:34:46,822:INFO:Set up index.
2025-04-09 14:34:47,562:INFO:Initializing predict_model()
2025-04-09 14:34:47,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A140CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:47,562:INFO:Checking exceptions
2025-04-09 14:34:47,562:INFO:Preloading libraries
2025-04-09 14:34:47,562:INFO:Set up data.
2025-04-09 14:34:47,562:INFO:Set up index.
2025-04-09 14:34:48,283:INFO:Initializing predict_model()
2025-04-09 14:34:48,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4970CD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:48,283:INFO:Checking exceptions
2025-04-09 14:34:48,283:INFO:Preloading libraries
2025-04-09 14:34:48,283:INFO:Set up data.
2025-04-09 14:34:48,283:INFO:Set up index.
2025-04-09 14:34:48,989:INFO:Initializing predict_model()
2025-04-09 14:34:48,989:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F8A8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:48,989:INFO:Checking exceptions
2025-04-09 14:34:48,989:INFO:Preloading libraries
2025-04-09 14:34:48,989:INFO:Set up data.
2025-04-09 14:34:48,989:INFO:Set up index.
2025-04-09 14:34:49,734:INFO:Initializing predict_model()
2025-04-09 14:34:49,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F54410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:49,734:INFO:Checking exceptions
2025-04-09 14:34:49,734:INFO:Preloading libraries
2025-04-09 14:34:49,734:INFO:Set up data.
2025-04-09 14:34:49,734:INFO:Set up index.
2025-04-09 14:34:50,446:INFO:Initializing predict_model()
2025-04-09 14:34:50,446:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F54F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:50,446:INFO:Checking exceptions
2025-04-09 14:34:50,446:INFO:Preloading libraries
2025-04-09 14:34:50,446:INFO:Set up data.
2025-04-09 14:34:50,446:INFO:Set up index.
2025-04-09 14:34:51,148:INFO:Initializing predict_model()
2025-04-09 14:34:51,148:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12F010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:51,148:INFO:Checking exceptions
2025-04-09 14:34:51,148:INFO:Preloading libraries
2025-04-09 14:34:51,148:INFO:Set up data.
2025-04-09 14:34:51,153:INFO:Set up index.
2025-04-09 14:34:51,873:INFO:Initializing predict_model()
2025-04-09 14:34:51,873:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12F250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:51,873:INFO:Checking exceptions
2025-04-09 14:34:51,873:INFO:Preloading libraries
2025-04-09 14:34:51,873:INFO:Set up data.
2025-04-09 14:34:51,888:INFO:Set up index.
2025-04-09 14:34:52,696:INFO:Initializing predict_model()
2025-04-09 14:34:52,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F54410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:52,696:INFO:Checking exceptions
2025-04-09 14:34:52,696:INFO:Preloading libraries
2025-04-09 14:34:52,696:INFO:Set up data.
2025-04-09 14:34:52,712:INFO:Set up index.
2025-04-09 14:34:53,434:INFO:Initializing predict_model()
2025-04-09 14:34:53,434:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A148E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:53,434:INFO:Checking exceptions
2025-04-09 14:34:53,434:INFO:Preloading libraries
2025-04-09 14:34:53,434:INFO:Set up data.
2025-04-09 14:34:53,434:INFO:Set up index.
2025-04-09 14:34:54,169:INFO:Initializing predict_model()
2025-04-09 14:34:54,169:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A143D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:54,169:INFO:Checking exceptions
2025-04-09 14:34:54,169:INFO:Preloading libraries
2025-04-09 14:34:54,169:INFO:Set up data.
2025-04-09 14:34:54,169:INFO:Set up index.
2025-04-09 14:34:54,874:INFO:Initializing predict_model()
2025-04-09 14:34:54,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12EFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:54,874:INFO:Checking exceptions
2025-04-09 14:34:54,874:INFO:Preloading libraries
2025-04-09 14:34:54,874:INFO:Set up data.
2025-04-09 14:34:54,874:INFO:Set up index.
2025-04-09 14:34:55,580:INFO:Initializing predict_model()
2025-04-09 14:34:55,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12DCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:55,580:INFO:Checking exceptions
2025-04-09 14:34:55,580:INFO:Preloading libraries
2025-04-09 14:34:55,580:INFO:Set up data.
2025-04-09 14:34:55,580:INFO:Set up index.
2025-04-09 14:34:56,314:INFO:Initializing predict_model()
2025-04-09 14:34:56,330:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14A1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:56,330:INFO:Checking exceptions
2025-04-09 14:34:56,330:INFO:Preloading libraries
2025-04-09 14:34:56,330:INFO:Set up data.
2025-04-09 14:34:56,330:INFO:Set up index.
2025-04-09 14:34:57,049:INFO:Initializing predict_model()
2025-04-09 14:34:57,049:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12F710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:57,049:INFO:Checking exceptions
2025-04-09 14:34:57,049:INFO:Preloading libraries
2025-04-09 14:34:57,049:INFO:Set up data.
2025-04-09 14:34:57,061:INFO:Set up index.
2025-04-09 14:34:57,787:INFO:Initializing predict_model()
2025-04-09 14:34:57,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A142E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:57,787:INFO:Checking exceptions
2025-04-09 14:34:57,787:INFO:Preloading libraries
2025-04-09 14:34:57,787:INFO:Set up data.
2025-04-09 14:34:57,787:INFO:Set up index.
2025-04-09 14:34:58,521:INFO:Initializing predict_model()
2025-04-09 14:34:58,521:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F84FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:58,521:INFO:Checking exceptions
2025-04-09 14:34:58,521:INFO:Preloading libraries
2025-04-09 14:34:58,522:INFO:Set up data.
2025-04-09 14:34:58,526:INFO:Set up index.
2025-04-09 14:34:59,290:INFO:Initializing predict_model()
2025-04-09 14:34:59,290:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:34:59,290:INFO:Checking exceptions
2025-04-09 14:34:59,290:INFO:Preloading libraries
2025-04-09 14:34:59,290:INFO:Set up data.
2025-04-09 14:34:59,290:INFO:Set up index.
2025-04-09 14:35:00,043:INFO:Initializing predict_model()
2025-04-09 14:35:00,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:00,043:INFO:Checking exceptions
2025-04-09 14:35:00,043:INFO:Preloading libraries
2025-04-09 14:35:00,043:INFO:Set up data.
2025-04-09 14:35:00,059:INFO:Set up index.
2025-04-09 14:35:00,837:INFO:Initializing predict_model()
2025-04-09 14:35:00,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A141C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:00,838:INFO:Checking exceptions
2025-04-09 14:35:00,838:INFO:Preloading libraries
2025-04-09 14:35:00,838:INFO:Set up data.
2025-04-09 14:35:00,844:INFO:Set up index.
2025-04-09 14:35:01,578:INFO:Initializing predict_model()
2025-04-09 14:35:01,578:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15C4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:01,578:INFO:Checking exceptions
2025-04-09 14:35:01,578:INFO:Preloading libraries
2025-04-09 14:35:01,578:INFO:Set up data.
2025-04-09 14:35:01,594:INFO:Set up index.
2025-04-09 14:35:02,332:INFO:Initializing predict_model()
2025-04-09 14:35:02,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15F0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:02,332:INFO:Checking exceptions
2025-04-09 14:35:02,332:INFO:Preloading libraries
2025-04-09 14:35:02,332:INFO:Set up data.
2025-04-09 14:35:02,347:INFO:Set up index.
2025-04-09 14:35:03,188:INFO:Initializing predict_model()
2025-04-09 14:35:03,189:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14B110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:03,189:INFO:Checking exceptions
2025-04-09 14:35:03,189:INFO:Preloading libraries
2025-04-09 14:35:03,189:INFO:Set up data.
2025-04-09 14:35:03,194:INFO:Set up index.
2025-04-09 14:35:03,942:INFO:Initializing predict_model()
2025-04-09 14:35:03,942:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:03,942:INFO:Checking exceptions
2025-04-09 14:35:03,942:INFO:Preloading libraries
2025-04-09 14:35:03,942:INFO:Set up data.
2025-04-09 14:35:03,942:INFO:Set up index.
2025-04-09 14:35:04,648:INFO:Initializing predict_model()
2025-04-09 14:35:04,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:04,648:INFO:Checking exceptions
2025-04-09 14:35:04,648:INFO:Preloading libraries
2025-04-09 14:35:04,648:INFO:Set up data.
2025-04-09 14:35:04,648:INFO:Set up index.
2025-04-09 14:35:05,354:INFO:Initializing predict_model()
2025-04-09 14:35:05,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14C810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:05,354:INFO:Checking exceptions
2025-04-09 14:35:05,354:INFO:Preloading libraries
2025-04-09 14:35:05,354:INFO:Set up data.
2025-04-09 14:35:05,354:INFO:Set up index.
2025-04-09 14:35:06,137:INFO:Initializing predict_model()
2025-04-09 14:35:06,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A140290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:06,137:INFO:Checking exceptions
2025-04-09 14:35:06,138:INFO:Preloading libraries
2025-04-09 14:35:06,139:INFO:Set up data.
2025-04-09 14:35:06,143:INFO:Set up index.
2025-04-09 14:35:06,872:INFO:Initializing predict_model()
2025-04-09 14:35:06,872:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12F290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:06,872:INFO:Checking exceptions
2025-04-09 14:35:06,872:INFO:Preloading libraries
2025-04-09 14:35:06,872:INFO:Set up data.
2025-04-09 14:35:06,872:INFO:Set up index.
2025-04-09 14:35:07,579:INFO:Initializing predict_model()
2025-04-09 14:35:07,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12F450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:07,579:INFO:Checking exceptions
2025-04-09 14:35:07,579:INFO:Preloading libraries
2025-04-09 14:35:07,579:INFO:Set up data.
2025-04-09 14:35:07,579:INFO:Set up index.
2025-04-09 14:35:08,347:INFO:Initializing predict_model()
2025-04-09 14:35:08,347:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A142990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:08,347:INFO:Checking exceptions
2025-04-09 14:35:08,347:INFO:Preloading libraries
2025-04-09 14:35:08,348:INFO:Set up data.
2025-04-09 14:35:08,351:INFO:Set up index.
2025-04-09 14:35:09,064:INFO:Initializing predict_model()
2025-04-09 14:35:09,064:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F8915D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:09,064:INFO:Checking exceptions
2025-04-09 14:35:09,064:INFO:Preloading libraries
2025-04-09 14:35:09,064:INFO:Set up data.
2025-04-09 14:35:09,083:INFO:Set up index.
2025-04-09 14:35:09,787:INFO:Initializing predict_model()
2025-04-09 14:35:09,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F92E0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:09,787:INFO:Checking exceptions
2025-04-09 14:35:09,787:INFO:Preloading libraries
2025-04-09 14:35:09,787:INFO:Set up data.
2025-04-09 14:35:09,803:INFO:Set up index.
2025-04-09 14:35:10,572:INFO:Initializing predict_model()
2025-04-09 14:35:10,572:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14B0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:10,572:INFO:Checking exceptions
2025-04-09 14:35:10,572:INFO:Preloading libraries
2025-04-09 14:35:10,572:INFO:Set up data.
2025-04-09 14:35:10,572:INFO:Set up index.
2025-04-09 14:35:11,325:INFO:Initializing predict_model()
2025-04-09 14:35:11,325:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15EED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:11,325:INFO:Checking exceptions
2025-04-09 14:35:11,325:INFO:Preloading libraries
2025-04-09 14:35:11,325:INFO:Set up data.
2025-04-09 14:35:11,325:INFO:Set up index.
2025-04-09 14:35:12,031:INFO:Initializing predict_model()
2025-04-09 14:35:12,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14FE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:12,047:INFO:Checking exceptions
2025-04-09 14:35:12,047:INFO:Preloading libraries
2025-04-09 14:35:12,047:INFO:Set up data.
2025-04-09 14:35:12,047:INFO:Set up index.
2025-04-09 14:35:12,796:INFO:Initializing predict_model()
2025-04-09 14:35:12,796:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A141D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:12,796:INFO:Checking exceptions
2025-04-09 14:35:12,796:INFO:Preloading libraries
2025-04-09 14:35:12,796:INFO:Set up data.
2025-04-09 14:35:12,811:INFO:Set up index.
2025-04-09 14:35:13,499:INFO:Initializing predict_model()
2025-04-09 14:35:13,499:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1417D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:13,499:INFO:Checking exceptions
2025-04-09 14:35:13,499:INFO:Preloading libraries
2025-04-09 14:35:13,499:INFO:Set up data.
2025-04-09 14:35:13,499:INFO:Set up index.
2025-04-09 14:35:14,229:INFO:Initializing predict_model()
2025-04-09 14:35:14,229:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14E9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:14,229:INFO:Checking exceptions
2025-04-09 14:35:14,229:INFO:Preloading libraries
2025-04-09 14:35:14,229:INFO:Set up data.
2025-04-09 14:35:14,245:INFO:Set up index.
2025-04-09 14:35:14,948:INFO:Initializing predict_model()
2025-04-09 14:35:14,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A149610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:14,948:INFO:Checking exceptions
2025-04-09 14:35:14,948:INFO:Preloading libraries
2025-04-09 14:35:14,948:INFO:Set up data.
2025-04-09 14:35:14,948:INFO:Set up index.
2025-04-09 14:35:15,671:INFO:Initializing predict_model()
2025-04-09 14:35:15,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14B0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:15,671:INFO:Checking exceptions
2025-04-09 14:35:15,671:INFO:Preloading libraries
2025-04-09 14:35:15,671:INFO:Set up data.
2025-04-09 14:35:15,671:INFO:Set up index.
2025-04-09 14:35:16,420:INFO:Initializing predict_model()
2025-04-09 14:35:16,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F8915D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:16,420:INFO:Checking exceptions
2025-04-09 14:35:16,420:INFO:Preloading libraries
2025-04-09 14:35:16,420:INFO:Set up data.
2025-04-09 14:35:16,427:INFO:Set up index.
2025-04-09 14:35:17,203:INFO:Initializing predict_model()
2025-04-09 14:35:17,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15D510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:17,204:INFO:Checking exceptions
2025-04-09 14:35:17,204:INFO:Preloading libraries
2025-04-09 14:35:17,204:INFO:Set up data.
2025-04-09 14:35:17,210:INFO:Set up index.
2025-04-09 14:35:18,162:INFO:Initializing predict_model()
2025-04-09 14:35:18,162:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15EF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:18,162:INFO:Checking exceptions
2025-04-09 14:35:18,162:INFO:Preloading libraries
2025-04-09 14:35:18,162:INFO:Set up data.
2025-04-09 14:35:18,178:INFO:Set up index.
2025-04-09 14:35:19,156:INFO:Initializing predict_model()
2025-04-09 14:35:19,156:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12F990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:19,156:INFO:Checking exceptions
2025-04-09 14:35:19,156:INFO:Preloading libraries
2025-04-09 14:35:19,156:INFO:Set up data.
2025-04-09 14:35:19,156:INFO:Set up index.
2025-04-09 14:35:20,106:INFO:Initializing predict_model()
2025-04-09 14:35:20,106:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14DE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:20,106:INFO:Checking exceptions
2025-04-09 14:35:20,106:INFO:Preloading libraries
2025-04-09 14:35:20,107:INFO:Set up data.
2025-04-09 14:35:20,113:INFO:Set up index.
2025-04-09 14:35:21,020:INFO:Initializing predict_model()
2025-04-09 14:35:21,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14E810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:21,020:INFO:Checking exceptions
2025-04-09 14:35:21,020:INFO:Preloading libraries
2025-04-09 14:35:21,020:INFO:Set up data.
2025-04-09 14:35:21,035:INFO:Set up index.
2025-04-09 14:35:22,026:INFO:Initializing predict_model()
2025-04-09 14:35:22,026:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12DDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:22,026:INFO:Checking exceptions
2025-04-09 14:35:22,026:INFO:Preloading libraries
2025-04-09 14:35:22,026:INFO:Set up data.
2025-04-09 14:35:22,035:INFO:Set up index.
2025-04-09 14:35:23,014:INFO:Initializing predict_model()
2025-04-09 14:35:23,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15EF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:23,014:INFO:Checking exceptions
2025-04-09 14:35:23,014:INFO:Preloading libraries
2025-04-09 14:35:23,014:INFO:Set up data.
2025-04-09 14:35:23,014:INFO:Set up index.
2025-04-09 14:35:23,951:INFO:Initializing predict_model()
2025-04-09 14:35:23,951:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15D5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:23,952:INFO:Checking exceptions
2025-04-09 14:35:23,952:INFO:Preloading libraries
2025-04-09 14:35:23,952:INFO:Set up data.
2025-04-09 14:35:23,959:INFO:Set up index.
2025-04-09 14:35:24,812:INFO:Initializing predict_model()
2025-04-09 14:35:24,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1430D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:24,813:INFO:Checking exceptions
2025-04-09 14:35:24,814:INFO:Preloading libraries
2025-04-09 14:35:24,814:INFO:Set up data.
2025-04-09 14:35:24,821:INFO:Set up index.
2025-04-09 14:35:25,674:INFO:Initializing predict_model()
2025-04-09 14:35:25,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15C990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:25,674:INFO:Checking exceptions
2025-04-09 14:35:25,674:INFO:Preloading libraries
2025-04-09 14:35:25,675:INFO:Set up data.
2025-04-09 14:35:25,679:INFO:Set up index.
2025-04-09 14:35:26,546:INFO:Initializing predict_model()
2025-04-09 14:35:26,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15D510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:26,547:INFO:Checking exceptions
2025-04-09 14:35:26,547:INFO:Preloading libraries
2025-04-09 14:35:26,548:INFO:Set up data.
2025-04-09 14:35:26,554:INFO:Set up index.
2025-04-09 14:35:27,462:INFO:Initializing predict_model()
2025-04-09 14:35:27,462:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14E890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:27,462:INFO:Checking exceptions
2025-04-09 14:35:27,462:INFO:Preloading libraries
2025-04-09 14:35:27,463:INFO:Set up data.
2025-04-09 14:35:27,469:INFO:Set up index.
2025-04-09 14:35:28,287:INFO:Initializing predict_model()
2025-04-09 14:35:28,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A158A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:28,287:INFO:Checking exceptions
2025-04-09 14:35:28,288:INFO:Preloading libraries
2025-04-09 14:35:28,288:INFO:Set up data.
2025-04-09 14:35:28,294:INFO:Set up index.
2025-04-09 14:35:29,152:INFO:Initializing predict_model()
2025-04-09 14:35:29,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A141690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:29,152:INFO:Checking exceptions
2025-04-09 14:35:29,153:INFO:Preloading libraries
2025-04-09 14:35:29,154:INFO:Set up data.
2025-04-09 14:35:29,160:INFO:Set up index.
2025-04-09 14:35:30,066:INFO:Initializing predict_model()
2025-04-09 14:35:30,066:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A160790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:30,066:INFO:Checking exceptions
2025-04-09 14:35:30,066:INFO:Preloading libraries
2025-04-09 14:35:30,067:INFO:Set up data.
2025-04-09 14:35:30,072:INFO:Set up index.
2025-04-09 14:35:31,002:INFO:Initializing predict_model()
2025-04-09 14:35:31,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:31,002:INFO:Checking exceptions
2025-04-09 14:35:31,002:INFO:Preloading libraries
2025-04-09 14:35:31,003:INFO:Set up data.
2025-04-09 14:35:31,008:INFO:Set up index.
2025-04-09 14:35:31,942:INFO:Initializing predict_model()
2025-04-09 14:35:31,942:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A149950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:31,942:INFO:Checking exceptions
2025-04-09 14:35:31,943:INFO:Preloading libraries
2025-04-09 14:35:31,943:INFO:Set up data.
2025-04-09 14:35:31,949:INFO:Set up index.
2025-04-09 14:35:32,894:INFO:Initializing predict_model()
2025-04-09 14:35:32,894:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A163D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:32,894:INFO:Checking exceptions
2025-04-09 14:35:32,894:INFO:Preloading libraries
2025-04-09 14:35:32,895:INFO:Set up data.
2025-04-09 14:35:32,900:INFO:Set up index.
2025-04-09 14:35:33,776:INFO:Initializing predict_model()
2025-04-09 14:35:33,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A158210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:33,776:INFO:Checking exceptions
2025-04-09 14:35:33,776:INFO:Preloading libraries
2025-04-09 14:35:33,777:INFO:Set up data.
2025-04-09 14:35:33,782:INFO:Set up index.
2025-04-09 14:35:34,966:INFO:Initializing predict_model()
2025-04-09 14:35:34,966:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A141F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:34,967:INFO:Checking exceptions
2025-04-09 14:35:34,967:INFO:Preloading libraries
2025-04-09 14:35:34,967:INFO:Set up data.
2025-04-09 14:35:34,974:INFO:Set up index.
2025-04-09 14:35:35,926:INFO:Initializing predict_model()
2025-04-09 14:35:35,926:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1419D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:35:35,926:INFO:Checking exceptions
2025-04-09 14:35:35,927:INFO:Preloading libraries
2025-04-09 14:35:35,927:INFO:Set up data.
2025-04-09 14:35:35,932:INFO:Set up index.
2025-04-09 14:35:36,862:INFO:Initializing predict_model()
2025-04-09 14:35:36,862:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15DD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:36,862:INFO:Checking exceptions
2025-04-09 14:35:36,863:INFO:Preloading libraries
2025-04-09 14:35:36,863:INFO:Set up data.
2025-04-09 14:35:36,868:INFO:Set up index.
2025-04-09 14:35:37,710:INFO:Initializing predict_model()
2025-04-09 14:35:37,710:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15F610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:37,711:INFO:Checking exceptions
2025-04-09 14:35:37,711:INFO:Preloading libraries
2025-04-09 14:35:37,711:INFO:Set up data.
2025-04-09 14:35:37,718:INFO:Set up index.
2025-04-09 14:35:38,715:INFO:Initializing predict_model()
2025-04-09 14:35:38,715:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15DA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:38,715:INFO:Checking exceptions
2025-04-09 14:35:38,715:INFO:Preloading libraries
2025-04-09 14:35:38,716:INFO:Set up data.
2025-04-09 14:35:38,721:INFO:Set up index.
2025-04-09 14:35:39,521:INFO:Initializing predict_model()
2025-04-09 14:35:39,521:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F55510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:39,521:INFO:Checking exceptions
2025-04-09 14:35:39,522:INFO:Preloading libraries
2025-04-09 14:35:39,523:INFO:Set up data.
2025-04-09 14:35:39,527:INFO:Set up index.
2025-04-09 14:35:40,335:INFO:Initializing predict_model()
2025-04-09 14:35:40,336:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15B150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:40,336:INFO:Checking exceptions
2025-04-09 14:35:40,336:INFO:Preloading libraries
2025-04-09 14:35:40,336:INFO:Set up data.
2025-04-09 14:35:40,341:INFO:Set up index.
2025-04-09 14:35:41,144:INFO:Initializing predict_model()
2025-04-09 14:35:41,144:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F36190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:41,144:INFO:Checking exceptions
2025-04-09 14:35:41,145:INFO:Preloading libraries
2025-04-09 14:35:41,146:INFO:Set up data.
2025-04-09 14:35:41,151:INFO:Set up index.
2025-04-09 14:35:41,926:INFO:Initializing predict_model()
2025-04-09 14:35:41,927:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15EF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:41,927:INFO:Checking exceptions
2025-04-09 14:35:41,927:INFO:Preloading libraries
2025-04-09 14:35:41,927:INFO:Set up data.
2025-04-09 14:35:41,932:INFO:Set up index.
2025-04-09 14:35:42,766:INFO:Initializing predict_model()
2025-04-09 14:35:42,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15AC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:42,766:INFO:Checking exceptions
2025-04-09 14:35:42,766:INFO:Preloading libraries
2025-04-09 14:35:42,766:INFO:Set up data.
2025-04-09 14:35:42,771:INFO:Set up index.
2025-04-09 14:35:43,579:INFO:Initializing predict_model()
2025-04-09 14:35:43,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15EE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:43,579:INFO:Checking exceptions
2025-04-09 14:35:43,579:INFO:Preloading libraries
2025-04-09 14:35:43,580:INFO:Set up data.
2025-04-09 14:35:43,586:INFO:Set up index.
2025-04-09 14:35:44,397:INFO:Initializing predict_model()
2025-04-09 14:35:44,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A149DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:44,397:INFO:Checking exceptions
2025-04-09 14:35:44,397:INFO:Preloading libraries
2025-04-09 14:35:44,398:INFO:Set up data.
2025-04-09 14:35:44,403:INFO:Set up index.
2025-04-09 14:35:45,271:INFO:Initializing predict_model()
2025-04-09 14:35:45,271:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3F8915D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:45,271:INFO:Checking exceptions
2025-04-09 14:35:45,271:INFO:Preloading libraries
2025-04-09 14:35:45,272:INFO:Set up data.
2025-04-09 14:35:45,277:INFO:Set up index.
2025-04-09 14:35:46,078:INFO:Initializing predict_model()
2025-04-09 14:35:46,079:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1493D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:46,079:INFO:Checking exceptions
2025-04-09 14:35:46,079:INFO:Preloading libraries
2025-04-09 14:35:46,079:INFO:Set up data.
2025-04-09 14:35:46,084:INFO:Set up index.
2025-04-09 14:35:46,925:INFO:Initializing predict_model()
2025-04-09 14:35:46,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A149DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:46,925:INFO:Checking exceptions
2025-04-09 14:35:46,925:INFO:Preloading libraries
2025-04-09 14:35:46,926:INFO:Set up data.
2025-04-09 14:35:46,930:INFO:Set up index.
2025-04-09 14:35:47,680:INFO:Initializing predict_model()
2025-04-09 14:35:47,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A159250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:47,680:INFO:Checking exceptions
2025-04-09 14:35:47,680:INFO:Preloading libraries
2025-04-09 14:35:47,681:INFO:Set up data.
2025-04-09 14:35:47,686:INFO:Set up index.
2025-04-09 14:35:48,498:INFO:Initializing predict_model()
2025-04-09 14:35:48,499:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1493D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:48,499:INFO:Checking exceptions
2025-04-09 14:35:48,499:INFO:Preloading libraries
2025-04-09 14:35:48,499:INFO:Set up data.
2025-04-09 14:35:48,505:INFO:Set up index.
2025-04-09 14:35:49,289:INFO:Initializing predict_model()
2025-04-09 14:35:49,290:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14E650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:49,290:INFO:Checking exceptions
2025-04-09 14:35:49,290:INFO:Preloading libraries
2025-04-09 14:35:49,290:INFO:Set up data.
2025-04-09 14:35:49,296:INFO:Set up index.
2025-04-09 14:35:50,058:INFO:Initializing predict_model()
2025-04-09 14:35:50,058:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14A710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:50,058:INFO:Checking exceptions
2025-04-09 14:35:50,058:INFO:Preloading libraries
2025-04-09 14:35:50,059:INFO:Set up data.
2025-04-09 14:35:50,063:INFO:Set up index.
2025-04-09 14:35:50,928:INFO:Initializing predict_model()
2025-04-09 14:35:50,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:50,929:INFO:Checking exceptions
2025-04-09 14:35:50,929:INFO:Preloading libraries
2025-04-09 14:35:50,929:INFO:Set up data.
2025-04-09 14:35:50,934:INFO:Set up index.
2025-04-09 14:35:51,760:INFO:Initializing predict_model()
2025-04-09 14:35:51,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A141F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:51,760:INFO:Checking exceptions
2025-04-09 14:35:51,760:INFO:Preloading libraries
2025-04-09 14:35:51,761:INFO:Set up data.
2025-04-09 14:35:51,765:INFO:Set up index.
2025-04-09 14:35:52,569:INFO:Initializing predict_model()
2025-04-09 14:35:52,569:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12E490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:52,569:INFO:Checking exceptions
2025-04-09 14:35:52,569:INFO:Preloading libraries
2025-04-09 14:35:52,570:INFO:Set up data.
2025-04-09 14:35:52,577:INFO:Set up index.
2025-04-09 14:35:53,392:INFO:Initializing predict_model()
2025-04-09 14:35:53,392:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14C950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:53,392:INFO:Checking exceptions
2025-04-09 14:35:53,392:INFO:Preloading libraries
2025-04-09 14:35:53,393:INFO:Set up data.
2025-04-09 14:35:53,398:INFO:Set up index.
2025-04-09 14:35:54,210:INFO:Initializing predict_model()
2025-04-09 14:35:54,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15FE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:54,211:INFO:Checking exceptions
2025-04-09 14:35:54,211:INFO:Preloading libraries
2025-04-09 14:35:54,211:INFO:Set up data.
2025-04-09 14:35:54,216:INFO:Set up index.
2025-04-09 14:35:54,985:INFO:Initializing predict_model()
2025-04-09 14:35:54,985:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A141F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:54,985:INFO:Checking exceptions
2025-04-09 14:35:54,985:INFO:Preloading libraries
2025-04-09 14:35:54,986:INFO:Set up data.
2025-04-09 14:35:54,991:INFO:Set up index.
2025-04-09 14:35:55,889:INFO:Initializing predict_model()
2025-04-09 14:35:55,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A160110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:55,889:INFO:Checking exceptions
2025-04-09 14:35:55,889:INFO:Preloading libraries
2025-04-09 14:35:55,890:INFO:Set up data.
2025-04-09 14:35:55,895:INFO:Set up index.
2025-04-09 14:35:56,645:INFO:Initializing predict_model()
2025-04-09 14:35:56,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A158210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:56,645:INFO:Checking exceptions
2025-04-09 14:35:56,645:INFO:Preloading libraries
2025-04-09 14:35:56,646:INFO:Set up data.
2025-04-09 14:35:56,650:INFO:Set up index.
2025-04-09 14:35:57,402:INFO:Initializing predict_model()
2025-04-09 14:35:57,402:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A162E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:57,402:INFO:Checking exceptions
2025-04-09 14:35:57,402:INFO:Preloading libraries
2025-04-09 14:35:57,403:INFO:Set up data.
2025-04-09 14:35:57,408:INFO:Set up index.
2025-04-09 14:35:58,265:INFO:Initializing predict_model()
2025-04-09 14:35:58,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12ED90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:58,265:INFO:Checking exceptions
2025-04-09 14:35:58,265:INFO:Preloading libraries
2025-04-09 14:35:58,266:INFO:Set up data.
2025-04-09 14:35:58,274:INFO:Set up index.
2025-04-09 14:35:59,329:INFO:Initializing predict_model()
2025-04-09 14:35:59,329:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A159F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:35:59,329:INFO:Checking exceptions
2025-04-09 14:35:59,329:INFO:Preloading libraries
2025-04-09 14:35:59,330:INFO:Set up data.
2025-04-09 14:35:59,335:INFO:Set up index.
2025-04-09 14:36:00,218:INFO:Initializing predict_model()
2025-04-09 14:36:00,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A12E490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:00,218:INFO:Checking exceptions
2025-04-09 14:36:00,218:INFO:Preloading libraries
2025-04-09 14:36:00,219:INFO:Set up data.
2025-04-09 14:36:00,224:INFO:Set up index.
2025-04-09 14:36:01,034:INFO:Initializing predict_model()
2025-04-09 14:36:01,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15F6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:01,034:INFO:Checking exceptions
2025-04-09 14:36:01,035:INFO:Preloading libraries
2025-04-09 14:36:01,035:INFO:Set up data.
2025-04-09 14:36:01,041:INFO:Set up index.
2025-04-09 14:36:01,829:INFO:Initializing predict_model()
2025-04-09 14:36:01,830:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A160F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:01,830:INFO:Checking exceptions
2025-04-09 14:36:01,830:INFO:Preloading libraries
2025-04-09 14:36:01,830:INFO:Set up data.
2025-04-09 14:36:01,835:INFO:Set up index.
2025-04-09 14:36:02,634:INFO:Initializing predict_model()
2025-04-09 14:36:02,634:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15F6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:02,635:INFO:Checking exceptions
2025-04-09 14:36:02,635:INFO:Preloading libraries
2025-04-09 14:36:02,635:INFO:Set up data.
2025-04-09 14:36:02,641:INFO:Set up index.
2025-04-09 14:36:03,451:INFO:Initializing predict_model()
2025-04-09 14:36:03,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14CD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:03,451:INFO:Checking exceptions
2025-04-09 14:36:03,451:INFO:Preloading libraries
2025-04-09 14:36:03,451:INFO:Set up data.
2025-04-09 14:36:03,455:INFO:Set up index.
2025-04-09 14:36:04,211:INFO:Initializing predict_model()
2025-04-09 14:36:04,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15A250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:04,212:INFO:Checking exceptions
2025-04-09 14:36:04,212:INFO:Preloading libraries
2025-04-09 14:36:04,212:INFO:Set up data.
2025-04-09 14:36:04,218:INFO:Set up index.
2025-04-09 14:36:04,986:INFO:Initializing predict_model()
2025-04-09 14:36:04,986:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15A290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:04,986:INFO:Checking exceptions
2025-04-09 14:36:04,986:INFO:Preloading libraries
2025-04-09 14:36:04,987:INFO:Set up data.
2025-04-09 14:36:04,994:INFO:Set up index.
2025-04-09 14:36:05,838:INFO:Initializing predict_model()
2025-04-09 14:36:05,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14F810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:05,838:INFO:Checking exceptions
2025-04-09 14:36:05,838:INFO:Preloading libraries
2025-04-09 14:36:05,839:INFO:Set up data.
2025-04-09 14:36:05,844:INFO:Set up index.
2025-04-09 14:36:06,670:INFO:Initializing predict_model()
2025-04-09 14:36:06,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14C3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC4ED40>)
2025-04-09 14:36:06,670:INFO:Checking exceptions
2025-04-09 14:36:06,670:INFO:Preloading libraries
2025-04-09 14:36:06,671:INFO:Set up data.
2025-04-09 14:36:06,676:INFO:Set up index.
2025-04-09 14:36:07,564:INFO:Initializing predict_model()
2025-04-09 14:36:07,564:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D49F4E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:07,565:INFO:Checking exceptions
2025-04-09 14:36:07,565:INFO:Preloading libraries
2025-04-09 14:36:07,565:INFO:Set up data.
2025-04-09 14:36:07,571:INFO:Set up index.
2025-04-09 14:36:08,419:INFO:Initializing predict_model()
2025-04-09 14:36:08,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14F410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:08,420:INFO:Checking exceptions
2025-04-09 14:36:08,420:INFO:Preloading libraries
2025-04-09 14:36:08,420:INFO:Set up data.
2025-04-09 14:36:08,426:INFO:Set up index.
2025-04-09 14:36:09,218:INFO:Initializing predict_model()
2025-04-09 14:36:09,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A163390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:09,218:INFO:Checking exceptions
2025-04-09 14:36:09,218:INFO:Preloading libraries
2025-04-09 14:36:09,219:INFO:Set up data.
2025-04-09 14:36:09,225:INFO:Set up index.
2025-04-09 14:36:10,016:INFO:Initializing predict_model()
2025-04-09 14:36:10,017:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14AE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:10,017:INFO:Checking exceptions
2025-04-09 14:36:10,017:INFO:Preloading libraries
2025-04-09 14:36:10,017:INFO:Set up data.
2025-04-09 14:36:10,023:INFO:Set up index.
2025-04-09 14:36:10,838:INFO:Initializing predict_model()
2025-04-09 14:36:10,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15AA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:10,838:INFO:Checking exceptions
2025-04-09 14:36:10,838:INFO:Preloading libraries
2025-04-09 14:36:10,839:INFO:Set up data.
2025-04-09 14:36:10,843:INFO:Set up index.
2025-04-09 14:36:11,627:INFO:Initializing predict_model()
2025-04-09 14:36:11,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A158ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:11,627:INFO:Checking exceptions
2025-04-09 14:36:11,628:INFO:Preloading libraries
2025-04-09 14:36:11,628:INFO:Set up data.
2025-04-09 14:36:11,633:INFO:Set up index.
2025-04-09 14:36:12,455:INFO:Initializing predict_model()
2025-04-09 14:36:12,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15E510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:12,455:INFO:Checking exceptions
2025-04-09 14:36:12,455:INFO:Preloading libraries
2025-04-09 14:36:12,456:INFO:Set up data.
2025-04-09 14:36:12,461:INFO:Set up index.
2025-04-09 14:36:13,257:INFO:Initializing predict_model()
2025-04-09 14:36:13,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15D410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:13,257:INFO:Checking exceptions
2025-04-09 14:36:13,257:INFO:Preloading libraries
2025-04-09 14:36:13,257:INFO:Set up data.
2025-04-09 14:36:13,262:INFO:Set up index.
2025-04-09 14:36:13,997:INFO:Initializing predict_model()
2025-04-09 14:36:13,997:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A167890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:13,997:INFO:Checking exceptions
2025-04-09 14:36:13,998:INFO:Preloading libraries
2025-04-09 14:36:13,998:INFO:Set up data.
2025-04-09 14:36:14,006:INFO:Set up index.
2025-04-09 14:36:14,891:INFO:Initializing predict_model()
2025-04-09 14:36:14,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15BBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:14,891:INFO:Checking exceptions
2025-04-09 14:36:14,891:INFO:Preloading libraries
2025-04-09 14:36:14,892:INFO:Set up data.
2025-04-09 14:36:14,896:INFO:Set up index.
2025-04-09 14:36:15,668:INFO:Initializing predict_model()
2025-04-09 14:36:15,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15DB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:15,669:INFO:Checking exceptions
2025-04-09 14:36:15,669:INFO:Preloading libraries
2025-04-09 14:36:15,669:INFO:Set up data.
2025-04-09 14:36:15,674:INFO:Set up index.
2025-04-09 14:36:16,423:INFO:Initializing predict_model()
2025-04-09 14:36:16,423:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A16C590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:16,423:INFO:Checking exceptions
2025-04-09 14:36:16,423:INFO:Preloading libraries
2025-04-09 14:36:16,423:INFO:Set up data.
2025-04-09 14:36:16,427:INFO:Set up index.
2025-04-09 14:36:17,242:INFO:Initializing predict_model()
2025-04-09 14:36:17,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:17,242:INFO:Checking exceptions
2025-04-09 14:36:17,243:INFO:Preloading libraries
2025-04-09 14:36:17,243:INFO:Set up data.
2025-04-09 14:36:17,249:INFO:Set up index.
2025-04-09 14:36:18,082:INFO:Initializing predict_model()
2025-04-09 14:36:18,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A166D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:18,083:INFO:Checking exceptions
2025-04-09 14:36:18,083:INFO:Preloading libraries
2025-04-09 14:36:18,083:INFO:Set up data.
2025-04-09 14:36:18,088:INFO:Set up index.
2025-04-09 14:36:18,904:INFO:Initializing predict_model()
2025-04-09 14:36:18,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15A310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:18,904:INFO:Checking exceptions
2025-04-09 14:36:18,904:INFO:Preloading libraries
2025-04-09 14:36:18,905:INFO:Set up data.
2025-04-09 14:36:18,910:INFO:Set up index.
2025-04-09 14:36:19,826:INFO:Initializing predict_model()
2025-04-09 14:36:19,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A16FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:19,827:INFO:Checking exceptions
2025-04-09 14:36:19,827:INFO:Preloading libraries
2025-04-09 14:36:19,828:INFO:Set up data.
2025-04-09 14:36:19,834:INFO:Set up index.
2025-04-09 14:36:20,682:INFO:Initializing predict_model()
2025-04-09 14:36:20,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15E750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:20,683:INFO:Checking exceptions
2025-04-09 14:36:20,683:INFO:Preloading libraries
2025-04-09 14:36:20,684:INFO:Set up data.
2025-04-09 14:36:20,691:INFO:Set up index.
2025-04-09 14:36:21,631:INFO:Initializing predict_model()
2025-04-09 14:36:21,631:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A159B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:21,631:INFO:Checking exceptions
2025-04-09 14:36:21,631:INFO:Preloading libraries
2025-04-09 14:36:21,632:INFO:Set up data.
2025-04-09 14:36:21,637:INFO:Set up index.
2025-04-09 14:36:22,636:INFO:Initializing predict_model()
2025-04-09 14:36:22,636:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14C450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:22,636:INFO:Checking exceptions
2025-04-09 14:36:22,636:INFO:Preloading libraries
2025-04-09 14:36:22,637:INFO:Set up data.
2025-04-09 14:36:22,643:INFO:Set up index.
2025-04-09 14:36:23,665:INFO:Initializing predict_model()
2025-04-09 14:36:23,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A166190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:23,665:INFO:Checking exceptions
2025-04-09 14:36:23,665:INFO:Preloading libraries
2025-04-09 14:36:23,665:INFO:Set up data.
2025-04-09 14:36:23,670:INFO:Set up index.
2025-04-09 14:36:24,585:INFO:Initializing predict_model()
2025-04-09 14:36:24,585:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A16D510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:24,585:INFO:Checking exceptions
2025-04-09 14:36:24,586:INFO:Preloading libraries
2025-04-09 14:36:24,586:INFO:Set up data.
2025-04-09 14:36:24,593:INFO:Set up index.
2025-04-09 14:36:25,480:INFO:Initializing predict_model()
2025-04-09 14:36:25,481:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A158890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:25,481:INFO:Checking exceptions
2025-04-09 14:36:25,481:INFO:Preloading libraries
2025-04-09 14:36:25,481:INFO:Set up data.
2025-04-09 14:36:25,487:INFO:Set up index.
2025-04-09 14:36:26,361:INFO:Initializing predict_model()
2025-04-09 14:36:26,362:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1644D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:26,362:INFO:Checking exceptions
2025-04-09 14:36:26,362:INFO:Preloading libraries
2025-04-09 14:36:26,362:INFO:Set up data.
2025-04-09 14:36:26,368:INFO:Set up index.
2025-04-09 14:36:27,262:INFO:Initializing predict_model()
2025-04-09 14:36:27,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15A750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:27,263:INFO:Checking exceptions
2025-04-09 14:36:27,263:INFO:Preloading libraries
2025-04-09 14:36:27,264:INFO:Set up data.
2025-04-09 14:36:27,270:INFO:Set up index.
2025-04-09 14:36:28,137:INFO:Initializing predict_model()
2025-04-09 14:36:28,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A163B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:28,137:INFO:Checking exceptions
2025-04-09 14:36:28,138:INFO:Preloading libraries
2025-04-09 14:36:28,138:INFO:Set up data.
2025-04-09 14:36:28,143:INFO:Set up index.
2025-04-09 14:36:28,979:INFO:Initializing predict_model()
2025-04-09 14:36:28,979:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A17B850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:28,980:INFO:Checking exceptions
2025-04-09 14:36:28,980:INFO:Preloading libraries
2025-04-09 14:36:28,980:INFO:Set up data.
2025-04-09 14:36:28,987:INFO:Set up index.
2025-04-09 14:36:29,851:INFO:Initializing predict_model()
2025-04-09 14:36:29,851:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A160750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:29,851:INFO:Checking exceptions
2025-04-09 14:36:29,852:INFO:Preloading libraries
2025-04-09 14:36:29,852:INFO:Set up data.
2025-04-09 14:36:29,859:INFO:Set up index.
2025-04-09 14:36:30,760:INFO:Initializing predict_model()
2025-04-09 14:36:30,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A178050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:30,760:INFO:Checking exceptions
2025-04-09 14:36:30,760:INFO:Preloading libraries
2025-04-09 14:36:30,761:INFO:Set up data.
2025-04-09 14:36:30,765:INFO:Set up index.
2025-04-09 14:36:31,661:INFO:Initializing predict_model()
2025-04-09 14:36:31,661:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15EBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:31,661:INFO:Checking exceptions
2025-04-09 14:36:31,662:INFO:Preloading libraries
2025-04-09 14:36:31,662:INFO:Set up data.
2025-04-09 14:36:31,669:INFO:Set up index.
2025-04-09 14:36:32,561:INFO:Initializing predict_model()
2025-04-09 14:36:32,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:32,561:INFO:Checking exceptions
2025-04-09 14:36:32,561:INFO:Preloading libraries
2025-04-09 14:36:32,562:INFO:Set up data.
2025-04-09 14:36:32,566:INFO:Set up index.
2025-04-09 14:36:33,374:INFO:Initializing predict_model()
2025-04-09 14:36:33,375:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15F150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:33,375:INFO:Checking exceptions
2025-04-09 14:36:33,375:INFO:Preloading libraries
2025-04-09 14:36:33,375:INFO:Set up data.
2025-04-09 14:36:33,381:INFO:Set up index.
2025-04-09 14:36:34,320:INFO:Initializing predict_model()
2025-04-09 14:36:34,321:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A176590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:34,321:INFO:Checking exceptions
2025-04-09 14:36:34,321:INFO:Preloading libraries
2025-04-09 14:36:34,322:INFO:Set up data.
2025-04-09 14:36:34,328:INFO:Set up index.
2025-04-09 14:36:35,127:INFO:Initializing predict_model()
2025-04-09 14:36:35,128:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A165F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:35,128:INFO:Checking exceptions
2025-04-09 14:36:35,128:INFO:Preloading libraries
2025-04-09 14:36:35,128:INFO:Set up data.
2025-04-09 14:36:35,133:INFO:Set up index.
2025-04-09 14:36:35,881:INFO:Initializing predict_model()
2025-04-09 14:36:35,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A162D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:35,881:INFO:Checking exceptions
2025-04-09 14:36:35,882:INFO:Preloading libraries
2025-04-09 14:36:35,882:INFO:Set up data.
2025-04-09 14:36:35,887:INFO:Set up index.
2025-04-09 14:36:36,722:INFO:Initializing predict_model()
2025-04-09 14:36:36,723:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A165F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D3FC68C20>)
2025-04-09 14:36:36,723:INFO:Checking exceptions
2025-04-09 14:36:36,723:INFO:Preloading libraries
2025-04-09 14:36:36,723:INFO:Set up data.
2025-04-09 14:36:36,728:INFO:Set up index.
2025-04-09 14:36:37,493:INFO:Initializing predict_model()
2025-04-09 14:36:37,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A162D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:37,493:INFO:Checking exceptions
2025-04-09 14:36:37,493:INFO:Preloading libraries
2025-04-09 14:36:37,494:INFO:Set up data.
2025-04-09 14:36:37,498:INFO:Set up index.
2025-04-09 14:36:38,316:INFO:Initializing predict_model()
2025-04-09 14:36:38,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A162DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:38,316:INFO:Checking exceptions
2025-04-09 14:36:38,317:INFO:Preloading libraries
2025-04-09 14:36:38,317:INFO:Set up data.
2025-04-09 14:36:38,322:INFO:Set up index.
2025-04-09 14:36:39,218:INFO:Initializing predict_model()
2025-04-09 14:36:39,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14B7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:39,219:INFO:Checking exceptions
2025-04-09 14:36:39,219:INFO:Preloading libraries
2025-04-09 14:36:39,219:INFO:Set up data.
2025-04-09 14:36:39,224:INFO:Set up index.
2025-04-09 14:36:40,011:INFO:Initializing predict_model()
2025-04-09 14:36:40,011:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A14BAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:40,011:INFO:Checking exceptions
2025-04-09 14:36:40,012:INFO:Preloading libraries
2025-04-09 14:36:40,012:INFO:Set up data.
2025-04-09 14:36:40,017:INFO:Set up index.
2025-04-09 14:36:40,795:INFO:Initializing predict_model()
2025-04-09 14:36:40,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A15C450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:40,795:INFO:Checking exceptions
2025-04-09 14:36:40,796:INFO:Preloading libraries
2025-04-09 14:36:40,796:INFO:Set up data.
2025-04-09 14:36:40,802:INFO:Set up index.
2025-04-09 14:36:41,631:INFO:Initializing predict_model()
2025-04-09 14:36:41,632:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1795D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:41,632:INFO:Checking exceptions
2025-04-09 14:36:41,632:INFO:Preloading libraries
2025-04-09 14:36:41,632:INFO:Set up data.
2025-04-09 14:36:41,638:INFO:Set up index.
2025-04-09 14:36:42,455:INFO:Initializing predict_model()
2025-04-09 14:36:42,456:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A17B190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:42,456:INFO:Checking exceptions
2025-04-09 14:36:42,456:INFO:Preloading libraries
2025-04-09 14:36:42,456:INFO:Set up data.
2025-04-09 14:36:42,462:INFO:Set up index.
2025-04-09 14:36:43,261:INFO:Initializing predict_model()
2025-04-09 14:36:43,262:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A178810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:43,262:INFO:Checking exceptions
2025-04-09 14:36:43,262:INFO:Preloading libraries
2025-04-09 14:36:43,263:INFO:Set up data.
2025-04-09 14:36:43,269:INFO:Set up index.
2025-04-09 14:36:44,092:INFO:Initializing predict_model()
2025-04-09 14:36:44,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D4A1796D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024D4A0EDB20>)
2025-04-09 14:36:44,092:INFO:Checking exceptions
2025-04-09 14:36:44,092:INFO:Preloading libraries
2025-04-09 14:36:44,093:INFO:Set up data.
2025-04-09 14:36:44,098:INFO:Set up index.
2025-04-09 14:39:28,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:39:28,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:39:28,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:39:28,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:39:32,520:INFO:Initializing load_model()
2025-04-09 14:39:32,520:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:39:32,575:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:39:36,821:INFO:Initializing predict_model()
2025-04-09 14:39:36,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DE30D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:36,822:INFO:Checking exceptions
2025-04-09 14:39:36,822:INFO:Preloading libraries
2025-04-09 14:39:36,822:INFO:Set up data.
2025-04-09 14:39:36,828:INFO:Set up index.
2025-04-09 14:39:37,640:INFO:Initializing predict_model()
2025-04-09 14:39:37,640:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1E0F2D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:37,640:INFO:Checking exceptions
2025-04-09 14:39:37,641:INFO:Preloading libraries
2025-04-09 14:39:37,641:INFO:Set up data.
2025-04-09 14:39:37,646:INFO:Set up index.
2025-04-09 14:39:38,436:INFO:Initializing predict_model()
2025-04-09 14:39:38,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DDA6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:38,437:INFO:Checking exceptions
2025-04-09 14:39:38,437:INFO:Preloading libraries
2025-04-09 14:39:38,438:INFO:Set up data.
2025-04-09 14:39:38,444:INFO:Set up index.
2025-04-09 14:39:39,165:INFO:Initializing predict_model()
2025-04-09 14:39:39,165:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DE8AA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:39,165:INFO:Checking exceptions
2025-04-09 14:39:39,165:INFO:Preloading libraries
2025-04-09 14:39:39,166:INFO:Set up data.
2025-04-09 14:39:39,171:INFO:Set up index.
2025-04-09 14:39:39,878:INFO:Initializing predict_model()
2025-04-09 14:39:39,878:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1E0F2D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:39,878:INFO:Checking exceptions
2025-04-09 14:39:39,878:INFO:Preloading libraries
2025-04-09 14:39:39,879:INFO:Set up data.
2025-04-09 14:39:39,882:INFO:Set up index.
2025-04-09 14:39:40,614:INFO:Initializing predict_model()
2025-04-09 14:39:40,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:40,614:INFO:Checking exceptions
2025-04-09 14:39:40,614:INFO:Preloading libraries
2025-04-09 14:39:40,615:INFO:Set up data.
2025-04-09 14:39:40,620:INFO:Set up index.
2025-04-09 14:39:41,330:INFO:Initializing predict_model()
2025-04-09 14:39:41,330:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DFE1ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:41,330:INFO:Checking exceptions
2025-04-09 14:39:41,330:INFO:Preloading libraries
2025-04-09 14:39:41,331:INFO:Set up data.
2025-04-09 14:39:41,334:INFO:Set up index.
2025-04-09 14:39:42,072:INFO:Initializing predict_model()
2025-04-09 14:39:42,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F29775590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:42,073:INFO:Checking exceptions
2025-04-09 14:39:42,073:INFO:Preloading libraries
2025-04-09 14:39:42,073:INFO:Set up data.
2025-04-09 14:39:42,079:INFO:Set up index.
2025-04-09 14:39:42,879:INFO:Initializing predict_model()
2025-04-09 14:39:42,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F27F9B190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:42,880:INFO:Checking exceptions
2025-04-09 14:39:42,880:INFO:Preloading libraries
2025-04-09 14:39:42,881:INFO:Set up data.
2025-04-09 14:39:42,885:INFO:Set up index.
2025-04-09 14:39:43,608:INFO:Initializing predict_model()
2025-04-09 14:39:43,608:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:43,608:INFO:Checking exceptions
2025-04-09 14:39:43,608:INFO:Preloading libraries
2025-04-09 14:39:43,609:INFO:Set up data.
2025-04-09 14:39:43,613:INFO:Set up index.
2025-04-09 14:39:44,353:INFO:Initializing predict_model()
2025-04-09 14:39:44,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2839D410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:44,353:INFO:Checking exceptions
2025-04-09 14:39:44,354:INFO:Preloading libraries
2025-04-09 14:39:44,354:INFO:Set up data.
2025-04-09 14:39:44,357:INFO:Set up index.
2025-04-09 14:39:45,052:INFO:Initializing predict_model()
2025-04-09 14:39:45,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A07D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:45,053:INFO:Checking exceptions
2025-04-09 14:39:45,053:INFO:Preloading libraries
2025-04-09 14:39:45,053:INFO:Set up data.
2025-04-09 14:39:45,058:INFO:Set up index.
2025-04-09 14:39:45,794:INFO:Initializing predict_model()
2025-04-09 14:39:45,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1E003350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:39:45,794:INFO:Checking exceptions
2025-04-09 14:39:45,794:INFO:Preloading libraries
2025-04-09 14:39:45,794:INFO:Set up data.
2025-04-09 14:39:45,799:INFO:Set up index.
2025-04-09 14:39:46,543:INFO:Initializing predict_model()
2025-04-09 14:39:46,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2978E7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:39:46,544:INFO:Checking exceptions
2025-04-09 14:39:46,544:INFO:Preloading libraries
2025-04-09 14:39:46,544:INFO:Set up data.
2025-04-09 14:39:46,549:INFO:Set up index.
2025-04-09 14:39:47,233:INFO:Initializing predict_model()
2025-04-09 14:39:47,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2978F610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:47,234:INFO:Checking exceptions
2025-04-09 14:39:47,234:INFO:Preloading libraries
2025-04-09 14:39:47,234:INFO:Set up data.
2025-04-09 14:39:47,239:INFO:Set up index.
2025-04-09 14:39:47,939:INFO:Initializing predict_model()
2025-04-09 14:39:47,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2969DC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:47,939:INFO:Checking exceptions
2025-04-09 14:39:47,939:INFO:Preloading libraries
2025-04-09 14:39:47,939:INFO:Set up data.
2025-04-09 14:39:47,945:INFO:Set up index.
2025-04-09 14:39:48,695:INFO:Initializing predict_model()
2025-04-09 14:39:48,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A0590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:48,695:INFO:Checking exceptions
2025-04-09 14:39:48,695:INFO:Preloading libraries
2025-04-09 14:39:48,696:INFO:Set up data.
2025-04-09 14:39:48,700:INFO:Set up index.
2025-04-09 14:39:49,384:INFO:Initializing predict_model()
2025-04-09 14:39:49,385:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DE23910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:49,385:INFO:Checking exceptions
2025-04-09 14:39:49,385:INFO:Preloading libraries
2025-04-09 14:39:49,385:INFO:Set up data.
2025-04-09 14:39:49,390:INFO:Set up index.
2025-04-09 14:39:50,153:INFO:Initializing predict_model()
2025-04-09 14:39:50,153:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B9C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:50,153:INFO:Checking exceptions
2025-04-09 14:39:50,153:INFO:Preloading libraries
2025-04-09 14:39:50,154:INFO:Set up data.
2025-04-09 14:39:50,160:INFO:Set up index.
2025-04-09 14:39:50,891:INFO:Initializing predict_model()
2025-04-09 14:39:50,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:50,891:INFO:Checking exceptions
2025-04-09 14:39:50,892:INFO:Preloading libraries
2025-04-09 14:39:50,892:INFO:Set up data.
2025-04-09 14:39:50,897:INFO:Set up index.
2025-04-09 14:39:51,566:INFO:Initializing predict_model()
2025-04-09 14:39:51,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:51,566:INFO:Checking exceptions
2025-04-09 14:39:51,567:INFO:Preloading libraries
2025-04-09 14:39:51,567:INFO:Set up data.
2025-04-09 14:39:51,571:INFO:Set up index.
2025-04-09 14:39:52,339:INFO:Initializing predict_model()
2025-04-09 14:39:52,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A1AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:52,340:INFO:Checking exceptions
2025-04-09 14:39:52,340:INFO:Preloading libraries
2025-04-09 14:39:52,340:INFO:Set up data.
2025-04-09 14:39:52,346:INFO:Set up index.
2025-04-09 14:39:53,203:INFO:Initializing predict_model()
2025-04-09 14:39:53,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DFC4390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:53,203:INFO:Checking exceptions
2025-04-09 14:39:53,203:INFO:Preloading libraries
2025-04-09 14:39:53,203:INFO:Set up data.
2025-04-09 14:39:53,209:INFO:Set up index.
2025-04-09 14:39:53,920:INFO:Initializing predict_model()
2025-04-09 14:39:53,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:53,920:INFO:Checking exceptions
2025-04-09 14:39:53,920:INFO:Preloading libraries
2025-04-09 14:39:53,921:INFO:Set up data.
2025-04-09 14:39:53,924:INFO:Set up index.
2025-04-09 14:39:54,678:INFO:Initializing predict_model()
2025-04-09 14:39:54,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:54,679:INFO:Checking exceptions
2025-04-09 14:39:54,679:INFO:Preloading libraries
2025-04-09 14:39:54,679:INFO:Set up data.
2025-04-09 14:39:54,683:INFO:Set up index.
2025-04-09 14:39:55,373:INFO:Initializing predict_model()
2025-04-09 14:39:55,373:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:55,373:INFO:Checking exceptions
2025-04-09 14:39:55,373:INFO:Preloading libraries
2025-04-09 14:39:55,374:INFO:Set up data.
2025-04-09 14:39:55,379:INFO:Set up index.
2025-04-09 14:39:56,114:INFO:Initializing predict_model()
2025-04-09 14:39:56,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:56,115:INFO:Checking exceptions
2025-04-09 14:39:56,115:INFO:Preloading libraries
2025-04-09 14:39:56,116:INFO:Set up data.
2025-04-09 14:39:56,122:INFO:Set up index.
2025-04-09 14:39:56,855:INFO:Initializing predict_model()
2025-04-09 14:39:56,855:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BDB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:56,855:INFO:Checking exceptions
2025-04-09 14:39:56,855:INFO:Preloading libraries
2025-04-09 14:39:56,856:INFO:Set up data.
2025-04-09 14:39:56,861:INFO:Set up index.
2025-04-09 14:39:57,581:INFO:Initializing predict_model()
2025-04-09 14:39:57,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BF1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:57,581:INFO:Checking exceptions
2025-04-09 14:39:57,581:INFO:Preloading libraries
2025-04-09 14:39:57,582:INFO:Set up data.
2025-04-09 14:39:57,586:INFO:Set up index.
2025-04-09 14:39:58,354:INFO:Initializing predict_model()
2025-04-09 14:39:58,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:58,354:INFO:Checking exceptions
2025-04-09 14:39:58,354:INFO:Preloading libraries
2025-04-09 14:39:58,355:INFO:Set up data.
2025-04-09 14:39:58,360:INFO:Set up index.
2025-04-09 14:39:59,079:INFO:Initializing predict_model()
2025-04-09 14:39:59,079:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2978E690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:59,079:INFO:Checking exceptions
2025-04-09 14:39:59,079:INFO:Preloading libraries
2025-04-09 14:39:59,080:INFO:Set up data.
2025-04-09 14:39:59,084:INFO:Set up index.
2025-04-09 14:39:59,842:INFO:Initializing predict_model()
2025-04-09 14:39:59,842:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AC6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:39:59,842:INFO:Checking exceptions
2025-04-09 14:39:59,843:INFO:Preloading libraries
2025-04-09 14:39:59,843:INFO:Set up data.
2025-04-09 14:39:59,848:INFO:Set up index.
2025-04-09 14:40:00,827:INFO:Initializing predict_model()
2025-04-09 14:40:00,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ACC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:00,828:INFO:Checking exceptions
2025-04-09 14:40:00,828:INFO:Preloading libraries
2025-04-09 14:40:00,828:INFO:Set up data.
2025-04-09 14:40:00,833:INFO:Set up index.
2025-04-09 14:40:01,697:INFO:Initializing predict_model()
2025-04-09 14:40:01,697:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2978EAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:01,697:INFO:Checking exceptions
2025-04-09 14:40:01,697:INFO:Preloading libraries
2025-04-09 14:40:01,698:INFO:Set up data.
2025-04-09 14:40:01,704:INFO:Set up index.
2025-04-09 14:40:02,711:INFO:Initializing predict_model()
2025-04-09 14:40:02,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AD650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:02,712:INFO:Checking exceptions
2025-04-09 14:40:02,712:INFO:Preloading libraries
2025-04-09 14:40:02,713:INFO:Set up data.
2025-04-09 14:40:02,720:INFO:Set up index.
2025-04-09 14:40:03,495:INFO:Initializing predict_model()
2025-04-09 14:40:03,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BBE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:03,496:INFO:Checking exceptions
2025-04-09 14:40:03,496:INFO:Preloading libraries
2025-04-09 14:40:03,497:INFO:Set up data.
2025-04-09 14:40:03,501:INFO:Set up index.
2025-04-09 14:40:04,320:INFO:Initializing predict_model()
2025-04-09 14:40:04,320:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BBB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:04,320:INFO:Checking exceptions
2025-04-09 14:40:04,320:INFO:Preloading libraries
2025-04-09 14:40:04,320:INFO:Set up data.
2025-04-09 14:40:04,325:INFO:Set up index.
2025-04-09 14:40:05,086:INFO:Initializing predict_model()
2025-04-09 14:40:05,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2978CB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:05,086:INFO:Checking exceptions
2025-04-09 14:40:05,087:INFO:Preloading libraries
2025-04-09 14:40:05,087:INFO:Set up data.
2025-04-09 14:40:05,092:INFO:Set up index.
2025-04-09 14:40:05,799:INFO:Initializing predict_model()
2025-04-09 14:40:05,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BAD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:05,802:INFO:Checking exceptions
2025-04-09 14:40:05,802:INFO:Preloading libraries
2025-04-09 14:40:05,803:INFO:Set up data.
2025-04-09 14:40:05,808:INFO:Set up index.
2025-04-09 14:40:06,610:INFO:Initializing predict_model()
2025-04-09 14:40:06,610:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F295B5010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:40:06,610:INFO:Checking exceptions
2025-04-09 14:40:06,610:INFO:Preloading libraries
2025-04-09 14:40:06,611:INFO:Set up data.
2025-04-09 14:40:06,616:INFO:Set up index.
2025-04-09 14:40:07,350:INFO:Initializing predict_model()
2025-04-09 14:40:07,350:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AE050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:07,350:INFO:Checking exceptions
2025-04-09 14:40:07,350:INFO:Preloading libraries
2025-04-09 14:40:07,351:INFO:Set up data.
2025-04-09 14:40:07,357:INFO:Set up index.
2025-04-09 14:40:08,097:INFO:Initializing predict_model()
2025-04-09 14:40:08,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:08,098:INFO:Checking exceptions
2025-04-09 14:40:08,098:INFO:Preloading libraries
2025-04-09 14:40:08,098:INFO:Set up data.
2025-04-09 14:40:08,104:INFO:Set up index.
2025-04-09 14:40:08,924:INFO:Initializing predict_model()
2025-04-09 14:40:08,924:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F27D98510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:08,924:INFO:Checking exceptions
2025-04-09 14:40:08,925:INFO:Preloading libraries
2025-04-09 14:40:08,925:INFO:Set up data.
2025-04-09 14:40:08,931:INFO:Set up index.
2025-04-09 14:40:09,719:INFO:Initializing predict_model()
2025-04-09 14:40:09,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ACFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:09,721:INFO:Checking exceptions
2025-04-09 14:40:09,721:INFO:Preloading libraries
2025-04-09 14:40:09,722:INFO:Set up data.
2025-04-09 14:40:09,726:INFO:Set up index.
2025-04-09 14:40:10,482:INFO:Initializing predict_model()
2025-04-09 14:40:10,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ADA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:10,483:INFO:Checking exceptions
2025-04-09 14:40:10,483:INFO:Preloading libraries
2025-04-09 14:40:10,483:INFO:Set up data.
2025-04-09 14:40:10,488:INFO:Set up index.
2025-04-09 14:40:11,233:INFO:Initializing predict_model()
2025-04-09 14:40:11,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:11,233:INFO:Checking exceptions
2025-04-09 14:40:11,233:INFO:Preloading libraries
2025-04-09 14:40:11,233:INFO:Set up data.
2025-04-09 14:40:11,238:INFO:Set up index.
2025-04-09 14:40:11,933:INFO:Initializing predict_model()
2025-04-09 14:40:11,933:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BD050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:11,933:INFO:Checking exceptions
2025-04-09 14:40:11,933:INFO:Preloading libraries
2025-04-09 14:40:11,934:INFO:Set up data.
2025-04-09 14:40:11,941:INFO:Set up index.
2025-04-09 14:40:12,738:INFO:Initializing predict_model()
2025-04-09 14:40:12,738:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DDA7550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:12,738:INFO:Checking exceptions
2025-04-09 14:40:12,738:INFO:Preloading libraries
2025-04-09 14:40:12,739:INFO:Set up data.
2025-04-09 14:40:12,745:INFO:Set up index.
2025-04-09 14:40:13,526:INFO:Initializing predict_model()
2025-04-09 14:40:13,527:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DE22310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:13,527:INFO:Checking exceptions
2025-04-09 14:40:13,527:INFO:Preloading libraries
2025-04-09 14:40:13,528:INFO:Set up data.
2025-04-09 14:40:13,533:INFO:Set up index.
2025-04-09 14:40:14,413:INFO:Initializing predict_model()
2025-04-09 14:40:14,414:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C07D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:14,414:INFO:Checking exceptions
2025-04-09 14:40:14,414:INFO:Preloading libraries
2025-04-09 14:40:14,415:INFO:Set up data.
2025-04-09 14:40:14,422:INFO:Set up index.
2025-04-09 14:40:15,258:INFO:Initializing predict_model()
2025-04-09 14:40:15,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C3890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:15,259:INFO:Checking exceptions
2025-04-09 14:40:15,259:INFO:Preloading libraries
2025-04-09 14:40:15,259:INFO:Set up data.
2025-04-09 14:40:15,264:INFO:Set up index.
2025-04-09 14:40:16,115:INFO:Initializing predict_model()
2025-04-09 14:40:16,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F1DDA7550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:16,115:INFO:Checking exceptions
2025-04-09 14:40:16,115:INFO:Preloading libraries
2025-04-09 14:40:16,116:INFO:Set up data.
2025-04-09 14:40:16,124:INFO:Set up index.
2025-04-09 14:40:17,035:INFO:Initializing predict_model()
2025-04-09 14:40:17,035:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B93D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:17,035:INFO:Checking exceptions
2025-04-09 14:40:17,035:INFO:Preloading libraries
2025-04-09 14:40:17,036:INFO:Set up data.
2025-04-09 14:40:17,041:INFO:Set up index.
2025-04-09 14:40:17,776:INFO:Initializing predict_model()
2025-04-09 14:40:17,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A1390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:17,776:INFO:Checking exceptions
2025-04-09 14:40:17,776:INFO:Preloading libraries
2025-04-09 14:40:17,777:INFO:Set up data.
2025-04-09 14:40:17,782:INFO:Set up index.
2025-04-09 14:40:18,545:INFO:Initializing predict_model()
2025-04-09 14:40:18,546:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BC690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:18,546:INFO:Checking exceptions
2025-04-09 14:40:18,546:INFO:Preloading libraries
2025-04-09 14:40:18,546:INFO:Set up data.
2025-04-09 14:40:18,550:INFO:Set up index.
2025-04-09 14:40:19,275:INFO:Initializing predict_model()
2025-04-09 14:40:19,275:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C2290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:19,275:INFO:Checking exceptions
2025-04-09 14:40:19,275:INFO:Preloading libraries
2025-04-09 14:40:19,276:INFO:Set up data.
2025-04-09 14:40:19,280:INFO:Set up index.
2025-04-09 14:40:20,007:INFO:Initializing predict_model()
2025-04-09 14:40:20,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F282CC410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:20,007:INFO:Checking exceptions
2025-04-09 14:40:20,007:INFO:Preloading libraries
2025-04-09 14:40:20,008:INFO:Set up data.
2025-04-09 14:40:20,013:INFO:Set up index.
2025-04-09 14:40:20,797:INFO:Initializing predict_model()
2025-04-09 14:40:20,797:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A1CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:20,797:INFO:Checking exceptions
2025-04-09 14:40:20,798:INFO:Preloading libraries
2025-04-09 14:40:20,798:INFO:Set up data.
2025-04-09 14:40:20,803:INFO:Set up index.
2025-04-09 14:40:21,528:INFO:Initializing predict_model()
2025-04-09 14:40:21,528:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:21,529:INFO:Checking exceptions
2025-04-09 14:40:21,529:INFO:Preloading libraries
2025-04-09 14:40:21,529:INFO:Set up data.
2025-04-09 14:40:21,536:INFO:Set up index.
2025-04-09 14:40:22,275:INFO:Initializing predict_model()
2025-04-09 14:40:22,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C1390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:22,276:INFO:Checking exceptions
2025-04-09 14:40:22,276:INFO:Preloading libraries
2025-04-09 14:40:22,277:INFO:Set up data.
2025-04-09 14:40:22,281:INFO:Set up index.
2025-04-09 14:40:23,053:INFO:Initializing predict_model()
2025-04-09 14:40:23,054:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BC590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:23,054:INFO:Checking exceptions
2025-04-09 14:40:23,054:INFO:Preloading libraries
2025-04-09 14:40:23,054:INFO:Set up data.
2025-04-09 14:40:23,060:INFO:Set up index.
2025-04-09 14:40:23,784:INFO:Initializing predict_model()
2025-04-09 14:40:23,784:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BC990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:23,784:INFO:Checking exceptions
2025-04-09 14:40:23,784:INFO:Preloading libraries
2025-04-09 14:40:23,785:INFO:Set up data.
2025-04-09 14:40:23,790:INFO:Set up index.
2025-04-09 14:40:24,596:INFO:Initializing predict_model()
2025-04-09 14:40:24,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AFED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:24,597:INFO:Checking exceptions
2025-04-09 14:40:24,597:INFO:Preloading libraries
2025-04-09 14:40:24,597:INFO:Set up data.
2025-04-09 14:40:24,602:INFO:Set up index.
2025-04-09 14:40:25,366:INFO:Initializing predict_model()
2025-04-09 14:40:25,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C65D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:25,366:INFO:Checking exceptions
2025-04-09 14:40:25,366:INFO:Preloading libraries
2025-04-09 14:40:25,366:INFO:Set up data.
2025-04-09 14:40:25,371:INFO:Set up index.
2025-04-09 14:40:26,125:INFO:Initializing predict_model()
2025-04-09 14:40:26,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ADAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:26,126:INFO:Checking exceptions
2025-04-09 14:40:26,126:INFO:Preloading libraries
2025-04-09 14:40:26,127:INFO:Set up data.
2025-04-09 14:40:26,133:INFO:Set up index.
2025-04-09 14:40:26,892:INFO:Initializing predict_model()
2025-04-09 14:40:26,892:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BD950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:26,892:INFO:Checking exceptions
2025-04-09 14:40:26,892:INFO:Preloading libraries
2025-04-09 14:40:26,893:INFO:Set up data.
2025-04-09 14:40:26,898:INFO:Set up index.
2025-04-09 14:40:27,601:INFO:Initializing predict_model()
2025-04-09 14:40:27,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BF310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:27,602:INFO:Checking exceptions
2025-04-09 14:40:27,602:INFO:Preloading libraries
2025-04-09 14:40:27,602:INFO:Set up data.
2025-04-09 14:40:27,608:INFO:Set up index.
2025-04-09 14:40:28,438:INFO:Initializing predict_model()
2025-04-09 14:40:28,439:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2978CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:28,439:INFO:Checking exceptions
2025-04-09 14:40:28,439:INFO:Preloading libraries
2025-04-09 14:40:28,440:INFO:Set up data.
2025-04-09 14:40:28,448:INFO:Set up index.
2025-04-09 14:40:29,208:INFO:Initializing predict_model()
2025-04-09 14:40:29,208:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BC6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:29,208:INFO:Checking exceptions
2025-04-09 14:40:29,208:INFO:Preloading libraries
2025-04-09 14:40:29,209:INFO:Set up data.
2025-04-09 14:40:29,214:INFO:Set up index.
2025-04-09 14:40:30,176:INFO:Initializing predict_model()
2025-04-09 14:40:30,176:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BF310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:30,177:INFO:Checking exceptions
2025-04-09 14:40:30,177:INFO:Preloading libraries
2025-04-09 14:40:30,177:INFO:Set up data.
2025-04-09 14:40:30,184:INFO:Set up index.
2025-04-09 14:40:31,012:INFO:Initializing predict_model()
2025-04-09 14:40:31,012:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CA290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:31,012:INFO:Checking exceptions
2025-04-09 14:40:31,012:INFO:Preloading libraries
2025-04-09 14:40:31,013:INFO:Set up data.
2025-04-09 14:40:31,017:INFO:Set up index.
2025-04-09 14:40:31,795:INFO:Initializing predict_model()
2025-04-09 14:40:31,796:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BFD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:31,796:INFO:Checking exceptions
2025-04-09 14:40:31,796:INFO:Preloading libraries
2025-04-09 14:40:31,796:INFO:Set up data.
2025-04-09 14:40:31,801:INFO:Set up index.
2025-04-09 14:40:32,776:INFO:Initializing predict_model()
2025-04-09 14:40:32,777:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:32,777:INFO:Checking exceptions
2025-04-09 14:40:32,778:INFO:Preloading libraries
2025-04-09 14:40:32,779:INFO:Set up data.
2025-04-09 14:40:32,787:INFO:Set up index.
2025-04-09 14:40:33,862:INFO:Initializing predict_model()
2025-04-09 14:40:33,863:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ACE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:33,863:INFO:Checking exceptions
2025-04-09 14:40:33,863:INFO:Preloading libraries
2025-04-09 14:40:33,863:INFO:Set up data.
2025-04-09 14:40:33,870:INFO:Set up index.
2025-04-09 14:40:34,787:INFO:Initializing predict_model()
2025-04-09 14:40:34,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:34,787:INFO:Checking exceptions
2025-04-09 14:40:34,788:INFO:Preloading libraries
2025-04-09 14:40:34,788:INFO:Set up data.
2025-04-09 14:40:34,796:INFO:Set up index.
2025-04-09 14:40:35,712:INFO:Initializing predict_model()
2025-04-09 14:40:35,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C5F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:35,713:INFO:Checking exceptions
2025-04-09 14:40:35,713:INFO:Preloading libraries
2025-04-09 14:40:35,714:INFO:Set up data.
2025-04-09 14:40:35,720:INFO:Set up index.
2025-04-09 14:40:36,616:INFO:Initializing predict_model()
2025-04-09 14:40:36,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A39D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E208CC0>)
2025-04-09 14:40:36,616:INFO:Checking exceptions
2025-04-09 14:40:36,617:INFO:Preloading libraries
2025-04-09 14:40:36,617:INFO:Set up data.
2025-04-09 14:40:36,624:INFO:Set up index.
2025-04-09 14:40:37,674:INFO:Initializing predict_model()
2025-04-09 14:40:37,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BB850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:37,674:INFO:Checking exceptions
2025-04-09 14:40:37,674:INFO:Preloading libraries
2025-04-09 14:40:37,675:INFO:Set up data.
2025-04-09 14:40:37,681:INFO:Set up index.
2025-04-09 14:40:38,585:INFO:Initializing predict_model()
2025-04-09 14:40:38,585:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AE190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:38,586:INFO:Checking exceptions
2025-04-09 14:40:38,586:INFO:Preloading libraries
2025-04-09 14:40:38,586:INFO:Set up data.
2025-04-09 14:40:38,593:INFO:Set up index.
2025-04-09 14:40:39,363:INFO:Initializing predict_model()
2025-04-09 14:40:39,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C1410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:39,363:INFO:Checking exceptions
2025-04-09 14:40:39,363:INFO:Preloading libraries
2025-04-09 14:40:39,364:INFO:Set up data.
2025-04-09 14:40:39,368:INFO:Set up index.
2025-04-09 14:40:40,237:INFO:Initializing predict_model()
2025-04-09 14:40:40,237:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B9ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:40,237:INFO:Checking exceptions
2025-04-09 14:40:40,237:INFO:Preloading libraries
2025-04-09 14:40:40,238:INFO:Set up data.
2025-04-09 14:40:40,243:INFO:Set up index.
2025-04-09 14:40:41,146:INFO:Initializing predict_model()
2025-04-09 14:40:41,146:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C7550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:41,146:INFO:Checking exceptions
2025-04-09 14:40:41,147:INFO:Preloading libraries
2025-04-09 14:40:41,147:INFO:Set up data.
2025-04-09 14:40:41,153:INFO:Set up index.
2025-04-09 14:40:41,903:INFO:Initializing predict_model()
2025-04-09 14:40:41,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:41,903:INFO:Checking exceptions
2025-04-09 14:40:41,903:INFO:Preloading libraries
2025-04-09 14:40:41,904:INFO:Set up data.
2025-04-09 14:40:41,909:INFO:Set up index.
2025-04-09 14:40:42,767:INFO:Initializing predict_model()
2025-04-09 14:40:42,768:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ACF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:42,768:INFO:Checking exceptions
2025-04-09 14:40:42,768:INFO:Preloading libraries
2025-04-09 14:40:42,768:INFO:Set up data.
2025-04-09 14:40:42,773:INFO:Set up index.
2025-04-09 14:40:43,579:INFO:Initializing predict_model()
2025-04-09 14:40:43,580:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C6B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:43,580:INFO:Checking exceptions
2025-04-09 14:40:43,580:INFO:Preloading libraries
2025-04-09 14:40:43,580:INFO:Set up data.
2025-04-09 14:40:43,585:INFO:Set up index.
2025-04-09 14:40:44,347:INFO:Initializing predict_model()
2025-04-09 14:40:44,347:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C3ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:44,348:INFO:Checking exceptions
2025-04-09 14:40:44,348:INFO:Preloading libraries
2025-04-09 14:40:44,348:INFO:Set up data.
2025-04-09 14:40:44,353:INFO:Set up index.
2025-04-09 14:40:45,179:INFO:Initializing predict_model()
2025-04-09 14:40:45,179:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ADB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:45,180:INFO:Checking exceptions
2025-04-09 14:40:45,180:INFO:Preloading libraries
2025-04-09 14:40:45,180:INFO:Set up data.
2025-04-09 14:40:45,185:INFO:Set up index.
2025-04-09 14:40:45,966:INFO:Initializing predict_model()
2025-04-09 14:40:45,966:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BD610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:45,966:INFO:Checking exceptions
2025-04-09 14:40:45,966:INFO:Preloading libraries
2025-04-09 14:40:45,967:INFO:Set up data.
2025-04-09 14:40:45,971:INFO:Set up index.
2025-04-09 14:40:46,783:INFO:Initializing predict_model()
2025-04-09 14:40:46,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ACF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:46,783:INFO:Checking exceptions
2025-04-09 14:40:46,783:INFO:Preloading libraries
2025-04-09 14:40:46,784:INFO:Set up data.
2025-04-09 14:40:46,788:INFO:Set up index.
2025-04-09 14:40:47,609:INFO:Initializing predict_model()
2025-04-09 14:40:47,610:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:47,610:INFO:Checking exceptions
2025-04-09 14:40:47,610:INFO:Preloading libraries
2025-04-09 14:40:47,610:INFO:Set up data.
2025-04-09 14:40:47,616:INFO:Set up index.
2025-04-09 14:40:48,389:INFO:Initializing predict_model()
2025-04-09 14:40:48,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BD810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:48,390:INFO:Checking exceptions
2025-04-09 14:40:48,390:INFO:Preloading libraries
2025-04-09 14:40:48,391:INFO:Set up data.
2025-04-09 14:40:48,396:INFO:Set up index.
2025-04-09 14:40:49,185:INFO:Initializing predict_model()
2025-04-09 14:40:49,185:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BB050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:49,186:INFO:Checking exceptions
2025-04-09 14:40:49,186:INFO:Preloading libraries
2025-04-09 14:40:49,186:INFO:Set up data.
2025-04-09 14:40:49,191:INFO:Set up index.
2025-04-09 14:40:50,024:INFO:Initializing predict_model()
2025-04-09 14:40:50,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C6B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:50,024:INFO:Checking exceptions
2025-04-09 14:40:50,024:INFO:Preloading libraries
2025-04-09 14:40:50,025:INFO:Set up data.
2025-04-09 14:40:50,030:INFO:Set up index.
2025-04-09 14:40:50,917:INFO:Initializing predict_model()
2025-04-09 14:40:50,918:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:50,918:INFO:Checking exceptions
2025-04-09 14:40:50,918:INFO:Preloading libraries
2025-04-09 14:40:50,919:INFO:Set up data.
2025-04-09 14:40:50,926:INFO:Set up index.
2025-04-09 14:40:51,704:INFO:Initializing predict_model()
2025-04-09 14:40:51,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:51,705:INFO:Checking exceptions
2025-04-09 14:40:51,705:INFO:Preloading libraries
2025-04-09 14:40:51,706:INFO:Set up data.
2025-04-09 14:40:51,711:INFO:Set up index.
2025-04-09 14:40:52,648:INFO:Initializing predict_model()
2025-04-09 14:40:52,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297ACF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:52,648:INFO:Checking exceptions
2025-04-09 14:40:52,648:INFO:Preloading libraries
2025-04-09 14:40:52,649:INFO:Set up data.
2025-04-09 14:40:52,654:INFO:Set up index.
2025-04-09 14:40:53,530:INFO:Initializing predict_model()
2025-04-09 14:40:53,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D2350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:53,530:INFO:Checking exceptions
2025-04-09 14:40:53,530:INFO:Preloading libraries
2025-04-09 14:40:53,531:INFO:Set up data.
2025-04-09 14:40:53,536:INFO:Set up index.
2025-04-09 14:40:54,304:INFO:Initializing predict_model()
2025-04-09 14:40:54,304:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:54,304:INFO:Checking exceptions
2025-04-09 14:40:54,304:INFO:Preloading libraries
2025-04-09 14:40:54,305:INFO:Set up data.
2025-04-09 14:40:54,310:INFO:Set up index.
2025-04-09 14:40:55,178:INFO:Initializing predict_model()
2025-04-09 14:40:55,179:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CB410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:55,179:INFO:Checking exceptions
2025-04-09 14:40:55,179:INFO:Preloading libraries
2025-04-09 14:40:55,179:INFO:Set up data.
2025-04-09 14:40:55,184:INFO:Set up index.
2025-04-09 14:40:55,942:INFO:Initializing predict_model()
2025-04-09 14:40:55,942:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BD2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:55,943:INFO:Checking exceptions
2025-04-09 14:40:55,943:INFO:Preloading libraries
2025-04-09 14:40:55,943:INFO:Set up data.
2025-04-09 14:40:55,947:INFO:Set up index.
2025-04-09 14:40:56,732:INFO:Initializing predict_model()
2025-04-09 14:40:56,732:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AC3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:56,733:INFO:Checking exceptions
2025-04-09 14:40:56,733:INFO:Preloading libraries
2025-04-09 14:40:56,733:INFO:Set up data.
2025-04-09 14:40:56,738:INFO:Set up index.
2025-04-09 14:40:57,614:INFO:Initializing predict_model()
2025-04-09 14:40:57,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:57,614:INFO:Checking exceptions
2025-04-09 14:40:57,615:INFO:Preloading libraries
2025-04-09 14:40:57,615:INFO:Set up data.
2025-04-09 14:40:57,620:INFO:Set up index.
2025-04-09 14:40:58,404:INFO:Initializing predict_model()
2025-04-09 14:40:58,404:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AE1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:58,404:INFO:Checking exceptions
2025-04-09 14:40:58,404:INFO:Preloading libraries
2025-04-09 14:40:58,405:INFO:Set up data.
2025-04-09 14:40:58,411:INFO:Set up index.
2025-04-09 14:40:59,235:INFO:Initializing predict_model()
2025-04-09 14:40:59,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C3C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:40:59,236:INFO:Checking exceptions
2025-04-09 14:40:59,236:INFO:Preloading libraries
2025-04-09 14:40:59,236:INFO:Set up data.
2025-04-09 14:40:59,240:INFO:Set up index.
2025-04-09 14:41:00,085:INFO:Initializing predict_model()
2025-04-09 14:41:00,085:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C1E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:00,085:INFO:Checking exceptions
2025-04-09 14:41:00,086:INFO:Preloading libraries
2025-04-09 14:41:00,086:INFO:Set up data.
2025-04-09 14:41:00,091:INFO:Set up index.
2025-04-09 14:41:00,850:INFO:Initializing predict_model()
2025-04-09 14:41:00,850:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CB3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:00,850:INFO:Checking exceptions
2025-04-09 14:41:00,850:INFO:Preloading libraries
2025-04-09 14:41:00,851:INFO:Set up data.
2025-04-09 14:41:00,855:INFO:Set up index.
2025-04-09 14:41:01,615:INFO:Initializing predict_model()
2025-04-09 14:41:01,615:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BACD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:01,615:INFO:Checking exceptions
2025-04-09 14:41:01,615:INFO:Preloading libraries
2025-04-09 14:41:01,616:INFO:Set up data.
2025-04-09 14:41:01,621:INFO:Set up index.
2025-04-09 14:41:02,479:INFO:Initializing predict_model()
2025-04-09 14:41:02,479:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CB350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:02,480:INFO:Checking exceptions
2025-04-09 14:41:02,480:INFO:Preloading libraries
2025-04-09 14:41:02,480:INFO:Set up data.
2025-04-09 14:41:02,486:INFO:Set up index.
2025-04-09 14:41:03,248:INFO:Initializing predict_model()
2025-04-09 14:41:03,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:03,249:INFO:Checking exceptions
2025-04-09 14:41:03,249:INFO:Preloading libraries
2025-04-09 14:41:03,250:INFO:Set up data.
2025-04-09 14:41:03,254:INFO:Set up index.
2025-04-09 14:41:04,021:INFO:Initializing predict_model()
2025-04-09 14:41:04,021:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AD950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:04,021:INFO:Checking exceptions
2025-04-09 14:41:04,021:INFO:Preloading libraries
2025-04-09 14:41:04,022:INFO:Set up data.
2025-04-09 14:41:04,028:INFO:Set up index.
2025-04-09 14:41:04,917:INFO:Initializing predict_model()
2025-04-09 14:41:04,917:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C0A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:04,917:INFO:Checking exceptions
2025-04-09 14:41:04,917:INFO:Preloading libraries
2025-04-09 14:41:04,918:INFO:Set up data.
2025-04-09 14:41:04,923:INFO:Set up index.
2025-04-09 14:41:05,684:INFO:Initializing predict_model()
2025-04-09 14:41:05,684:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C8A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:05,684:INFO:Checking exceptions
2025-04-09 14:41:05,684:INFO:Preloading libraries
2025-04-09 14:41:05,685:INFO:Set up data.
2025-04-09 14:41:05,690:INFO:Set up index.
2025-04-09 14:41:06,482:INFO:Initializing predict_model()
2025-04-09 14:41:06,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C1590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:06,482:INFO:Checking exceptions
2025-04-09 14:41:06,482:INFO:Preloading libraries
2025-04-09 14:41:06,483:INFO:Set up data.
2025-04-09 14:41:06,489:INFO:Set up index.
2025-04-09 14:41:07,303:INFO:Initializing predict_model()
2025-04-09 14:41:07,303:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BBBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:07,303:INFO:Checking exceptions
2025-04-09 14:41:07,303:INFO:Preloading libraries
2025-04-09 14:41:07,304:INFO:Set up data.
2025-04-09 14:41:07,309:INFO:Set up index.
2025-04-09 14:41:08,067:INFO:Initializing predict_model()
2025-04-09 14:41:08,067:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:08,067:INFO:Checking exceptions
2025-04-09 14:41:08,067:INFO:Preloading libraries
2025-04-09 14:41:08,068:INFO:Set up data.
2025-04-09 14:41:08,072:INFO:Set up index.
2025-04-09 14:41:09,061:INFO:Initializing predict_model()
2025-04-09 14:41:09,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BE2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:09,061:INFO:Checking exceptions
2025-04-09 14:41:09,061:INFO:Preloading libraries
2025-04-09 14:41:09,062:INFO:Set up data.
2025-04-09 14:41:09,068:INFO:Set up index.
2025-04-09 14:41:09,894:INFO:Initializing predict_model()
2025-04-09 14:41:09,894:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BB690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:09,895:INFO:Checking exceptions
2025-04-09 14:41:09,895:INFO:Preloading libraries
2025-04-09 14:41:09,895:INFO:Set up data.
2025-04-09 14:41:09,901:INFO:Set up index.
2025-04-09 14:41:10,670:INFO:Initializing predict_model()
2025-04-09 14:41:10,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:10,671:INFO:Checking exceptions
2025-04-09 14:41:10,671:INFO:Preloading libraries
2025-04-09 14:41:10,671:INFO:Set up data.
2025-04-09 14:41:10,677:INFO:Set up index.
2025-04-09 14:41:11,494:INFO:Initializing predict_model()
2025-04-09 14:41:11,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CBE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:11,494:INFO:Checking exceptions
2025-04-09 14:41:11,495:INFO:Preloading libraries
2025-04-09 14:41:11,495:INFO:Set up data.
2025-04-09 14:41:11,501:INFO:Set up index.
2025-04-09 14:41:12,284:INFO:Initializing predict_model()
2025-04-09 14:41:12,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:12,285:INFO:Checking exceptions
2025-04-09 14:41:12,285:INFO:Preloading libraries
2025-04-09 14:41:12,285:INFO:Set up data.
2025-04-09 14:41:12,289:INFO:Set up index.
2025-04-09 14:41:13,079:INFO:Initializing predict_model()
2025-04-09 14:41:13,079:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C1910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:13,079:INFO:Checking exceptions
2025-04-09 14:41:13,079:INFO:Preloading libraries
2025-04-09 14:41:13,080:INFO:Set up data.
2025-04-09 14:41:13,085:INFO:Set up index.
2025-04-09 14:41:13,859:INFO:Initializing predict_model()
2025-04-09 14:41:13,859:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:13,859:INFO:Checking exceptions
2025-04-09 14:41:13,859:INFO:Preloading libraries
2025-04-09 14:41:13,860:INFO:Set up data.
2025-04-09 14:41:13,866:INFO:Set up index.
2025-04-09 14:41:14,655:INFO:Initializing predict_model()
2025-04-09 14:41:14,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D22D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:14,656:INFO:Checking exceptions
2025-04-09 14:41:14,656:INFO:Preloading libraries
2025-04-09 14:41:14,656:INFO:Set up data.
2025-04-09 14:41:14,662:INFO:Set up index.
2025-04-09 14:41:15,388:INFO:Initializing predict_model()
2025-04-09 14:41:15,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D1CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:15,389:INFO:Checking exceptions
2025-04-09 14:41:15,389:INFO:Preloading libraries
2025-04-09 14:41:15,389:INFO:Set up data.
2025-04-09 14:41:15,394:INFO:Set up index.
2025-04-09 14:41:16,193:INFO:Initializing predict_model()
2025-04-09 14:41:16,193:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D0710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:16,193:INFO:Checking exceptions
2025-04-09 14:41:16,193:INFO:Preloading libraries
2025-04-09 14:41:16,195:INFO:Set up data.
2025-04-09 14:41:16,203:INFO:Set up index.
2025-04-09 14:41:17,049:INFO:Initializing predict_model()
2025-04-09 14:41:17,049:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C9890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:17,049:INFO:Checking exceptions
2025-04-09 14:41:17,049:INFO:Preloading libraries
2025-04-09 14:41:17,049:INFO:Set up data.
2025-04-09 14:41:17,055:INFO:Set up index.
2025-04-09 14:41:17,859:INFO:Initializing predict_model()
2025-04-09 14:41:17,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C16D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:17,860:INFO:Checking exceptions
2025-04-09 14:41:17,860:INFO:Preloading libraries
2025-04-09 14:41:17,860:INFO:Set up data.
2025-04-09 14:41:17,865:INFO:Set up index.
2025-04-09 14:41:18,766:INFO:Initializing predict_model()
2025-04-09 14:41:18,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C9890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:18,767:INFO:Checking exceptions
2025-04-09 14:41:18,767:INFO:Preloading libraries
2025-04-09 14:41:18,768:INFO:Set up data.
2025-04-09 14:41:18,776:INFO:Set up index.
2025-04-09 14:41:19,662:INFO:Initializing predict_model()
2025-04-09 14:41:19,663:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D2AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:19,663:INFO:Checking exceptions
2025-04-09 14:41:19,663:INFO:Preloading libraries
2025-04-09 14:41:19,663:INFO:Set up data.
2025-04-09 14:41:19,669:INFO:Set up index.
2025-04-09 14:41:20,450:INFO:Initializing predict_model()
2025-04-09 14:41:20,450:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D33D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:20,451:INFO:Checking exceptions
2025-04-09 14:41:20,451:INFO:Preloading libraries
2025-04-09 14:41:20,451:INFO:Set up data.
2025-04-09 14:41:20,458:INFO:Set up index.
2025-04-09 14:41:21,296:INFO:Initializing predict_model()
2025-04-09 14:41:21,296:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CA4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:21,297:INFO:Checking exceptions
2025-04-09 14:41:21,297:INFO:Preloading libraries
2025-04-09 14:41:21,297:INFO:Set up data.
2025-04-09 14:41:21,303:INFO:Set up index.
2025-04-09 14:41:22,081:INFO:Initializing predict_model()
2025-04-09 14:41:22,082:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AEC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:22,082:INFO:Checking exceptions
2025-04-09 14:41:22,082:INFO:Preloading libraries
2025-04-09 14:41:22,082:INFO:Set up data.
2025-04-09 14:41:22,087:INFO:Set up index.
2025-04-09 14:41:22,906:INFO:Initializing predict_model()
2025-04-09 14:41:22,906:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CA350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:22,906:INFO:Checking exceptions
2025-04-09 14:41:22,907:INFO:Preloading libraries
2025-04-09 14:41:22,907:INFO:Set up data.
2025-04-09 14:41:22,912:INFO:Set up index.
2025-04-09 14:41:23,766:INFO:Initializing predict_model()
2025-04-09 14:41:23,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C7C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:23,766:INFO:Checking exceptions
2025-04-09 14:41:23,766:INFO:Preloading libraries
2025-04-09 14:41:23,767:INFO:Set up data.
2025-04-09 14:41:23,772:INFO:Set up index.
2025-04-09 14:41:24,582:INFO:Initializing predict_model()
2025-04-09 14:41:24,582:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C6A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:24,582:INFO:Checking exceptions
2025-04-09 14:41:24,582:INFO:Preloading libraries
2025-04-09 14:41:24,583:INFO:Set up data.
2025-04-09 14:41:24,590:INFO:Set up index.
2025-04-09 14:41:25,395:INFO:Initializing predict_model()
2025-04-09 14:41:25,395:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BC790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:25,395:INFO:Checking exceptions
2025-04-09 14:41:25,396:INFO:Preloading libraries
2025-04-09 14:41:25,396:INFO:Set up data.
2025-04-09 14:41:25,402:INFO:Set up index.
2025-04-09 14:41:26,278:INFO:Initializing predict_model()
2025-04-09 14:41:26,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AE510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:26,279:INFO:Checking exceptions
2025-04-09 14:41:26,279:INFO:Preloading libraries
2025-04-09 14:41:26,279:INFO:Set up data.
2025-04-09 14:41:26,285:INFO:Set up index.
2025-04-09 14:41:27,157:INFO:Initializing predict_model()
2025-04-09 14:41:27,158:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C0C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:27,158:INFO:Checking exceptions
2025-04-09 14:41:27,158:INFO:Preloading libraries
2025-04-09 14:41:27,158:INFO:Set up data.
2025-04-09 14:41:27,163:INFO:Set up index.
2025-04-09 14:41:28,001:INFO:Initializing predict_model()
2025-04-09 14:41:28,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C35D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:28,001:INFO:Checking exceptions
2025-04-09 14:41:28,001:INFO:Preloading libraries
2025-04-09 14:41:28,002:INFO:Set up data.
2025-04-09 14:41:28,009:INFO:Set up index.
2025-04-09 14:41:29,073:INFO:Initializing predict_model()
2025-04-09 14:41:29,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C7C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:29,073:INFO:Checking exceptions
2025-04-09 14:41:29,073:INFO:Preloading libraries
2025-04-09 14:41:29,074:INFO:Set up data.
2025-04-09 14:41:29,079:INFO:Set up index.
2025-04-09 14:41:30,008:INFO:Initializing predict_model()
2025-04-09 14:41:30,008:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CB250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:30,008:INFO:Checking exceptions
2025-04-09 14:41:30,009:INFO:Preloading libraries
2025-04-09 14:41:30,009:INFO:Set up data.
2025-04-09 14:41:30,014:INFO:Set up index.
2025-04-09 14:41:30,806:INFO:Initializing predict_model()
2025-04-09 14:41:30,806:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C0ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:30,806:INFO:Checking exceptions
2025-04-09 14:41:30,807:INFO:Preloading libraries
2025-04-09 14:41:30,807:INFO:Set up data.
2025-04-09 14:41:30,814:INFO:Set up index.
2025-04-09 14:41:31,612:INFO:Initializing predict_model()
2025-04-09 14:41:31,612:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B9590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:31,613:INFO:Checking exceptions
2025-04-09 14:41:31,613:INFO:Preloading libraries
2025-04-09 14:41:31,613:INFO:Set up data.
2025-04-09 14:41:31,617:INFO:Set up index.
2025-04-09 14:41:32,367:INFO:Initializing predict_model()
2025-04-09 14:41:32,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A2FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:32,367:INFO:Checking exceptions
2025-04-09 14:41:32,367:INFO:Preloading libraries
2025-04-09 14:41:32,367:INFO:Set up data.
2025-04-09 14:41:32,374:INFO:Set up index.
2025-04-09 14:41:33,223:INFO:Initializing predict_model()
2025-04-09 14:41:33,224:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BFE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:33,224:INFO:Checking exceptions
2025-04-09 14:41:33,224:INFO:Preloading libraries
2025-04-09 14:41:33,225:INFO:Set up data.
2025-04-09 14:41:33,233:INFO:Set up index.
2025-04-09 14:41:34,029:INFO:Initializing predict_model()
2025-04-09 14:41:34,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297CB8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:34,029:INFO:Checking exceptions
2025-04-09 14:41:34,029:INFO:Preloading libraries
2025-04-09 14:41:34,030:INFO:Set up data.
2025-04-09 14:41:34,035:INFO:Set up index.
2025-04-09 14:41:34,832:INFO:Initializing predict_model()
2025-04-09 14:41:34,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297DE790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:34,832:INFO:Checking exceptions
2025-04-09 14:41:34,833:INFO:Preloading libraries
2025-04-09 14:41:34,833:INFO:Set up data.
2025-04-09 14:41:34,839:INFO:Set up index.
2025-04-09 14:41:35,738:INFO:Initializing predict_model()
2025-04-09 14:41:35,738:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C7010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:35,738:INFO:Checking exceptions
2025-04-09 14:41:35,739:INFO:Preloading libraries
2025-04-09 14:41:35,739:INFO:Set up data.
2025-04-09 14:41:35,746:INFO:Set up index.
2025-04-09 14:41:36,637:INFO:Initializing predict_model()
2025-04-09 14:41:36,637:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C47D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:36,637:INFO:Checking exceptions
2025-04-09 14:41:36,637:INFO:Preloading libraries
2025-04-09 14:41:36,638:INFO:Set up data.
2025-04-09 14:41:36,644:INFO:Set up index.
2025-04-09 14:41:37,514:INFO:Initializing predict_model()
2025-04-09 14:41:37,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297DE850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F1E1EEDE0>)
2025-04-09 14:41:37,515:INFO:Checking exceptions
2025-04-09 14:41:37,515:INFO:Preloading libraries
2025-04-09 14:41:37,516:INFO:Set up data.
2025-04-09 14:41:37,521:INFO:Set up index.
2025-04-09 14:41:38,412:INFO:Initializing predict_model()
2025-04-09 14:41:38,412:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C4610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:38,413:INFO:Checking exceptions
2025-04-09 14:41:38,413:INFO:Preloading libraries
2025-04-09 14:41:38,413:INFO:Set up data.
2025-04-09 14:41:38,419:INFO:Set up index.
2025-04-09 14:41:39,373:INFO:Initializing predict_model()
2025-04-09 14:41:39,373:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C6990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:39,373:INFO:Checking exceptions
2025-04-09 14:41:39,373:INFO:Preloading libraries
2025-04-09 14:41:39,375:INFO:Set up data.
2025-04-09 14:41:39,381:INFO:Set up index.
2025-04-09 14:41:40,391:INFO:Initializing predict_model()
2025-04-09 14:41:40,392:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D1090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:40,392:INFO:Checking exceptions
2025-04-09 14:41:40,392:INFO:Preloading libraries
2025-04-09 14:41:40,393:INFO:Set up data.
2025-04-09 14:41:40,401:INFO:Set up index.
2025-04-09 14:41:41,426:INFO:Initializing predict_model()
2025-04-09 14:41:41,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B9DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:41,427:INFO:Checking exceptions
2025-04-09 14:41:41,427:INFO:Preloading libraries
2025-04-09 14:41:41,427:INFO:Set up data.
2025-04-09 14:41:41,434:INFO:Set up index.
2025-04-09 14:41:42,375:INFO:Initializing predict_model()
2025-04-09 14:41:42,376:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D13D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:42,376:INFO:Checking exceptions
2025-04-09 14:41:42,376:INFO:Preloading libraries
2025-04-09 14:41:42,377:INFO:Set up data.
2025-04-09 14:41:42,382:INFO:Set up index.
2025-04-09 14:41:43,440:INFO:Initializing predict_model()
2025-04-09 14:41:43,441:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C6E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:43,441:INFO:Checking exceptions
2025-04-09 14:41:43,441:INFO:Preloading libraries
2025-04-09 14:41:43,442:INFO:Set up data.
2025-04-09 14:41:43,449:INFO:Set up index.
2025-04-09 14:41:44,323:INFO:Initializing predict_model()
2025-04-09 14:41:44,323:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:44,323:INFO:Checking exceptions
2025-04-09 14:41:44,323:INFO:Preloading libraries
2025-04-09 14:41:44,324:INFO:Set up data.
2025-04-09 14:41:44,329:INFO:Set up index.
2025-04-09 14:41:45,156:INFO:Initializing predict_model()
2025-04-09 14:41:45,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C2D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:45,157:INFO:Checking exceptions
2025-04-09 14:41:45,157:INFO:Preloading libraries
2025-04-09 14:41:45,157:INFO:Set up data.
2025-04-09 14:41:45,165:INFO:Set up index.
2025-04-09 14:41:46,017:INFO:Initializing predict_model()
2025-04-09 14:41:46,017:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B9BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:46,017:INFO:Checking exceptions
2025-04-09 14:41:46,017:INFO:Preloading libraries
2025-04-09 14:41:46,018:INFO:Set up data.
2025-04-09 14:41:46,024:INFO:Set up index.
2025-04-09 14:41:46,950:INFO:Initializing predict_model()
2025-04-09 14:41:46,950:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A3FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:46,950:INFO:Checking exceptions
2025-04-09 14:41:46,950:INFO:Preloading libraries
2025-04-09 14:41:46,951:INFO:Set up data.
2025-04-09 14:41:46,958:INFO:Set up index.
2025-04-09 14:41:47,956:INFO:Initializing predict_model()
2025-04-09 14:41:47,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BF9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:47,957:INFO:Checking exceptions
2025-04-09 14:41:47,957:INFO:Preloading libraries
2025-04-09 14:41:47,958:INFO:Set up data.
2025-04-09 14:41:47,964:INFO:Set up index.
2025-04-09 14:41:48,870:INFO:Initializing predict_model()
2025-04-09 14:41:48,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C2210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:48,870:INFO:Checking exceptions
2025-04-09 14:41:48,870:INFO:Preloading libraries
2025-04-09 14:41:48,871:INFO:Set up data.
2025-04-09 14:41:48,877:INFO:Set up index.
2025-04-09 14:41:49,796:INFO:Initializing predict_model()
2025-04-09 14:41:49,797:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C0210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:49,797:INFO:Checking exceptions
2025-04-09 14:41:49,797:INFO:Preloading libraries
2025-04-09 14:41:49,797:INFO:Set up data.
2025-04-09 14:41:49,803:INFO:Set up index.
2025-04-09 14:41:50,874:INFO:Initializing predict_model()
2025-04-09 14:41:50,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B8C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:50,874:INFO:Checking exceptions
2025-04-09 14:41:50,875:INFO:Preloading libraries
2025-04-09 14:41:50,875:INFO:Set up data.
2025-04-09 14:41:50,881:INFO:Set up index.
2025-04-09 14:41:51,783:INFO:Initializing predict_model()
2025-04-09 14:41:51,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297B9590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:51,783:INFO:Checking exceptions
2025-04-09 14:41:51,783:INFO:Preloading libraries
2025-04-09 14:41:51,784:INFO:Set up data.
2025-04-09 14:41:51,789:INFO:Set up index.
2025-04-09 14:41:52,737:INFO:Initializing predict_model()
2025-04-09 14:41:52,737:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297DDA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:52,737:INFO:Checking exceptions
2025-04-09 14:41:52,737:INFO:Preloading libraries
2025-04-09 14:41:52,738:INFO:Set up data.
2025-04-09 14:41:52,745:INFO:Set up index.
2025-04-09 14:41:53,638:INFO:Initializing predict_model()
2025-04-09 14:41:53,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D4C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:53,638:INFO:Checking exceptions
2025-04-09 14:41:53,638:INFO:Preloading libraries
2025-04-09 14:41:53,639:INFO:Set up data.
2025-04-09 14:41:53,644:INFO:Set up index.
2025-04-09 14:41:54,619:INFO:Initializing predict_model()
2025-04-09 14:41:54,619:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297BAF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:54,620:INFO:Checking exceptions
2025-04-09 14:41:54,620:INFO:Preloading libraries
2025-04-09 14:41:54,621:INFO:Set up data.
2025-04-09 14:41:54,627:INFO:Set up index.
2025-04-09 14:41:55,646:INFO:Initializing predict_model()
2025-04-09 14:41:55,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297DE310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:55,646:INFO:Checking exceptions
2025-04-09 14:41:55,646:INFO:Preloading libraries
2025-04-09 14:41:55,647:INFO:Set up data.
2025-04-09 14:41:55,653:INFO:Set up index.
2025-04-09 14:41:56,556:INFO:Initializing predict_model()
2025-04-09 14:41:56,557:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297DF490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:56,557:INFO:Checking exceptions
2025-04-09 14:41:56,557:INFO:Preloading libraries
2025-04-09 14:41:56,557:INFO:Set up data.
2025-04-09 14:41:56,562:INFO:Set up index.
2025-04-09 14:41:57,392:INFO:Initializing predict_model()
2025-04-09 14:41:57,392:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297AF0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:57,393:INFO:Checking exceptions
2025-04-09 14:41:57,393:INFO:Preloading libraries
2025-04-09 14:41:57,393:INFO:Set up data.
2025-04-09 14:41:57,398:INFO:Set up index.
2025-04-09 14:41:58,344:INFO:Initializing predict_model()
2025-04-09 14:41:58,344:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297A0950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:58,344:INFO:Checking exceptions
2025-04-09 14:41:58,344:INFO:Preloading libraries
2025-04-09 14:41:58,344:INFO:Set up data.
2025-04-09 14:41:58,348:INFO:Set up index.
2025-04-09 14:41:59,247:INFO:Initializing predict_model()
2025-04-09 14:41:59,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297D1450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:41:59,247:INFO:Checking exceptions
2025-04-09 14:41:59,247:INFO:Preloading libraries
2025-04-09 14:41:59,248:INFO:Set up data.
2025-04-09 14:41:59,252:INFO:Set up index.
2025-04-09 14:42:00,123:INFO:Initializing predict_model()
2025-04-09 14:42:00,123:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297C1B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:42:00,123:INFO:Checking exceptions
2025-04-09 14:42:00,124:INFO:Preloading libraries
2025-04-09 14:42:00,125:INFO:Set up data.
2025-04-09 14:42:00,135:INFO:Set up index.
2025-04-09 14:42:01,289:INFO:Initializing predict_model()
2025-04-09 14:42:01,289:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F297DD5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F29749BC0>)
2025-04-09 14:42:01,289:INFO:Checking exceptions
2025-04-09 14:42:01,289:INFO:Preloading libraries
2025-04-09 14:42:01,290:INFO:Set up data.
2025-04-09 14:42:01,297:INFO:Set up index.
2025-04-09 14:42:18,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:42:18,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:42:18,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:42:18,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-09 14:42:23,011:INFO:Initializing load_model()
2025-04-09 14:42:23,011:INFO:load_model(model_name=.\model\final_calibrated_depth_model_outdoor_v2, platform=None, authentication=None, verbose=True)
2025-04-09 14:42:23,061:WARNING:C:\Users\User\miniconda3\envs\abu2\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.2', 'IPython': '9.1.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.4', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.0', 'pycaret': '3.3.1', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.21', 'machine': 'x86_64'}}
  warnings.warn(

2025-04-09 14:42:27,430:INFO:Initializing predict_model()
2025-04-09 14:42:27,430:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAFFE050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:27,431:INFO:Checking exceptions
2025-04-09 14:42:27,431:INFO:Preloading libraries
2025-04-09 14:42:27,431:INFO:Set up data.
2025-04-09 14:42:27,437:INFO:Set up index.
2025-04-09 14:42:28,322:INFO:Initializing predict_model()
2025-04-09 14:42:28,322:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAF627D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:28,322:INFO:Checking exceptions
2025-04-09 14:42:28,323:INFO:Preloading libraries
2025-04-09 14:42:28,323:INFO:Set up data.
2025-04-09 14:42:28,328:INFO:Set up index.
2025-04-09 14:42:29,119:INFO:Initializing predict_model()
2025-04-09 14:42:29,119:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C502A110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:29,119:INFO:Checking exceptions
2025-04-09 14:42:29,119:INFO:Preloading libraries
2025-04-09 14:42:29,120:INFO:Set up data.
2025-04-09 14:42:29,126:INFO:Set up index.
2025-04-09 14:42:29,920:INFO:Initializing predict_model()
2025-04-09 14:42:29,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BB1EDC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:29,921:INFO:Checking exceptions
2025-04-09 14:42:29,921:INFO:Preloading libraries
2025-04-09 14:42:29,922:INFO:Set up data.
2025-04-09 14:42:29,928:INFO:Set up index.
2025-04-09 14:42:30,669:INFO:Initializing predict_model()
2025-04-09 14:42:30,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5835250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:30,669:INFO:Checking exceptions
2025-04-09 14:42:30,669:INFO:Preloading libraries
2025-04-09 14:42:30,670:INFO:Set up data.
2025-04-09 14:42:30,675:INFO:Set up index.
2025-04-09 14:42:31,441:INFO:Initializing predict_model()
2025-04-09 14:42:31,442:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BB139750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:31,442:INFO:Checking exceptions
2025-04-09 14:42:31,442:INFO:Preloading libraries
2025-04-09 14:42:31,442:INFO:Set up data.
2025-04-09 14:42:31,448:INFO:Set up index.
2025-04-09 14:42:32,377:INFO:Initializing predict_model()
2025-04-09 14:42:32,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAFFE490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:32,378:INFO:Checking exceptions
2025-04-09 14:42:32,378:INFO:Preloading libraries
2025-04-09 14:42:32,378:INFO:Set up data.
2025-04-09 14:42:32,383:INFO:Set up index.
2025-04-09 14:42:33,290:INFO:Initializing predict_model()
2025-04-09 14:42:33,290:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5441A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:33,290:INFO:Checking exceptions
2025-04-09 14:42:33,291:INFO:Preloading libraries
2025-04-09 14:42:33,291:INFO:Set up data.
2025-04-09 14:42:33,296:INFO:Set up index.
2025-04-09 14:42:34,103:INFO:Initializing predict_model()
2025-04-09 14:42:34,103:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAFFCC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:34,104:INFO:Checking exceptions
2025-04-09 14:42:34,104:INFO:Preloading libraries
2025-04-09 14:42:34,104:INFO:Set up data.
2025-04-09 14:42:34,109:INFO:Set up index.
2025-04-09 14:42:34,983:INFO:Initializing predict_model()
2025-04-09 14:42:34,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C584E0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:34,984:INFO:Checking exceptions
2025-04-09 14:42:34,984:INFO:Preloading libraries
2025-04-09 14:42:34,985:INFO:Set up data.
2025-04-09 14:42:34,992:INFO:Set up index.
2025-04-09 14:42:35,763:INFO:Initializing predict_model()
2025-04-09 14:42:35,763:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAEEF990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:35,763:INFO:Checking exceptions
2025-04-09 14:42:35,763:INFO:Preloading libraries
2025-04-09 14:42:35,764:INFO:Set up data.
2025-04-09 14:42:35,767:INFO:Set up index.
2025-04-09 14:42:36,537:INFO:Initializing predict_model()
2025-04-09 14:42:36,537:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C542D910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:36,537:INFO:Checking exceptions
2025-04-09 14:42:36,538:INFO:Preloading libraries
2025-04-09 14:42:36,538:INFO:Set up data.
2025-04-09 14:42:36,544:INFO:Set up index.
2025-04-09 14:42:37,433:INFO:Initializing predict_model()
2025-04-09 14:42:37,433:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5656750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:42:37,434:INFO:Checking exceptions
2025-04-09 14:42:37,434:INFO:Preloading libraries
2025-04-09 14:42:37,434:INFO:Set up data.
2025-04-09 14:42:37,440:INFO:Set up index.
2025-04-09 14:42:38,288:INFO:Initializing predict_model()
2025-04-09 14:42:38,289:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C500CB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:42:38,289:INFO:Checking exceptions
2025-04-09 14:42:38,289:INFO:Preloading libraries
2025-04-09 14:42:38,289:INFO:Set up data.
2025-04-09 14:42:38,293:INFO:Set up index.
2025-04-09 14:42:39,064:INFO:Initializing predict_model()
2025-04-09 14:42:39,065:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:39,065:INFO:Checking exceptions
2025-04-09 14:42:39,065:INFO:Preloading libraries
2025-04-09 14:42:39,065:INFO:Set up data.
2025-04-09 14:42:39,071:INFO:Set up index.
2025-04-09 14:42:39,955:INFO:Initializing predict_model()
2025-04-09 14:42:39,955:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5041FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:39,955:INFO:Checking exceptions
2025-04-09 14:42:39,956:INFO:Preloading libraries
2025-04-09 14:42:39,956:INFO:Set up data.
2025-04-09 14:42:39,960:INFO:Set up index.
2025-04-09 14:42:40,714:INFO:Initializing predict_model()
2025-04-09 14:42:40,715:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5835250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:40,715:INFO:Checking exceptions
2025-04-09 14:42:40,715:INFO:Preloading libraries
2025-04-09 14:42:40,716:INFO:Set up data.
2025-04-09 14:42:40,720:INFO:Set up index.
2025-04-09 14:42:41,469:INFO:Initializing predict_model()
2025-04-09 14:42:41,469:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C56571D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:41,469:INFO:Checking exceptions
2025-04-09 14:42:41,469:INFO:Preloading libraries
2025-04-09 14:42:41,470:INFO:Set up data.
2025-04-09 14:42:41,474:INFO:Set up index.
2025-04-09 14:42:42,331:INFO:Initializing predict_model()
2025-04-09 14:42:42,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:42,332:INFO:Checking exceptions
2025-04-09 14:42:42,332:INFO:Preloading libraries
2025-04-09 14:42:42,332:INFO:Set up data.
2025-04-09 14:42:42,337:INFO:Set up index.
2025-04-09 14:42:43,202:INFO:Initializing predict_model()
2025-04-09 14:42:43,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58604D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:43,203:INFO:Checking exceptions
2025-04-09 14:42:43,203:INFO:Preloading libraries
2025-04-09 14:42:43,203:INFO:Set up data.
2025-04-09 14:42:43,207:INFO:Set up index.
2025-04-09 14:42:43,941:INFO:Initializing predict_model()
2025-04-09 14:42:43,941:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C584EED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:43,941:INFO:Checking exceptions
2025-04-09 14:42:43,941:INFO:Preloading libraries
2025-04-09 14:42:43,942:INFO:Set up data.
2025-04-09 14:42:43,947:INFO:Set up index.
2025-04-09 14:42:44,809:INFO:Initializing predict_model()
2025-04-09 14:42:44,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:44,809:INFO:Checking exceptions
2025-04-09 14:42:44,809:INFO:Preloading libraries
2025-04-09 14:42:44,810:INFO:Set up data.
2025-04-09 14:42:44,817:INFO:Set up index.
2025-04-09 14:42:45,673:INFO:Initializing predict_model()
2025-04-09 14:42:45,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587B3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:45,673:INFO:Checking exceptions
2025-04-09 14:42:45,673:INFO:Preloading libraries
2025-04-09 14:42:45,674:INFO:Set up data.
2025-04-09 14:42:45,685:INFO:Set up index.
2025-04-09 14:42:46,519:INFO:Initializing predict_model()
2025-04-09 14:42:46,519:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C584F550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:46,519:INFO:Checking exceptions
2025-04-09 14:42:46,520:INFO:Preloading libraries
2025-04-09 14:42:46,520:INFO:Set up data.
2025-04-09 14:42:46,525:INFO:Set up index.
2025-04-09 14:42:47,493:INFO:Initializing predict_model()
2025-04-09 14:42:47,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586DFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:47,493:INFO:Checking exceptions
2025-04-09 14:42:47,493:INFO:Preloading libraries
2025-04-09 14:42:47,494:INFO:Set up data.
2025-04-09 14:42:47,499:INFO:Set up index.
2025-04-09 14:42:48,463:INFO:Initializing predict_model()
2025-04-09 14:42:48,463:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587A090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:48,463:INFO:Checking exceptions
2025-04-09 14:42:48,464:INFO:Preloading libraries
2025-04-09 14:42:48,464:INFO:Set up data.
2025-04-09 14:42:48,469:INFO:Set up index.
2025-04-09 14:42:49,424:INFO:Initializing predict_model()
2025-04-09 14:42:49,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:49,424:INFO:Checking exceptions
2025-04-09 14:42:49,424:INFO:Preloading libraries
2025-04-09 14:42:49,425:INFO:Set up data.
2025-04-09 14:42:49,432:INFO:Set up index.
2025-04-09 14:42:50,298:INFO:Initializing predict_model()
2025-04-09 14:42:50,298:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5878F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:50,298:INFO:Checking exceptions
2025-04-09 14:42:50,298:INFO:Preloading libraries
2025-04-09 14:42:50,299:INFO:Set up data.
2025-04-09 14:42:50,303:INFO:Set up index.
2025-04-09 14:42:51,245:INFO:Initializing predict_model()
2025-04-09 14:42:51,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587A1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:51,246:INFO:Checking exceptions
2025-04-09 14:42:51,246:INFO:Preloading libraries
2025-04-09 14:42:51,247:INFO:Set up data.
2025-04-09 14:42:51,252:INFO:Set up index.
2025-04-09 14:42:52,222:INFO:Initializing predict_model()
2025-04-09 14:42:52,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586E8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:52,223:INFO:Checking exceptions
2025-04-09 14:42:52,223:INFO:Preloading libraries
2025-04-09 14:42:52,223:INFO:Set up data.
2025-04-09 14:42:52,229:INFO:Set up index.
2025-04-09 14:42:53,247:INFO:Initializing predict_model()
2025-04-09 14:42:53,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586DF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:53,248:INFO:Checking exceptions
2025-04-09 14:42:53,248:INFO:Preloading libraries
2025-04-09 14:42:53,248:INFO:Set up data.
2025-04-09 14:42:53,254:INFO:Set up index.
2025-04-09 14:42:54,236:INFO:Initializing predict_model()
2025-04-09 14:42:54,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586CF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:54,236:INFO:Checking exceptions
2025-04-09 14:42:54,236:INFO:Preloading libraries
2025-04-09 14:42:54,237:INFO:Set up data.
2025-04-09 14:42:54,245:INFO:Set up index.
2025-04-09 14:42:55,159:INFO:Initializing predict_model()
2025-04-09 14:42:55,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586D450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:55,159:INFO:Checking exceptions
2025-04-09 14:42:55,159:INFO:Preloading libraries
2025-04-09 14:42:55,160:INFO:Set up data.
2025-04-09 14:42:55,166:INFO:Set up index.
2025-04-09 14:42:55,920:INFO:Initializing predict_model()
2025-04-09 14:42:55,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587E350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:55,921:INFO:Checking exceptions
2025-04-09 14:42:55,921:INFO:Preloading libraries
2025-04-09 14:42:55,921:INFO:Set up data.
2025-04-09 14:42:55,926:INFO:Set up index.
2025-04-09 14:42:56,757:INFO:Initializing predict_model()
2025-04-09 14:42:56,757:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:42:56,757:INFO:Checking exceptions
2025-04-09 14:42:56,758:INFO:Preloading libraries
2025-04-09 14:42:56,758:INFO:Set up data.
2025-04-09 14:42:56,766:INFO:Set up index.
2025-04-09 14:42:57,616:INFO:Initializing predict_model()
2025-04-09 14:42:57,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:42:57,616:INFO:Checking exceptions
2025-04-09 14:42:57,616:INFO:Preloading libraries
2025-04-09 14:42:57,617:INFO:Set up data.
2025-04-09 14:42:57,621:INFO:Set up index.
2025-04-09 14:42:58,382:INFO:Initializing predict_model()
2025-04-09 14:42:58,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C4E28510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:42:58,382:INFO:Checking exceptions
2025-04-09 14:42:58,382:INFO:Preloading libraries
2025-04-09 14:42:58,383:INFO:Set up data.
2025-04-09 14:42:58,387:INFO:Set up index.
2025-04-09 14:42:59,234:INFO:Initializing predict_model()
2025-04-09 14:42:59,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587DB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:42:59,234:INFO:Checking exceptions
2025-04-09 14:42:59,234:INFO:Preloading libraries
2025-04-09 14:42:59,235:INFO:Set up data.
2025-04-09 14:42:59,241:INFO:Set up index.
2025-04-09 14:43:00,027:INFO:Initializing predict_model()
2025-04-09 14:43:00,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:00,027:INFO:Checking exceptions
2025-04-09 14:43:00,028:INFO:Preloading libraries
2025-04-09 14:43:00,029:INFO:Set up data.
2025-04-09 14:43:00,035:INFO:Set up index.
2025-04-09 14:43:00,891:INFO:Initializing predict_model()
2025-04-09 14:43:00,892:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:00,892:INFO:Checking exceptions
2025-04-09 14:43:00,892:INFO:Preloading libraries
2025-04-09 14:43:00,892:INFO:Set up data.
2025-04-09 14:43:00,898:INFO:Set up index.
2025-04-09 14:43:01,753:INFO:Initializing predict_model()
2025-04-09 14:43:01,753:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:01,754:INFO:Checking exceptions
2025-04-09 14:43:01,754:INFO:Preloading libraries
2025-04-09 14:43:01,754:INFO:Set up data.
2025-04-09 14:43:01,760:INFO:Set up index.
2025-04-09 14:43:02,584:INFO:Initializing predict_model()
2025-04-09 14:43:02,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:02,584:INFO:Checking exceptions
2025-04-09 14:43:02,584:INFO:Preloading libraries
2025-04-09 14:43:02,585:INFO:Set up data.
2025-04-09 14:43:02,590:INFO:Set up index.
2025-04-09 14:43:03,386:INFO:Initializing predict_model()
2025-04-09 14:43:03,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:03,387:INFO:Checking exceptions
2025-04-09 14:43:03,387:INFO:Preloading libraries
2025-04-09 14:43:03,387:INFO:Set up data.
2025-04-09 14:43:03,391:INFO:Set up index.
2025-04-09 14:43:04,277:INFO:Initializing predict_model()
2025-04-09 14:43:04,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5882E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:04,277:INFO:Checking exceptions
2025-04-09 14:43:04,277:INFO:Preloading libraries
2025-04-09 14:43:04,278:INFO:Set up data.
2025-04-09 14:43:04,283:INFO:Set up index.
2025-04-09 14:43:05,036:INFO:Initializing predict_model()
2025-04-09 14:43:05,036:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587E890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:05,036:INFO:Checking exceptions
2025-04-09 14:43:05,037:INFO:Preloading libraries
2025-04-09 14:43:05,037:INFO:Set up data.
2025-04-09 14:43:05,042:INFO:Set up index.
2025-04-09 14:43:05,831:INFO:Initializing predict_model()
2025-04-09 14:43:05,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587B310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:05,832:INFO:Checking exceptions
2025-04-09 14:43:05,832:INFO:Preloading libraries
2025-04-09 14:43:05,832:INFO:Set up data.
2025-04-09 14:43:05,837:INFO:Set up index.
2025-04-09 14:43:06,681:INFO:Initializing predict_model()
2025-04-09 14:43:06,681:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587AB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:06,681:INFO:Checking exceptions
2025-04-09 14:43:06,681:INFO:Preloading libraries
2025-04-09 14:43:06,682:INFO:Set up data.
2025-04-09 14:43:06,687:INFO:Set up index.
2025-04-09 14:43:07,519:INFO:Initializing predict_model()
2025-04-09 14:43:07,519:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:07,520:INFO:Checking exceptions
2025-04-09 14:43:07,520:INFO:Preloading libraries
2025-04-09 14:43:07,520:INFO:Set up data.
2025-04-09 14:43:07,524:INFO:Set up index.
2025-04-09 14:43:08,280:INFO:Initializing predict_model()
2025-04-09 14:43:08,280:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAF09350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:08,281:INFO:Checking exceptions
2025-04-09 14:43:08,281:INFO:Preloading libraries
2025-04-09 14:43:08,281:INFO:Set up data.
2025-04-09 14:43:08,286:INFO:Set up index.
2025-04-09 14:43:09,244:INFO:Initializing predict_model()
2025-04-09 14:43:09,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5882A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:09,244:INFO:Checking exceptions
2025-04-09 14:43:09,244:INFO:Preloading libraries
2025-04-09 14:43:09,245:INFO:Set up data.
2025-04-09 14:43:09,251:INFO:Set up index.
2025-04-09 14:43:10,110:INFO:Initializing predict_model()
2025-04-09 14:43:10,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5860750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:10,110:INFO:Checking exceptions
2025-04-09 14:43:10,110:INFO:Preloading libraries
2025-04-09 14:43:10,111:INFO:Set up data.
2025-04-09 14:43:10,117:INFO:Set up index.
2025-04-09 14:43:10,944:INFO:Initializing predict_model()
2025-04-09 14:43:10,944:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5881C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:10,944:INFO:Checking exceptions
2025-04-09 14:43:10,945:INFO:Preloading libraries
2025-04-09 14:43:10,945:INFO:Set up data.
2025-04-09 14:43:10,950:INFO:Set up index.
2025-04-09 14:43:11,860:INFO:Initializing predict_model()
2025-04-09 14:43:11,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C500CB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:11,860:INFO:Checking exceptions
2025-04-09 14:43:11,860:INFO:Preloading libraries
2025-04-09 14:43:11,861:INFO:Set up data.
2025-04-09 14:43:11,866:INFO:Set up index.
2025-04-09 14:43:12,710:INFO:Initializing predict_model()
2025-04-09 14:43:12,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5407F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:12,711:INFO:Checking exceptions
2025-04-09 14:43:12,711:INFO:Preloading libraries
2025-04-09 14:43:12,711:INFO:Set up data.
2025-04-09 14:43:12,717:INFO:Set up index.
2025-04-09 14:43:13,535:INFO:Initializing predict_model()
2025-04-09 14:43:13,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:13,536:INFO:Checking exceptions
2025-04-09 14:43:13,536:INFO:Preloading libraries
2025-04-09 14:43:13,536:INFO:Set up data.
2025-04-09 14:43:13,542:INFO:Set up index.
2025-04-09 14:43:14,431:INFO:Initializing predict_model()
2025-04-09 14:43:14,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586CE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:14,432:INFO:Checking exceptions
2025-04-09 14:43:14,432:INFO:Preloading libraries
2025-04-09 14:43:14,432:INFO:Set up data.
2025-04-09 14:43:14,439:INFO:Set up index.
2025-04-09 14:43:15,237:INFO:Initializing predict_model()
2025-04-09 14:43:15,237:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5667C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:15,237:INFO:Checking exceptions
2025-04-09 14:43:15,237:INFO:Preloading libraries
2025-04-09 14:43:15,238:INFO:Set up data.
2025-04-09 14:43:15,244:INFO:Set up index.
2025-04-09 14:43:16,103:INFO:Initializing predict_model()
2025-04-09 14:43:16,104:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:16,104:INFO:Checking exceptions
2025-04-09 14:43:16,104:INFO:Preloading libraries
2025-04-09 14:43:16,105:INFO:Set up data.
2025-04-09 14:43:16,113:INFO:Set up index.
2025-04-09 14:43:17,061:INFO:Initializing predict_model()
2025-04-09 14:43:17,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58631D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:17,062:INFO:Checking exceptions
2025-04-09 14:43:17,062:INFO:Preloading libraries
2025-04-09 14:43:17,062:INFO:Set up data.
2025-04-09 14:43:17,069:INFO:Set up index.
2025-04-09 14:43:17,911:INFO:Initializing predict_model()
2025-04-09 14:43:17,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:17,912:INFO:Checking exceptions
2025-04-09 14:43:17,912:INFO:Preloading libraries
2025-04-09 14:43:17,912:INFO:Set up data.
2025-04-09 14:43:17,916:INFO:Set up index.
2025-04-09 14:43:18,798:INFO:Initializing predict_model()
2025-04-09 14:43:18,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586D190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:18,800:INFO:Checking exceptions
2025-04-09 14:43:18,800:INFO:Preloading libraries
2025-04-09 14:43:18,800:INFO:Set up data.
2025-04-09 14:43:18,808:INFO:Set up index.
2025-04-09 14:43:19,701:INFO:Initializing predict_model()
2025-04-09 14:43:19,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:19,701:INFO:Checking exceptions
2025-04-09 14:43:19,701:INFO:Preloading libraries
2025-04-09 14:43:19,702:INFO:Set up data.
2025-04-09 14:43:19,707:INFO:Set up index.
2025-04-09 14:43:20,554:INFO:Initializing predict_model()
2025-04-09 14:43:20,555:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:20,555:INFO:Checking exceptions
2025-04-09 14:43:20,555:INFO:Preloading libraries
2025-04-09 14:43:20,555:INFO:Set up data.
2025-04-09 14:43:20,561:INFO:Set up index.
2025-04-09 14:43:21,399:INFO:Initializing predict_model()
2025-04-09 14:43:21,399:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587B590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:21,400:INFO:Checking exceptions
2025-04-09 14:43:21,400:INFO:Preloading libraries
2025-04-09 14:43:21,400:INFO:Set up data.
2025-04-09 14:43:21,405:INFO:Set up index.
2025-04-09 14:43:22,189:INFO:Initializing predict_model()
2025-04-09 14:43:22,190:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586C310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:22,190:INFO:Checking exceptions
2025-04-09 14:43:22,190:INFO:Preloading libraries
2025-04-09 14:43:22,190:INFO:Set up data.
2025-04-09 14:43:22,195:INFO:Set up index.
2025-04-09 14:43:23,031:INFO:Initializing predict_model()
2025-04-09 14:43:23,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586F910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:23,031:INFO:Checking exceptions
2025-04-09 14:43:23,031:INFO:Preloading libraries
2025-04-09 14:43:23,032:INFO:Set up data.
2025-04-09 14:43:23,036:INFO:Set up index.
2025-04-09 14:43:23,904:INFO:Initializing predict_model()
2025-04-09 14:43:23,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:23,904:INFO:Checking exceptions
2025-04-09 14:43:23,904:INFO:Preloading libraries
2025-04-09 14:43:23,904:INFO:Set up data.
2025-04-09 14:43:23,909:INFO:Set up index.
2025-04-09 14:43:24,740:INFO:Initializing predict_model()
2025-04-09 14:43:24,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:24,741:INFO:Checking exceptions
2025-04-09 14:43:24,741:INFO:Preloading libraries
2025-04-09 14:43:24,741:INFO:Set up data.
2025-04-09 14:43:24,746:INFO:Set up index.
2025-04-09 14:43:25,541:INFO:Initializing predict_model()
2025-04-09 14:43:25,541:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587DE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:25,541:INFO:Checking exceptions
2025-04-09 14:43:25,542:INFO:Preloading libraries
2025-04-09 14:43:25,542:INFO:Set up data.
2025-04-09 14:43:25,548:INFO:Set up index.
2025-04-09 14:43:26,446:INFO:Initializing predict_model()
2025-04-09 14:43:26,446:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAEE8350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:26,446:INFO:Checking exceptions
2025-04-09 14:43:26,447:INFO:Preloading libraries
2025-04-09 14:43:26,447:INFO:Set up data.
2025-04-09 14:43:26,454:INFO:Set up index.
2025-04-09 14:43:27,264:INFO:Initializing predict_model()
2025-04-09 14:43:27,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:27,265:INFO:Checking exceptions
2025-04-09 14:43:27,265:INFO:Preloading libraries
2025-04-09 14:43:27,265:INFO:Set up data.
2025-04-09 14:43:27,271:INFO:Set up index.
2025-04-09 14:43:28,061:INFO:Initializing predict_model()
2025-04-09 14:43:28,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:28,061:INFO:Checking exceptions
2025-04-09 14:43:28,061:INFO:Preloading libraries
2025-04-09 14:43:28,062:INFO:Set up data.
2025-04-09 14:43:28,068:INFO:Set up index.
2025-04-09 14:43:28,936:INFO:Initializing predict_model()
2025-04-09 14:43:28,936:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:28,936:INFO:Checking exceptions
2025-04-09 14:43:28,936:INFO:Preloading libraries
2025-04-09 14:43:28,937:INFO:Set up data.
2025-04-09 14:43:28,941:INFO:Set up index.
2025-04-09 14:43:29,721:INFO:Initializing predict_model()
2025-04-09 14:43:29,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586F7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:29,721:INFO:Checking exceptions
2025-04-09 14:43:29,722:INFO:Preloading libraries
2025-04-09 14:43:29,722:INFO:Set up data.
2025-04-09 14:43:29,726:INFO:Set up index.
2025-04-09 14:43:30,537:INFO:Initializing predict_model()
2025-04-09 14:43:30,537:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5881710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:30,537:INFO:Checking exceptions
2025-04-09 14:43:30,537:INFO:Preloading libraries
2025-04-09 14:43:30,538:INFO:Set up data.
2025-04-09 14:43:30,544:INFO:Set up index.
2025-04-09 14:43:31,409:INFO:Initializing predict_model()
2025-04-09 14:43:31,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586F510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:31,410:INFO:Checking exceptions
2025-04-09 14:43:31,410:INFO:Preloading libraries
2025-04-09 14:43:31,411:INFO:Set up data.
2025-04-09 14:43:31,416:INFO:Set up index.
2025-04-09 14:43:32,197:INFO:Initializing predict_model()
2025-04-09 14:43:32,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:32,198:INFO:Checking exceptions
2025-04-09 14:43:32,198:INFO:Preloading libraries
2025-04-09 14:43:32,198:INFO:Set up data.
2025-04-09 14:43:32,203:INFO:Set up index.
2025-04-09 14:43:33,124:INFO:Initializing predict_model()
2025-04-09 14:43:33,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5878910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:33,125:INFO:Checking exceptions
2025-04-09 14:43:33,125:INFO:Preloading libraries
2025-04-09 14:43:33,125:INFO:Set up data.
2025-04-09 14:43:33,130:INFO:Set up index.
2025-04-09 14:43:33,981:INFO:Initializing predict_model()
2025-04-09 14:43:33,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:33,982:INFO:Checking exceptions
2025-04-09 14:43:33,982:INFO:Preloading libraries
2025-04-09 14:43:33,982:INFO:Set up data.
2025-04-09 14:43:33,989:INFO:Set up index.
2025-04-09 14:43:34,759:INFO:Initializing predict_model()
2025-04-09 14:43:34,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:34,760:INFO:Checking exceptions
2025-04-09 14:43:34,760:INFO:Preloading libraries
2025-04-09 14:43:34,760:INFO:Set up data.
2025-04-09 14:43:34,766:INFO:Set up index.
2025-04-09 14:43:35,525:INFO:Initializing predict_model()
2025-04-09 14:43:35,526:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:35,526:INFO:Checking exceptions
2025-04-09 14:43:35,526:INFO:Preloading libraries
2025-04-09 14:43:35,527:INFO:Set up data.
2025-04-09 14:43:35,533:INFO:Set up index.
2025-04-09 14:43:36,390:INFO:Initializing predict_model()
2025-04-09 14:43:36,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:36,390:INFO:Checking exceptions
2025-04-09 14:43:36,391:INFO:Preloading libraries
2025-04-09 14:43:36,391:INFO:Set up data.
2025-04-09 14:43:36,397:INFO:Set up index.
2025-04-09 14:43:37,172:INFO:Initializing predict_model()
2025-04-09 14:43:37,172:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586D390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:37,172:INFO:Checking exceptions
2025-04-09 14:43:37,173:INFO:Preloading libraries
2025-04-09 14:43:37,174:INFO:Set up data.
2025-04-09 14:43:37,179:INFO:Set up index.
2025-04-09 14:43:37,936:INFO:Initializing predict_model()
2025-04-09 14:43:37,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:37,937:INFO:Checking exceptions
2025-04-09 14:43:37,937:INFO:Preloading libraries
2025-04-09 14:43:37,938:INFO:Set up data.
2025-04-09 14:43:37,945:INFO:Set up index.
2025-04-09 14:43:38,778:INFO:Initializing predict_model()
2025-04-09 14:43:38,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587CF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:38,779:INFO:Checking exceptions
2025-04-09 14:43:38,779:INFO:Preloading libraries
2025-04-09 14:43:38,779:INFO:Set up data.
2025-04-09 14:43:38,784:INFO:Set up index.
2025-04-09 14:43:39,526:INFO:Initializing predict_model()
2025-04-09 14:43:39,527:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:39,527:INFO:Checking exceptions
2025-04-09 14:43:39,527:INFO:Preloading libraries
2025-04-09 14:43:39,527:INFO:Set up data.
2025-04-09 14:43:39,532:INFO:Set up index.
2025-04-09 14:43:40,366:INFO:Initializing predict_model()
2025-04-09 14:43:40,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:40,367:INFO:Checking exceptions
2025-04-09 14:43:40,367:INFO:Preloading libraries
2025-04-09 14:43:40,368:INFO:Set up data.
2025-04-09 14:43:40,374:INFO:Set up index.
2025-04-09 14:43:41,280:INFO:Initializing predict_model()
2025-04-09 14:43:41,280:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:41,280:INFO:Checking exceptions
2025-04-09 14:43:41,281:INFO:Preloading libraries
2025-04-09 14:43:41,281:INFO:Set up data.
2025-04-09 14:43:41,285:INFO:Set up index.
2025-04-09 14:43:42,073:INFO:Initializing predict_model()
2025-04-09 14:43:42,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:42,073:INFO:Checking exceptions
2025-04-09 14:43:42,073:INFO:Preloading libraries
2025-04-09 14:43:42,074:INFO:Set up data.
2025-04-09 14:43:42,081:INFO:Set up index.
2025-04-09 14:43:43,005:INFO:Initializing predict_model()
2025-04-09 14:43:43,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5879ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:43,005:INFO:Checking exceptions
2025-04-09 14:43:43,005:INFO:Preloading libraries
2025-04-09 14:43:43,006:INFO:Set up data.
2025-04-09 14:43:43,013:INFO:Set up index.
2025-04-09 14:43:43,788:INFO:Initializing predict_model()
2025-04-09 14:43:43,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:43,788:INFO:Checking exceptions
2025-04-09 14:43:43,788:INFO:Preloading libraries
2025-04-09 14:43:43,789:INFO:Set up data.
2025-04-09 14:43:43,793:INFO:Set up index.
2025-04-09 14:43:44,573:INFO:Initializing predict_model()
2025-04-09 14:43:44,573:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:44,574:INFO:Checking exceptions
2025-04-09 14:43:44,574:INFO:Preloading libraries
2025-04-09 14:43:44,575:INFO:Set up data.
2025-04-09 14:43:44,580:INFO:Set up index.
2025-04-09 14:43:45,444:INFO:Initializing predict_model()
2025-04-09 14:43:45,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:45,445:INFO:Checking exceptions
2025-04-09 14:43:45,445:INFO:Preloading libraries
2025-04-09 14:43:45,445:INFO:Set up data.
2025-04-09 14:43:45,453:INFO:Set up index.
2025-04-09 14:43:46,233:INFO:Initializing predict_model()
2025-04-09 14:43:46,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:46,233:INFO:Checking exceptions
2025-04-09 14:43:46,233:INFO:Preloading libraries
2025-04-09 14:43:46,234:INFO:Set up data.
2025-04-09 14:43:46,239:INFO:Set up index.
2025-04-09 14:43:47,077:INFO:Initializing predict_model()
2025-04-09 14:43:47,077:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5883A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:47,078:INFO:Checking exceptions
2025-04-09 14:43:47,078:INFO:Preloading libraries
2025-04-09 14:43:47,079:INFO:Set up data.
2025-04-09 14:43:47,085:INFO:Set up index.
2025-04-09 14:43:47,920:INFO:Initializing predict_model()
2025-04-09 14:43:47,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:47,920:INFO:Checking exceptions
2025-04-09 14:43:47,920:INFO:Preloading libraries
2025-04-09 14:43:47,921:INFO:Set up data.
2025-04-09 14:43:47,925:INFO:Set up index.
2025-04-09 14:43:48,756:INFO:Initializing predict_model()
2025-04-09 14:43:48,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58934D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:48,756:INFO:Checking exceptions
2025-04-09 14:43:48,756:INFO:Preloading libraries
2025-04-09 14:43:48,757:INFO:Set up data.
2025-04-09 14:43:48,763:INFO:Set up index.
2025-04-09 14:43:49,556:INFO:Initializing predict_model()
2025-04-09 14:43:49,557:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5666F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:49,557:INFO:Checking exceptions
2025-04-09 14:43:49,557:INFO:Preloading libraries
2025-04-09 14:43:49,558:INFO:Set up data.
2025-04-09 14:43:49,563:INFO:Set up index.
2025-04-09 14:43:50,408:INFO:Initializing predict_model()
2025-04-09 14:43:50,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:50,408:INFO:Checking exceptions
2025-04-09 14:43:50,408:INFO:Preloading libraries
2025-04-09 14:43:50,409:INFO:Set up data.
2025-04-09 14:43:50,414:INFO:Set up index.
2025-04-09 14:43:51,277:INFO:Initializing predict_model()
2025-04-09 14:43:51,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587AA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:51,277:INFO:Checking exceptions
2025-04-09 14:43:51,278:INFO:Preloading libraries
2025-04-09 14:43:51,278:INFO:Set up data.
2025-04-09 14:43:51,283:INFO:Set up index.
2025-04-09 14:43:52,118:INFO:Initializing predict_model()
2025-04-09 14:43:52,118:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:52,118:INFO:Checking exceptions
2025-04-09 14:43:52,118:INFO:Preloading libraries
2025-04-09 14:43:52,119:INFO:Set up data.
2025-04-09 14:43:52,124:INFO:Set up index.
2025-04-09 14:43:53,061:INFO:Initializing predict_model()
2025-04-09 14:43:53,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257AD1A6410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:53,062:INFO:Checking exceptions
2025-04-09 14:43:53,062:INFO:Preloading libraries
2025-04-09 14:43:53,062:INFO:Set up data.
2025-04-09 14:43:53,069:INFO:Set up index.
2025-04-09 14:43:53,887:INFO:Initializing predict_model()
2025-04-09 14:43:53,887:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586E050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:53,887:INFO:Checking exceptions
2025-04-09 14:43:53,887:INFO:Preloading libraries
2025-04-09 14:43:53,888:INFO:Set up data.
2025-04-09 14:43:53,892:INFO:Set up index.
2025-04-09 14:43:54,701:INFO:Initializing predict_model()
2025-04-09 14:43:54,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:54,702:INFO:Checking exceptions
2025-04-09 14:43:54,702:INFO:Preloading libraries
2025-04-09 14:43:54,702:INFO:Set up data.
2025-04-09 14:43:54,709:INFO:Set up index.
2025-04-09 14:43:55,600:INFO:Initializing predict_model()
2025-04-09 14:43:55,600:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:55,600:INFO:Checking exceptions
2025-04-09 14:43:55,600:INFO:Preloading libraries
2025-04-09 14:43:55,601:INFO:Set up data.
2025-04-09 14:43:55,605:INFO:Set up index.
2025-04-09 14:43:56,401:INFO:Initializing predict_model()
2025-04-09 14:43:56,402:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5879B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:56,402:INFO:Checking exceptions
2025-04-09 14:43:56,402:INFO:Preloading libraries
2025-04-09 14:43:56,403:INFO:Set up data.
2025-04-09 14:43:56,410:INFO:Set up index.
2025-04-09 14:43:57,259:INFO:Initializing predict_model()
2025-04-09 14:43:57,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:43:57,259:INFO:Checking exceptions
2025-04-09 14:43:57,260:INFO:Preloading libraries
2025-04-09 14:43:57,260:INFO:Set up data.
2025-04-09 14:43:57,265:INFO:Set up index.
2025-04-09 14:43:58,116:INFO:Initializing predict_model()
2025-04-09 14:43:58,117:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58833D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:58,117:INFO:Checking exceptions
2025-04-09 14:43:58,117:INFO:Preloading libraries
2025-04-09 14:43:58,118:INFO:Set up data.
2025-04-09 14:43:58,124:INFO:Set up index.
2025-04-09 14:43:58,921:INFO:Initializing predict_model()
2025-04-09 14:43:58,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:58,921:INFO:Checking exceptions
2025-04-09 14:43:58,921:INFO:Preloading libraries
2025-04-09 14:43:58,922:INFO:Set up data.
2025-04-09 14:43:58,927:INFO:Set up index.
2025-04-09 14:43:59,704:INFO:Initializing predict_model()
2025-04-09 14:43:59,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:43:59,705:INFO:Checking exceptions
2025-04-09 14:43:59,705:INFO:Preloading libraries
2025-04-09 14:43:59,705:INFO:Set up data.
2025-04-09 14:43:59,712:INFO:Set up index.
2025-04-09 14:44:00,569:INFO:Initializing predict_model()
2025-04-09 14:44:00,569:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:00,570:INFO:Checking exceptions
2025-04-09 14:44:00,570:INFO:Preloading libraries
2025-04-09 14:44:00,570:INFO:Set up data.
2025-04-09 14:44:00,575:INFO:Set up index.
2025-04-09 14:44:01,343:INFO:Initializing predict_model()
2025-04-09 14:44:01,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587FCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:01,344:INFO:Checking exceptions
2025-04-09 14:44:01,344:INFO:Preloading libraries
2025-04-09 14:44:01,344:INFO:Set up data.
2025-04-09 14:44:01,348:INFO:Set up index.
2025-04-09 14:44:02,192:INFO:Initializing predict_model()
2025-04-09 14:44:02,192:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:02,192:INFO:Checking exceptions
2025-04-09 14:44:02,192:INFO:Preloading libraries
2025-04-09 14:44:02,194:INFO:Set up data.
2025-04-09 14:44:02,198:INFO:Set up index.
2025-04-09 14:44:03,051:INFO:Initializing predict_model()
2025-04-09 14:44:03,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:03,051:INFO:Checking exceptions
2025-04-09 14:44:03,051:INFO:Preloading libraries
2025-04-09 14:44:03,052:INFO:Set up data.
2025-04-09 14:44:03,056:INFO:Set up index.
2025-04-09 14:44:03,809:INFO:Initializing predict_model()
2025-04-09 14:44:03,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586C250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:03,809:INFO:Checking exceptions
2025-04-09 14:44:03,809:INFO:Preloading libraries
2025-04-09 14:44:03,810:INFO:Set up data.
2025-04-09 14:44:03,814:INFO:Set up index.
2025-04-09 14:44:04,671:INFO:Initializing predict_model()
2025-04-09 14:44:04,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587DF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:04,671:INFO:Checking exceptions
2025-04-09 14:44:04,671:INFO:Preloading libraries
2025-04-09 14:44:04,672:INFO:Set up data.
2025-04-09 14:44:04,678:INFO:Set up index.
2025-04-09 14:44:05,513:INFO:Initializing predict_model()
2025-04-09 14:44:05,513:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587EC50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:05,513:INFO:Checking exceptions
2025-04-09 14:44:05,513:INFO:Preloading libraries
2025-04-09 14:44:05,513:INFO:Set up data.
2025-04-09 14:44:05,518:INFO:Set up index.
2025-04-09 14:44:06,272:INFO:Initializing predict_model()
2025-04-09 14:44:06,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587E510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:06,272:INFO:Checking exceptions
2025-04-09 14:44:06,272:INFO:Preloading libraries
2025-04-09 14:44:06,273:INFO:Set up data.
2025-04-09 14:44:06,279:INFO:Set up index.
2025-04-09 14:44:07,116:INFO:Initializing predict_model()
2025-04-09 14:44:07,116:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5862FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:07,116:INFO:Checking exceptions
2025-04-09 14:44:07,116:INFO:Preloading libraries
2025-04-09 14:44:07,117:INFO:Set up data.
2025-04-09 14:44:07,124:INFO:Set up index.
2025-04-09 14:44:07,907:INFO:Initializing predict_model()
2025-04-09 14:44:07,907:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587FF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:07,907:INFO:Checking exceptions
2025-04-09 14:44:07,907:INFO:Preloading libraries
2025-04-09 14:44:07,908:INFO:Set up data.
2025-04-09 14:44:07,912:INFO:Set up index.
2025-04-09 14:44:08,726:INFO:Initializing predict_model()
2025-04-09 14:44:08,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:08,727:INFO:Checking exceptions
2025-04-09 14:44:08,727:INFO:Preloading libraries
2025-04-09 14:44:08,728:INFO:Set up data.
2025-04-09 14:44:08,733:INFO:Set up index.
2025-04-09 14:44:09,577:INFO:Initializing predict_model()
2025-04-09 14:44:09,578:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:09,578:INFO:Checking exceptions
2025-04-09 14:44:09,578:INFO:Preloading libraries
2025-04-09 14:44:09,579:INFO:Set up data.
2025-04-09 14:44:09,584:INFO:Set up index.
2025-04-09 14:44:10,440:INFO:Initializing predict_model()
2025-04-09 14:44:10,440:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:10,440:INFO:Checking exceptions
2025-04-09 14:44:10,440:INFO:Preloading libraries
2025-04-09 14:44:10,441:INFO:Set up data.
2025-04-09 14:44:10,446:INFO:Set up index.
2025-04-09 14:44:11,233:INFO:Initializing predict_model()
2025-04-09 14:44:11,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5667C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:11,234:INFO:Checking exceptions
2025-04-09 14:44:11,234:INFO:Preloading libraries
2025-04-09 14:44:11,234:INFO:Set up data.
2025-04-09 14:44:11,239:INFO:Set up index.
2025-04-09 14:44:12,097:INFO:Initializing predict_model()
2025-04-09 14:44:12,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:12,097:INFO:Checking exceptions
2025-04-09 14:44:12,097:INFO:Preloading libraries
2025-04-09 14:44:12,098:INFO:Set up data.
2025-04-09 14:44:12,103:INFO:Set up index.
2025-04-09 14:44:13,036:INFO:Initializing predict_model()
2025-04-09 14:44:13,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:13,037:INFO:Checking exceptions
2025-04-09 14:44:13,037:INFO:Preloading libraries
2025-04-09 14:44:13,038:INFO:Set up data.
2025-04-09 14:44:13,044:INFO:Set up index.
2025-04-09 14:44:13,900:INFO:Initializing predict_model()
2025-04-09 14:44:13,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5883890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:13,901:INFO:Checking exceptions
2025-04-09 14:44:13,901:INFO:Preloading libraries
2025-04-09 14:44:13,901:INFO:Set up data.
2025-04-09 14:44:13,907:INFO:Set up index.
2025-04-09 14:44:14,798:INFO:Initializing predict_model()
2025-04-09 14:44:14,798:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5880390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:14,799:INFO:Checking exceptions
2025-04-09 14:44:14,799:INFO:Preloading libraries
2025-04-09 14:44:14,799:INFO:Set up data.
2025-04-09 14:44:14,804:INFO:Set up index.
2025-04-09 14:44:15,633:INFO:Initializing predict_model()
2025-04-09 14:44:15,633:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58951D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:15,633:INFO:Checking exceptions
2025-04-09 14:44:15,633:INFO:Preloading libraries
2025-04-09 14:44:15,633:INFO:Set up data.
2025-04-09 14:44:15,637:INFO:Set up index.
2025-04-09 14:44:16,492:INFO:Initializing predict_model()
2025-04-09 14:44:16,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:16,492:INFO:Checking exceptions
2025-04-09 14:44:16,492:INFO:Preloading libraries
2025-04-09 14:44:16,493:INFO:Set up data.
2025-04-09 14:44:16,499:INFO:Set up index.
2025-04-09 14:44:17,563:INFO:Initializing predict_model()
2025-04-09 14:44:17,563:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:17,563:INFO:Checking exceptions
2025-04-09 14:44:17,563:INFO:Preloading libraries
2025-04-09 14:44:17,564:INFO:Set up data.
2025-04-09 14:44:17,572:INFO:Set up index.
2025-04-09 14:44:18,579:INFO:Initializing predict_model()
2025-04-09 14:44:18,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588BED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:18,579:INFO:Checking exceptions
2025-04-09 14:44:18,579:INFO:Preloading libraries
2025-04-09 14:44:18,580:INFO:Set up data.
2025-04-09 14:44:18,585:INFO:Set up index.
2025-04-09 14:44:19,584:INFO:Initializing predict_model()
2025-04-09 14:44:19,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586E8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:19,584:INFO:Checking exceptions
2025-04-09 14:44:19,585:INFO:Preloading libraries
2025-04-09 14:44:19,585:INFO:Set up data.
2025-04-09 14:44:19,591:INFO:Set up index.
2025-04-09 14:44:20,476:INFO:Initializing predict_model()
2025-04-09 14:44:20,476:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:20,477:INFO:Checking exceptions
2025-04-09 14:44:20,477:INFO:Preloading libraries
2025-04-09 14:44:20,477:INFO:Set up data.
2025-04-09 14:44:20,482:INFO:Set up index.
2025-04-09 14:44:21,363:INFO:Initializing predict_model()
2025-04-09 14:44:21,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:21,364:INFO:Checking exceptions
2025-04-09 14:44:21,364:INFO:Preloading libraries
2025-04-09 14:44:21,364:INFO:Set up data.
2025-04-09 14:44:21,368:INFO:Set up index.
2025-04-09 14:44:22,245:INFO:Initializing predict_model()
2025-04-09 14:44:22,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C584EED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:22,246:INFO:Checking exceptions
2025-04-09 14:44:22,246:INFO:Preloading libraries
2025-04-09 14:44:22,246:INFO:Set up data.
2025-04-09 14:44:22,251:INFO:Set up index.
2025-04-09 14:44:23,126:INFO:Initializing predict_model()
2025-04-09 14:44:23,126:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5889790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:23,127:INFO:Checking exceptions
2025-04-09 14:44:23,127:INFO:Preloading libraries
2025-04-09 14:44:23,127:INFO:Set up data.
2025-04-09 14:44:23,132:INFO:Set up index.
2025-04-09 14:44:23,910:INFO:Initializing predict_model()
2025-04-09 14:44:23,910:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5882150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:23,910:INFO:Checking exceptions
2025-04-09 14:44:23,910:INFO:Preloading libraries
2025-04-09 14:44:23,911:INFO:Set up data.
2025-04-09 14:44:23,917:INFO:Set up index.
2025-04-09 14:44:24,792:INFO:Initializing predict_model()
2025-04-09 14:44:24,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586F690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:24,792:INFO:Checking exceptions
2025-04-09 14:44:24,793:INFO:Preloading libraries
2025-04-09 14:44:24,793:INFO:Set up data.
2025-04-09 14:44:24,797:INFO:Set up index.
2025-04-09 14:44:25,595:INFO:Initializing predict_model()
2025-04-09 14:44:25,595:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587DA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:25,595:INFO:Checking exceptions
2025-04-09 14:44:25,595:INFO:Preloading libraries
2025-04-09 14:44:25,596:INFO:Set up data.
2025-04-09 14:44:25,601:INFO:Set up index.
2025-04-09 14:44:26,356:INFO:Initializing predict_model()
2025-04-09 14:44:26,357:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586EE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:26,357:INFO:Checking exceptions
2025-04-09 14:44:26,357:INFO:Preloading libraries
2025-04-09 14:44:26,357:INFO:Set up data.
2025-04-09 14:44:26,362:INFO:Set up index.
2025-04-09 14:44:27,228:INFO:Initializing predict_model()
2025-04-09 14:44:27,228:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586E050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:27,228:INFO:Checking exceptions
2025-04-09 14:44:27,228:INFO:Preloading libraries
2025-04-09 14:44:27,228:INFO:Set up data.
2025-04-09 14:44:27,232:INFO:Set up index.
2025-04-09 14:44:28,014:INFO:Initializing predict_model()
2025-04-09 14:44:28,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5860E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:44:28,014:INFO:Checking exceptions
2025-04-09 14:44:28,014:INFO:Preloading libraries
2025-04-09 14:44:28,015:INFO:Set up data.
2025-04-09 14:44:28,020:INFO:Set up index.
2025-04-09 14:44:28,925:INFO:Initializing predict_model()
2025-04-09 14:44:28,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:28,925:INFO:Checking exceptions
2025-04-09 14:44:28,926:INFO:Preloading libraries
2025-04-09 14:44:28,926:INFO:Set up data.
2025-04-09 14:44:28,935:INFO:Set up index.
2025-04-09 14:44:29,769:INFO:Initializing predict_model()
2025-04-09 14:44:29,769:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58822D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:29,770:INFO:Checking exceptions
2025-04-09 14:44:29,770:INFO:Preloading libraries
2025-04-09 14:44:29,770:INFO:Set up data.
2025-04-09 14:44:29,775:INFO:Set up index.
2025-04-09 14:44:30,592:INFO:Initializing predict_model()
2025-04-09 14:44:30,592:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:30,592:INFO:Checking exceptions
2025-04-09 14:44:30,592:INFO:Preloading libraries
2025-04-09 14:44:30,593:INFO:Set up data.
2025-04-09 14:44:30,598:INFO:Set up index.
2025-04-09 14:44:31,467:INFO:Initializing predict_model()
2025-04-09 14:44:31,467:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58839D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:31,467:INFO:Checking exceptions
2025-04-09 14:44:31,467:INFO:Preloading libraries
2025-04-09 14:44:31,468:INFO:Set up data.
2025-04-09 14:44:31,473:INFO:Set up index.
2025-04-09 14:44:32,307:INFO:Initializing predict_model()
2025-04-09 14:44:32,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:32,308:INFO:Checking exceptions
2025-04-09 14:44:32,308:INFO:Preloading libraries
2025-04-09 14:44:32,308:INFO:Set up data.
2025-04-09 14:44:32,313:INFO:Set up index.
2025-04-09 14:44:33,146:INFO:Initializing predict_model()
2025-04-09 14:44:33,146:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:33,146:INFO:Checking exceptions
2025-04-09 14:44:33,146:INFO:Preloading libraries
2025-04-09 14:44:33,147:INFO:Set up data.
2025-04-09 14:44:33,153:INFO:Set up index.
2025-04-09 14:44:34,043:INFO:Initializing predict_model()
2025-04-09 14:44:34,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5881D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:34,044:INFO:Checking exceptions
2025-04-09 14:44:34,044:INFO:Preloading libraries
2025-04-09 14:44:34,044:INFO:Set up data.
2025-04-09 14:44:34,051:INFO:Set up index.
2025-04-09 14:44:34,948:INFO:Initializing predict_model()
2025-04-09 14:44:34,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C584EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:34,949:INFO:Checking exceptions
2025-04-09 14:44:34,949:INFO:Preloading libraries
2025-04-09 14:44:34,949:INFO:Set up data.
2025-04-09 14:44:34,956:INFO:Set up index.
2025-04-09 14:44:35,800:INFO:Initializing predict_model()
2025-04-09 14:44:35,800:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:35,800:INFO:Checking exceptions
2025-04-09 14:44:35,800:INFO:Preloading libraries
2025-04-09 14:44:35,801:INFO:Set up data.
2025-04-09 14:44:35,805:INFO:Set up index.
2025-04-09 14:44:36,820:INFO:Initializing predict_model()
2025-04-09 14:44:36,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:36,821:INFO:Checking exceptions
2025-04-09 14:44:36,821:INFO:Preloading libraries
2025-04-09 14:44:36,822:INFO:Set up data.
2025-04-09 14:44:36,828:INFO:Set up index.
2025-04-09 14:44:37,714:INFO:Initializing predict_model()
2025-04-09 14:44:37,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:37,714:INFO:Checking exceptions
2025-04-09 14:44:37,714:INFO:Preloading libraries
2025-04-09 14:44:37,714:INFO:Set up data.
2025-04-09 14:44:37,720:INFO:Set up index.
2025-04-09 14:44:38,602:INFO:Initializing predict_model()
2025-04-09 14:44:38,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587CE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:38,603:INFO:Checking exceptions
2025-04-09 14:44:38,603:INFO:Preloading libraries
2025-04-09 14:44:38,604:INFO:Set up data.
2025-04-09 14:44:38,610:INFO:Set up index.
2025-04-09 14:44:39,501:INFO:Initializing predict_model()
2025-04-09 14:44:39,501:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:39,502:INFO:Checking exceptions
2025-04-09 14:44:39,502:INFO:Preloading libraries
2025-04-09 14:44:39,502:INFO:Set up data.
2025-04-09 14:44:39,507:INFO:Set up index.
2025-04-09 14:44:40,374:INFO:Initializing predict_model()
2025-04-09 14:44:40,374:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:40,374:INFO:Checking exceptions
2025-04-09 14:44:40,375:INFO:Preloading libraries
2025-04-09 14:44:40,375:INFO:Set up data.
2025-04-09 14:44:40,381:INFO:Set up index.
2025-04-09 14:44:41,333:INFO:Initializing predict_model()
2025-04-09 14:44:41,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5878D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:41,333:INFO:Checking exceptions
2025-04-09 14:44:41,333:INFO:Preloading libraries
2025-04-09 14:44:41,334:INFO:Set up data.
2025-04-09 14:44:41,339:INFO:Set up index.
2025-04-09 14:44:42,239:INFO:Initializing predict_model()
2025-04-09 14:44:42,240:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5881150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:42,240:INFO:Checking exceptions
2025-04-09 14:44:42,240:INFO:Preloading libraries
2025-04-09 14:44:42,241:INFO:Set up data.
2025-04-09 14:44:42,247:INFO:Set up index.
2025-04-09 14:44:43,166:INFO:Initializing predict_model()
2025-04-09 14:44:43,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58836D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:43,167:INFO:Checking exceptions
2025-04-09 14:44:43,167:INFO:Preloading libraries
2025-04-09 14:44:43,167:INFO:Set up data.
2025-04-09 14:44:43,171:INFO:Set up index.
2025-04-09 14:44:44,107:INFO:Initializing predict_model()
2025-04-09 14:44:44,108:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5893150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:44,108:INFO:Checking exceptions
2025-04-09 14:44:44,108:INFO:Preloading libraries
2025-04-09 14:44:44,109:INFO:Set up data.
2025-04-09 14:44:44,114:INFO:Set up index.
2025-04-09 14:44:45,072:INFO:Initializing predict_model()
2025-04-09 14:44:45,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58836D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:45,072:INFO:Checking exceptions
2025-04-09 14:44:45,072:INFO:Preloading libraries
2025-04-09 14:44:45,073:INFO:Set up data.
2025-04-09 14:44:45,081:INFO:Set up index.
2025-04-09 14:44:45,991:INFO:Initializing predict_model()
2025-04-09 14:44:45,991:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:45,992:INFO:Checking exceptions
2025-04-09 14:44:45,992:INFO:Preloading libraries
2025-04-09 14:44:45,992:INFO:Set up data.
2025-04-09 14:44:46,000:INFO:Set up index.
2025-04-09 14:44:46,918:INFO:Initializing predict_model()
2025-04-09 14:44:46,918:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5880890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:46,918:INFO:Checking exceptions
2025-04-09 14:44:46,918:INFO:Preloading libraries
2025-04-09 14:44:46,919:INFO:Set up data.
2025-04-09 14:44:46,924:INFO:Set up index.
2025-04-09 14:44:47,821:INFO:Initializing predict_model()
2025-04-09 14:44:47,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:47,821:INFO:Checking exceptions
2025-04-09 14:44:47,821:INFO:Preloading libraries
2025-04-09 14:44:47,823:INFO:Set up data.
2025-04-09 14:44:47,828:INFO:Set up index.
2025-04-09 14:44:48,778:INFO:Initializing predict_model()
2025-04-09 14:44:48,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:48,779:INFO:Checking exceptions
2025-04-09 14:44:48,779:INFO:Preloading libraries
2025-04-09 14:44:48,779:INFO:Set up data.
2025-04-09 14:44:48,785:INFO:Set up index.
2025-04-09 14:44:49,659:INFO:Initializing predict_model()
2025-04-09 14:44:49,660:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5666F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:49,660:INFO:Checking exceptions
2025-04-09 14:44:49,660:INFO:Preloading libraries
2025-04-09 14:44:49,660:INFO:Set up data.
2025-04-09 14:44:49,666:INFO:Set up index.
2025-04-09 14:44:50,565:INFO:Initializing predict_model()
2025-04-09 14:44:50,565:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587CF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:50,565:INFO:Checking exceptions
2025-04-09 14:44:50,566:INFO:Preloading libraries
2025-04-09 14:44:50,566:INFO:Set up data.
2025-04-09 14:44:50,571:INFO:Set up index.
2025-04-09 14:44:51,465:INFO:Initializing predict_model()
2025-04-09 14:44:51,465:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:51,465:INFO:Checking exceptions
2025-04-09 14:44:51,465:INFO:Preloading libraries
2025-04-09 14:44:51,465:INFO:Set up data.
2025-04-09 14:44:51,470:INFO:Set up index.
2025-04-09 14:44:52,307:INFO:Initializing predict_model()
2025-04-09 14:44:52,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587CF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:52,307:INFO:Checking exceptions
2025-04-09 14:44:52,307:INFO:Preloading libraries
2025-04-09 14:44:52,308:INFO:Set up data.
2025-04-09 14:44:52,313:INFO:Set up index.
2025-04-09 14:44:53,246:INFO:Initializing predict_model()
2025-04-09 14:44:53,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:53,247:INFO:Checking exceptions
2025-04-09 14:44:53,247:INFO:Preloading libraries
2025-04-09 14:44:53,248:INFO:Set up data.
2025-04-09 14:44:53,254:INFO:Set up index.
2025-04-09 14:44:54,038:INFO:Initializing predict_model()
2025-04-09 14:44:54,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A63D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:54,039:INFO:Checking exceptions
2025-04-09 14:44:54,039:INFO:Preloading libraries
2025-04-09 14:44:54,039:INFO:Set up data.
2025-04-09 14:44:54,045:INFO:Set up index.
2025-04-09 14:44:54,914:INFO:Initializing predict_model()
2025-04-09 14:44:54,914:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5883950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:54,914:INFO:Checking exceptions
2025-04-09 14:44:54,914:INFO:Preloading libraries
2025-04-09 14:44:54,915:INFO:Set up data.
2025-04-09 14:44:54,920:INFO:Set up index.
2025-04-09 14:44:55,737:INFO:Initializing predict_model()
2025-04-09 14:44:55,738:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:55,738:INFO:Checking exceptions
2025-04-09 14:44:55,738:INFO:Preloading libraries
2025-04-09 14:44:55,739:INFO:Set up data.
2025-04-09 14:44:55,746:INFO:Set up index.
2025-04-09 14:44:56,588:INFO:Initializing predict_model()
2025-04-09 14:44:56,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A63D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:56,588:INFO:Checking exceptions
2025-04-09 14:44:56,588:INFO:Preloading libraries
2025-04-09 14:44:56,589:INFO:Set up data.
2025-04-09 14:44:56,594:INFO:Set up index.
2025-04-09 14:44:57,389:INFO:Initializing predict_model()
2025-04-09 14:44:57,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:57,390:INFO:Checking exceptions
2025-04-09 14:44:57,390:INFO:Preloading libraries
2025-04-09 14:44:57,390:INFO:Set up data.
2025-04-09 14:44:57,395:INFO:Set up index.
2025-04-09 14:44:58,273:INFO:Initializing predict_model()
2025-04-09 14:44:58,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5895990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:44:58,273:INFO:Checking exceptions
2025-04-09 14:44:58,273:INFO:Preloading libraries
2025-04-09 14:44:58,275:INFO:Set up data.
2025-04-09 14:44:58,281:INFO:Set up index.
2025-04-09 14:44:59,157:INFO:Initializing predict_model()
2025-04-09 14:44:59,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58901D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:44:59,158:INFO:Checking exceptions
2025-04-09 14:44:59,158:INFO:Preloading libraries
2025-04-09 14:44:59,158:INFO:Set up data.
2025-04-09 14:44:59,164:INFO:Set up index.
2025-04-09 14:44:59,971:INFO:Initializing predict_model()
2025-04-09 14:44:59,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:44:59,972:INFO:Checking exceptions
2025-04-09 14:44:59,972:INFO:Preloading libraries
2025-04-09 14:44:59,972:INFO:Set up data.
2025-04-09 14:44:59,976:INFO:Set up index.
2025-04-09 14:45:00,955:INFO:Initializing predict_model()
2025-04-09 14:45:00,956:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A6510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:00,956:INFO:Checking exceptions
2025-04-09 14:45:00,956:INFO:Preloading libraries
2025-04-09 14:45:00,957:INFO:Set up data.
2025-04-09 14:45:00,963:INFO:Set up index.
2025-04-09 14:45:01,811:INFO:Initializing predict_model()
2025-04-09 14:45:01,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587C690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:01,812:INFO:Checking exceptions
2025-04-09 14:45:01,812:INFO:Preloading libraries
2025-04-09 14:45:01,813:INFO:Set up data.
2025-04-09 14:45:01,818:INFO:Set up index.
2025-04-09 14:45:02,623:INFO:Initializing predict_model()
2025-04-09 14:45:02,623:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58824D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:02,624:INFO:Checking exceptions
2025-04-09 14:45:02,624:INFO:Preloading libraries
2025-04-09 14:45:02,624:INFO:Set up data.
2025-04-09 14:45:02,630:INFO:Set up index.
2025-04-09 14:45:03,584:INFO:Initializing predict_model()
2025-04-09 14:45:03,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:03,584:INFO:Checking exceptions
2025-04-09 14:45:03,584:INFO:Preloading libraries
2025-04-09 14:45:03,585:INFO:Set up data.
2025-04-09 14:45:03,589:INFO:Set up index.
2025-04-09 14:45:04,334:INFO:Initializing predict_model()
2025-04-09 14:45:04,336:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:04,336:INFO:Checking exceptions
2025-04-09 14:45:04,336:INFO:Preloading libraries
2025-04-09 14:45:04,336:INFO:Set up data.
2025-04-09 14:45:04,340:INFO:Set up index.
2025-04-09 14:45:05,157:INFO:Initializing predict_model()
2025-04-09 14:45:05,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A4A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:05,157:INFO:Checking exceptions
2025-04-09 14:45:05,157:INFO:Preloading libraries
2025-04-09 14:45:05,158:INFO:Set up data.
2025-04-09 14:45:05,162:INFO:Set up index.
2025-04-09 14:45:06,020:INFO:Initializing predict_model()
2025-04-09 14:45:06,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5878890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:06,020:INFO:Checking exceptions
2025-04-09 14:45:06,021:INFO:Preloading libraries
2025-04-09 14:45:06,021:INFO:Set up data.
2025-04-09 14:45:06,025:INFO:Set up index.
2025-04-09 14:45:06,799:INFO:Initializing predict_model()
2025-04-09 14:45:06,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:06,800:INFO:Checking exceptions
2025-04-09 14:45:06,800:INFO:Preloading libraries
2025-04-09 14:45:06,800:INFO:Set up data.
2025-04-09 14:45:06,805:INFO:Set up index.
2025-04-09 14:45:07,628:INFO:Initializing predict_model()
2025-04-09 14:45:07,628:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:07,628:INFO:Checking exceptions
2025-04-09 14:45:07,629:INFO:Preloading libraries
2025-04-09 14:45:07,629:INFO:Set up data.
2025-04-09 14:45:07,634:INFO:Set up index.
2025-04-09 14:45:08,460:INFO:Initializing predict_model()
2025-04-09 14:45:08,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:08,460:INFO:Checking exceptions
2025-04-09 14:45:08,460:INFO:Preloading libraries
2025-04-09 14:45:08,461:INFO:Set up data.
2025-04-09 14:45:08,465:INFO:Set up index.
2025-04-09 14:45:09,307:INFO:Initializing predict_model()
2025-04-09 14:45:09,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5889E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:09,307:INFO:Checking exceptions
2025-04-09 14:45:09,307:INFO:Preloading libraries
2025-04-09 14:45:09,308:INFO:Set up data.
2025-04-09 14:45:09,312:INFO:Set up index.
2025-04-09 14:45:10,152:INFO:Initializing predict_model()
2025-04-09 14:45:10,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A5550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:10,153:INFO:Checking exceptions
2025-04-09 14:45:10,153:INFO:Preloading libraries
2025-04-09 14:45:10,153:INFO:Set up data.
2025-04-09 14:45:10,161:INFO:Set up index.
2025-04-09 14:45:11,024:INFO:Initializing predict_model()
2025-04-09 14:45:11,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:11,024:INFO:Checking exceptions
2025-04-09 14:45:11,024:INFO:Preloading libraries
2025-04-09 14:45:11,025:INFO:Set up data.
2025-04-09 14:45:11,032:INFO:Set up index.
2025-04-09 14:45:11,791:INFO:Initializing predict_model()
2025-04-09 14:45:11,791:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5835250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:11,791:INFO:Checking exceptions
2025-04-09 14:45:11,791:INFO:Preloading libraries
2025-04-09 14:45:11,792:INFO:Set up data.
2025-04-09 14:45:11,797:INFO:Set up index.
2025-04-09 14:45:12,659:INFO:Initializing predict_model()
2025-04-09 14:45:12,659:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5880950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:12,659:INFO:Checking exceptions
2025-04-09 14:45:12,659:INFO:Preloading libraries
2025-04-09 14:45:12,660:INFO:Set up data.
2025-04-09 14:45:12,667:INFO:Set up index.
2025-04-09 14:45:13,519:INFO:Initializing predict_model()
2025-04-09 14:45:13,519:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:13,519:INFO:Checking exceptions
2025-04-09 14:45:13,519:INFO:Preloading libraries
2025-04-09 14:45:13,520:INFO:Set up data.
2025-04-09 14:45:13,524:INFO:Set up index.
2025-04-09 14:45:14,277:INFO:Initializing predict_model()
2025-04-09 14:45:14,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:14,277:INFO:Checking exceptions
2025-04-09 14:45:14,277:INFO:Preloading libraries
2025-04-09 14:45:14,277:INFO:Set up data.
2025-04-09 14:45:14,282:INFO:Set up index.
2025-04-09 14:45:15,139:INFO:Initializing predict_model()
2025-04-09 14:45:15,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588B9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:15,139:INFO:Checking exceptions
2025-04-09 14:45:15,139:INFO:Preloading libraries
2025-04-09 14:45:15,140:INFO:Set up data.
2025-04-09 14:45:15,147:INFO:Set up index.
2025-04-09 14:45:15,933:INFO:Initializing predict_model()
2025-04-09 14:45:15,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5879B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:15,934:INFO:Checking exceptions
2025-04-09 14:45:15,934:INFO:Preloading libraries
2025-04-09 14:45:15,935:INFO:Set up data.
2025-04-09 14:45:15,940:INFO:Set up index.
2025-04-09 14:45:16,735:INFO:Initializing predict_model()
2025-04-09 14:45:16,735:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B2210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:16,735:INFO:Checking exceptions
2025-04-09 14:45:16,735:INFO:Preloading libraries
2025-04-09 14:45:16,736:INFO:Set up data.
2025-04-09 14:45:16,741:INFO:Set up index.
2025-04-09 14:45:17,642:INFO:Initializing predict_model()
2025-04-09 14:45:17,643:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587B010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:17,643:INFO:Checking exceptions
2025-04-09 14:45:17,643:INFO:Preloading libraries
2025-04-09 14:45:17,643:INFO:Set up data.
2025-04-09 14:45:17,647:INFO:Set up index.
2025-04-09 14:45:18,448:INFO:Initializing predict_model()
2025-04-09 14:45:18,449:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5889CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:18,449:INFO:Checking exceptions
2025-04-09 14:45:18,449:INFO:Preloading libraries
2025-04-09 14:45:18,450:INFO:Set up data.
2025-04-09 14:45:18,455:INFO:Set up index.
2025-04-09 14:45:19,307:INFO:Initializing predict_model()
2025-04-09 14:45:19,308:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:19,308:INFO:Checking exceptions
2025-04-09 14:45:19,308:INFO:Preloading libraries
2025-04-09 14:45:19,308:INFO:Set up data.
2025-04-09 14:45:19,314:INFO:Set up index.
2025-04-09 14:45:20,182:INFO:Initializing predict_model()
2025-04-09 14:45:20,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A2410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:20,182:INFO:Checking exceptions
2025-04-09 14:45:20,182:INFO:Preloading libraries
2025-04-09 14:45:20,183:INFO:Set up data.
2025-04-09 14:45:20,187:INFO:Set up index.
2025-04-09 14:45:21,042:INFO:Initializing predict_model()
2025-04-09 14:45:21,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A2E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:21,042:INFO:Checking exceptions
2025-04-09 14:45:21,042:INFO:Preloading libraries
2025-04-09 14:45:21,043:INFO:Set up data.
2025-04-09 14:45:21,050:INFO:Set up index.
2025-04-09 14:45:21,945:INFO:Initializing predict_model()
2025-04-09 14:45:21,946:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A4090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:21,946:INFO:Checking exceptions
2025-04-09 14:45:21,946:INFO:Preloading libraries
2025-04-09 14:45:21,947:INFO:Set up data.
2025-04-09 14:45:21,952:INFO:Set up index.
2025-04-09 14:45:22,946:INFO:Initializing predict_model()
2025-04-09 14:45:22,947:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:22,947:INFO:Checking exceptions
2025-04-09 14:45:22,947:INFO:Preloading libraries
2025-04-09 14:45:22,948:INFO:Set up data.
2025-04-09 14:45:22,953:INFO:Set up index.
2025-04-09 14:45:23,741:INFO:Initializing predict_model()
2025-04-09 14:45:23,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:23,741:INFO:Checking exceptions
2025-04-09 14:45:23,741:INFO:Preloading libraries
2025-04-09 14:45:23,742:INFO:Set up data.
2025-04-09 14:45:23,747:INFO:Set up index.
2025-04-09 14:45:24,570:INFO:Initializing predict_model()
2025-04-09 14:45:24,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A3CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:24,571:INFO:Checking exceptions
2025-04-09 14:45:24,571:INFO:Preloading libraries
2025-04-09 14:45:24,571:INFO:Set up data.
2025-04-09 14:45:24,578:INFO:Set up index.
2025-04-09 14:45:25,469:INFO:Initializing predict_model()
2025-04-09 14:45:25,469:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A29D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:25,469:INFO:Checking exceptions
2025-04-09 14:45:25,469:INFO:Preloading libraries
2025-04-09 14:45:25,470:INFO:Set up data.
2025-04-09 14:45:25,474:INFO:Set up index.
2025-04-09 14:45:26,287:INFO:Initializing predict_model()
2025-04-09 14:45:26,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587ADD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:26,287:INFO:Checking exceptions
2025-04-09 14:45:26,287:INFO:Preloading libraries
2025-04-09 14:45:26,288:INFO:Set up data.
2025-04-09 14:45:26,292:INFO:Set up index.
2025-04-09 14:45:27,255:INFO:Initializing predict_model()
2025-04-09 14:45:27,255:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAEE8350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:27,256:INFO:Checking exceptions
2025-04-09 14:45:27,256:INFO:Preloading libraries
2025-04-09 14:45:27,257:INFO:Set up data.
2025-04-09 14:45:27,264:INFO:Set up index.
2025-04-09 14:45:28,162:INFO:Initializing predict_model()
2025-04-09 14:45:28,162:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5882290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:28,163:INFO:Checking exceptions
2025-04-09 14:45:28,163:INFO:Preloading libraries
2025-04-09 14:45:28,163:INFO:Set up data.
2025-04-09 14:45:28,171:INFO:Set up index.
2025-04-09 14:45:29,069:INFO:Initializing predict_model()
2025-04-09 14:45:29,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:45:29,070:INFO:Checking exceptions
2025-04-09 14:45:29,070:INFO:Preloading libraries
2025-04-09 14:45:29,070:INFO:Set up data.
2025-04-09 14:45:29,077:INFO:Set up index.
2025-04-09 14:45:30,033:INFO:Initializing predict_model()
2025-04-09 14:45:30,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5893A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:30,033:INFO:Checking exceptions
2025-04-09 14:45:30,034:INFO:Preloading libraries
2025-04-09 14:45:30,035:INFO:Set up data.
2025-04-09 14:45:30,042:INFO:Set up index.
2025-04-09 14:45:31,038:INFO:Initializing predict_model()
2025-04-09 14:45:31,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:31,039:INFO:Checking exceptions
2025-04-09 14:45:31,039:INFO:Preloading libraries
2025-04-09 14:45:31,040:INFO:Set up data.
2025-04-09 14:45:31,049:INFO:Set up index.
2025-04-09 14:45:31,934:INFO:Initializing predict_model()
2025-04-09 14:45:31,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5893B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:31,934:INFO:Checking exceptions
2025-04-09 14:45:31,934:INFO:Preloading libraries
2025-04-09 14:45:31,935:INFO:Set up data.
2025-04-09 14:45:31,940:INFO:Set up index.
2025-04-09 14:45:32,847:INFO:Initializing predict_model()
2025-04-09 14:45:32,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:32,847:INFO:Checking exceptions
2025-04-09 14:45:32,848:INFO:Preloading libraries
2025-04-09 14:45:32,848:INFO:Set up data.
2025-04-09 14:45:32,854:INFO:Set up index.
2025-04-09 14:45:33,674:INFO:Initializing predict_model()
2025-04-09 14:45:33,675:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5890310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:33,675:INFO:Checking exceptions
2025-04-09 14:45:33,675:INFO:Preloading libraries
2025-04-09 14:45:33,676:INFO:Set up data.
2025-04-09 14:45:33,682:INFO:Set up index.
2025-04-09 14:45:34,586:INFO:Initializing predict_model()
2025-04-09 14:45:34,587:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587BFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:34,587:INFO:Checking exceptions
2025-04-09 14:45:34,587:INFO:Preloading libraries
2025-04-09 14:45:34,587:INFO:Set up data.
2025-04-09 14:45:34,593:INFO:Set up index.
2025-04-09 14:45:35,514:INFO:Initializing predict_model()
2025-04-09 14:45:35,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A26D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:35,514:INFO:Checking exceptions
2025-04-09 14:45:35,514:INFO:Preloading libraries
2025-04-09 14:45:35,515:INFO:Set up data.
2025-04-09 14:45:35,520:INFO:Set up index.
2025-04-09 14:45:36,419:INFO:Initializing predict_model()
2025-04-09 14:45:36,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5893910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:36,420:INFO:Checking exceptions
2025-04-09 14:45:36,420:INFO:Preloading libraries
2025-04-09 14:45:36,420:INFO:Set up data.
2025-04-09 14:45:36,425:INFO:Set up index.
2025-04-09 14:45:37,444:INFO:Initializing predict_model()
2025-04-09 14:45:37,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:37,444:INFO:Checking exceptions
2025-04-09 14:45:37,444:INFO:Preloading libraries
2025-04-09 14:45:37,445:INFO:Set up data.
2025-04-09 14:45:37,450:INFO:Set up index.
2025-04-09 14:45:38,368:INFO:Initializing predict_model()
2025-04-09 14:45:38,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:38,368:INFO:Checking exceptions
2025-04-09 14:45:38,368:INFO:Preloading libraries
2025-04-09 14:45:38,369:INFO:Set up data.
2025-04-09 14:45:38,374:INFO:Set up index.
2025-04-09 14:45:39,414:INFO:Initializing predict_model()
2025-04-09 14:45:39,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A9250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:39,415:INFO:Checking exceptions
2025-04-09 14:45:39,415:INFO:Preloading libraries
2025-04-09 14:45:39,416:INFO:Set up data.
2025-04-09 14:45:39,423:INFO:Set up index.
2025-04-09 14:45:40,374:INFO:Initializing predict_model()
2025-04-09 14:45:40,374:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A3450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:40,374:INFO:Checking exceptions
2025-04-09 14:45:40,375:INFO:Preloading libraries
2025-04-09 14:45:40,375:INFO:Set up data.
2025-04-09 14:45:40,380:INFO:Set up index.
2025-04-09 14:45:41,231:INFO:Initializing predict_model()
2025-04-09 14:45:41,231:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58812D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:41,231:INFO:Checking exceptions
2025-04-09 14:45:41,231:INFO:Preloading libraries
2025-04-09 14:45:41,232:INFO:Set up data.
2025-04-09 14:45:41,236:INFO:Set up index.
2025-04-09 14:45:42,123:INFO:Initializing predict_model()
2025-04-09 14:45:42,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A46D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:42,124:INFO:Checking exceptions
2025-04-09 14:45:42,124:INFO:Preloading libraries
2025-04-09 14:45:42,125:INFO:Set up data.
2025-04-09 14:45:42,134:INFO:Set up index.
2025-04-09 14:45:42,978:INFO:Initializing predict_model()
2025-04-09 14:45:42,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5888690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:42,978:INFO:Checking exceptions
2025-04-09 14:45:42,978:INFO:Preloading libraries
2025-04-09 14:45:42,979:INFO:Set up data.
2025-04-09 14:45:42,985:INFO:Set up index.
2025-04-09 14:45:43,754:INFO:Initializing predict_model()
2025-04-09 14:45:43,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5892C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:43,754:INFO:Checking exceptions
2025-04-09 14:45:43,754:INFO:Preloading libraries
2025-04-09 14:45:43,755:INFO:Set up data.
2025-04-09 14:45:43,760:INFO:Set up index.
2025-04-09 14:45:44,666:INFO:Initializing predict_model()
2025-04-09 14:45:44,666:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:44,666:INFO:Checking exceptions
2025-04-09 14:45:44,666:INFO:Preloading libraries
2025-04-09 14:45:44,666:INFO:Set up data.
2025-04-09 14:45:44,670:INFO:Set up index.
2025-04-09 14:45:45,545:INFO:Initializing predict_model()
2025-04-09 14:45:45,545:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A06D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:45,545:INFO:Checking exceptions
2025-04-09 14:45:45,545:INFO:Preloading libraries
2025-04-09 14:45:45,546:INFO:Set up data.
2025-04-09 14:45:45,550:INFO:Set up index.
2025-04-09 14:45:46,376:INFO:Initializing predict_model()
2025-04-09 14:45:46,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B8E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:46,377:INFO:Checking exceptions
2025-04-09 14:45:46,377:INFO:Preloading libraries
2025-04-09 14:45:46,377:INFO:Set up data.
2025-04-09 14:45:46,383:INFO:Set up index.
2025-04-09 14:45:47,397:INFO:Initializing predict_model()
2025-04-09 14:45:47,398:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A2D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:47,398:INFO:Checking exceptions
2025-04-09 14:45:47,398:INFO:Preloading libraries
2025-04-09 14:45:47,399:INFO:Set up data.
2025-04-09 14:45:47,405:INFO:Set up index.
2025-04-09 14:45:48,325:INFO:Initializing predict_model()
2025-04-09 14:45:48,325:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BBD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:48,325:INFO:Checking exceptions
2025-04-09 14:45:48,326:INFO:Preloading libraries
2025-04-09 14:45:48,326:INFO:Set up data.
2025-04-09 14:45:48,334:INFO:Set up index.
2025-04-09 14:45:49,319:INFO:Initializing predict_model()
2025-04-09 14:45:49,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A83D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:49,319:INFO:Checking exceptions
2025-04-09 14:45:49,319:INFO:Preloading libraries
2025-04-09 14:45:49,320:INFO:Set up data.
2025-04-09 14:45:49,327:INFO:Set up index.
2025-04-09 14:45:50,187:INFO:Initializing predict_model()
2025-04-09 14:45:50,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B3810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:50,187:INFO:Checking exceptions
2025-04-09 14:45:50,188:INFO:Preloading libraries
2025-04-09 14:45:50,188:INFO:Set up data.
2025-04-09 14:45:50,193:INFO:Set up index.
2025-04-09 14:45:50,979:INFO:Initializing predict_model()
2025-04-09 14:45:50,980:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:50,980:INFO:Checking exceptions
2025-04-09 14:45:50,980:INFO:Preloading libraries
2025-04-09 14:45:50,981:INFO:Set up data.
2025-04-09 14:45:50,986:INFO:Set up index.
2025-04-09 14:45:51,866:INFO:Initializing predict_model()
2025-04-09 14:45:51,866:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AA410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:51,866:INFO:Checking exceptions
2025-04-09 14:45:51,867:INFO:Preloading libraries
2025-04-09 14:45:51,867:INFO:Set up data.
2025-04-09 14:45:51,874:INFO:Set up index.
2025-04-09 14:45:52,677:INFO:Initializing predict_model()
2025-04-09 14:45:52,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AA390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:52,678:INFO:Checking exceptions
2025-04-09 14:45:52,678:INFO:Preloading libraries
2025-04-09 14:45:52,679:INFO:Set up data.
2025-04-09 14:45:52,683:INFO:Set up index.
2025-04-09 14:45:53,513:INFO:Initializing predict_model()
2025-04-09 14:45:53,513:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B1050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:53,514:INFO:Checking exceptions
2025-04-09 14:45:53,514:INFO:Preloading libraries
2025-04-09 14:45:53,514:INFO:Set up data.
2025-04-09 14:45:53,520:INFO:Set up index.
2025-04-09 14:45:54,434:INFO:Initializing predict_model()
2025-04-09 14:45:54,434:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AA410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:54,434:INFO:Checking exceptions
2025-04-09 14:45:54,435:INFO:Preloading libraries
2025-04-09 14:45:54,435:INFO:Set up data.
2025-04-09 14:45:54,440:INFO:Set up index.
2025-04-09 14:45:55,238:INFO:Initializing predict_model()
2025-04-09 14:45:55,238:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B2E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:55,238:INFO:Checking exceptions
2025-04-09 14:45:55,238:INFO:Preloading libraries
2025-04-09 14:45:55,239:INFO:Set up data.
2025-04-09 14:45:55,244:INFO:Set up index.
2025-04-09 14:45:56,082:INFO:Initializing predict_model()
2025-04-09 14:45:56,082:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:56,082:INFO:Checking exceptions
2025-04-09 14:45:56,082:INFO:Preloading libraries
2025-04-09 14:45:56,083:INFO:Set up data.
2025-04-09 14:45:56,087:INFO:Set up index.
2025-04-09 14:45:57,123:INFO:Initializing predict_model()
2025-04-09 14:45:57,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B0590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:57,124:INFO:Checking exceptions
2025-04-09 14:45:57,124:INFO:Preloading libraries
2025-04-09 14:45:57,125:INFO:Set up data.
2025-04-09 14:45:57,130:INFO:Set up index.
2025-04-09 14:45:58,037:INFO:Initializing predict_model()
2025-04-09 14:45:58,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A9510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:58,038:INFO:Checking exceptions
2025-04-09 14:45:58,038:INFO:Preloading libraries
2025-04-09 14:45:58,039:INFO:Set up data.
2025-04-09 14:45:58,046:INFO:Set up index.
2025-04-09 14:45:58,860:INFO:Initializing predict_model()
2025-04-09 14:45:58,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:58,860:INFO:Checking exceptions
2025-04-09 14:45:58,860:INFO:Preloading libraries
2025-04-09 14:45:58,861:INFO:Set up data.
2025-04-09 14:45:58,866:INFO:Set up index.
2025-04-09 14:45:59,721:INFO:Initializing predict_model()
2025-04-09 14:45:59,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588BD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:45:59,722:INFO:Checking exceptions
2025-04-09 14:45:59,722:INFO:Preloading libraries
2025-04-09 14:45:59,722:INFO:Set up data.
2025-04-09 14:45:59,727:INFO:Set up index.
2025-04-09 14:46:00,599:INFO:Initializing predict_model()
2025-04-09 14:46:00,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5889550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:00,599:INFO:Checking exceptions
2025-04-09 14:46:00,599:INFO:Preloading libraries
2025-04-09 14:46:00,600:INFO:Set up data.
2025-04-09 14:46:00,604:INFO:Set up index.
2025-04-09 14:46:01,542:INFO:Initializing predict_model()
2025-04-09 14:46:01,542:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:01,543:INFO:Checking exceptions
2025-04-09 14:46:01,543:INFO:Preloading libraries
2025-04-09 14:46:01,543:INFO:Set up data.
2025-04-09 14:46:01,550:INFO:Set up index.
2025-04-09 14:46:02,445:INFO:Initializing predict_model()
2025-04-09 14:46:02,446:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:02,446:INFO:Checking exceptions
2025-04-09 14:46:02,446:INFO:Preloading libraries
2025-04-09 14:46:02,446:INFO:Set up data.
2025-04-09 14:46:02,451:INFO:Set up index.
2025-04-09 14:46:03,401:INFO:Initializing predict_model()
2025-04-09 14:46:03,401:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587E510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:03,402:INFO:Checking exceptions
2025-04-09 14:46:03,402:INFO:Preloading libraries
2025-04-09 14:46:03,402:INFO:Set up data.
2025-04-09 14:46:03,410:INFO:Set up index.
2025-04-09 14:46:04,422:INFO:Initializing predict_model()
2025-04-09 14:46:04,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:04,422:INFO:Checking exceptions
2025-04-09 14:46:04,422:INFO:Preloading libraries
2025-04-09 14:46:04,423:INFO:Set up data.
2025-04-09 14:46:04,429:INFO:Set up index.
2025-04-09 14:46:05,451:INFO:Initializing predict_model()
2025-04-09 14:46:05,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:05,451:INFO:Checking exceptions
2025-04-09 14:46:05,452:INFO:Preloading libraries
2025-04-09 14:46:05,452:INFO:Set up data.
2025-04-09 14:46:05,457:INFO:Set up index.
2025-04-09 14:46:06,347:INFO:Initializing predict_model()
2025-04-09 14:46:06,347:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A26D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:06,348:INFO:Checking exceptions
2025-04-09 14:46:06,348:INFO:Preloading libraries
2025-04-09 14:46:06,349:INFO:Set up data.
2025-04-09 14:46:06,354:INFO:Set up index.
2025-04-09 14:46:07,214:INFO:Initializing predict_model()
2025-04-09 14:46:07,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:07,214:INFO:Checking exceptions
2025-04-09 14:46:07,214:INFO:Preloading libraries
2025-04-09 14:46:07,215:INFO:Set up data.
2025-04-09 14:46:07,220:INFO:Set up index.
2025-04-09 14:46:08,032:INFO:Initializing predict_model()
2025-04-09 14:46:08,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A9450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:08,033:INFO:Checking exceptions
2025-04-09 14:46:08,033:INFO:Preloading libraries
2025-04-09 14:46:08,033:INFO:Set up data.
2025-04-09 14:46:08,038:INFO:Set up index.
2025-04-09 14:46:08,924:INFO:Initializing predict_model()
2025-04-09 14:46:08,924:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5863AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:08,925:INFO:Checking exceptions
2025-04-09 14:46:08,925:INFO:Preloading libraries
2025-04-09 14:46:08,925:INFO:Set up data.
2025-04-09 14:46:08,931:INFO:Set up index.
2025-04-09 14:46:09,767:INFO:Initializing predict_model()
2025-04-09 14:46:09,768:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A3750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:09,768:INFO:Checking exceptions
2025-04-09 14:46:09,768:INFO:Preloading libraries
2025-04-09 14:46:09,769:INFO:Set up data.
2025-04-09 14:46:09,773:INFO:Set up index.
2025-04-09 14:46:10,568:INFO:Initializing predict_model()
2025-04-09 14:46:10,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BBE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:10,568:INFO:Checking exceptions
2025-04-09 14:46:10,568:INFO:Preloading libraries
2025-04-09 14:46:10,569:INFO:Set up data.
2025-04-09 14:46:10,574:INFO:Set up index.
2025-04-09 14:46:11,448:INFO:Initializing predict_model()
2025-04-09 14:46:11,449:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:11,449:INFO:Checking exceptions
2025-04-09 14:46:11,449:INFO:Preloading libraries
2025-04-09 14:46:11,451:INFO:Set up data.
2025-04-09 14:46:11,455:INFO:Set up index.
2025-04-09 14:46:12,249:INFO:Initializing predict_model()
2025-04-09 14:46:12,249:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A9D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:12,250:INFO:Checking exceptions
2025-04-09 14:46:12,250:INFO:Preloading libraries
2025-04-09 14:46:12,250:INFO:Set up data.
2025-04-09 14:46:12,256:INFO:Set up index.
2025-04-09 14:46:13,155:INFO:Initializing predict_model()
2025-04-09 14:46:13,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AA0D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:13,155:INFO:Checking exceptions
2025-04-09 14:46:13,155:INFO:Preloading libraries
2025-04-09 14:46:13,156:INFO:Set up data.
2025-04-09 14:46:13,160:INFO:Set up index.
2025-04-09 14:46:14,071:INFO:Initializing predict_model()
2025-04-09 14:46:14,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B0610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:14,071:INFO:Checking exceptions
2025-04-09 14:46:14,071:INFO:Preloading libraries
2025-04-09 14:46:14,072:INFO:Set up data.
2025-04-09 14:46:14,078:INFO:Set up index.
2025-04-09 14:46:14,868:INFO:Initializing predict_model()
2025-04-09 14:46:14,869:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B2D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:14,869:INFO:Checking exceptions
2025-04-09 14:46:14,869:INFO:Preloading libraries
2025-04-09 14:46:14,869:INFO:Set up data.
2025-04-09 14:46:14,875:INFO:Set up index.
2025-04-09 14:46:15,665:INFO:Initializing predict_model()
2025-04-09 14:46:15,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DAB190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:15,665:INFO:Checking exceptions
2025-04-09 14:46:15,665:INFO:Preloading libraries
2025-04-09 14:46:15,666:INFO:Set up data.
2025-04-09 14:46:15,671:INFO:Set up index.
2025-04-09 14:46:16,556:INFO:Initializing predict_model()
2025-04-09 14:46:16,556:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58ABC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:16,556:INFO:Checking exceptions
2025-04-09 14:46:16,556:INFO:Preloading libraries
2025-04-09 14:46:16,557:INFO:Set up data.
2025-04-09 14:46:16,563:INFO:Set up index.
2025-04-09 14:46:17,409:INFO:Initializing predict_model()
2025-04-09 14:46:17,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58ABA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:17,409:INFO:Checking exceptions
2025-04-09 14:46:17,409:INFO:Preloading libraries
2025-04-09 14:46:17,410:INFO:Set up data.
2025-04-09 14:46:17,414:INFO:Set up index.
2025-04-09 14:46:18,213:INFO:Initializing predict_model()
2025-04-09 14:46:18,214:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BB990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:18,214:INFO:Checking exceptions
2025-04-09 14:46:18,214:INFO:Preloading libraries
2025-04-09 14:46:18,214:INFO:Set up data.
2025-04-09 14:46:18,219:INFO:Set up index.
2025-04-09 14:46:19,091:INFO:Initializing predict_model()
2025-04-09 14:46:19,091:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A3750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:19,091:INFO:Checking exceptions
2025-04-09 14:46:19,092:INFO:Preloading libraries
2025-04-09 14:46:19,092:INFO:Set up data.
2025-04-09 14:46:19,098:INFO:Set up index.
2025-04-09 14:46:19,930:INFO:Initializing predict_model()
2025-04-09 14:46:19,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:19,930:INFO:Checking exceptions
2025-04-09 14:46:19,930:INFO:Preloading libraries
2025-04-09 14:46:19,931:INFO:Set up data.
2025-04-09 14:46:19,935:INFO:Set up index.
2025-04-09 14:46:20,745:INFO:Initializing predict_model()
2025-04-09 14:46:20,745:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AAE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:20,746:INFO:Checking exceptions
2025-04-09 14:46:20,746:INFO:Preloading libraries
2025-04-09 14:46:20,746:INFO:Set up data.
2025-04-09 14:46:20,753:INFO:Set up index.
2025-04-09 14:46:21,698:INFO:Initializing predict_model()
2025-04-09 14:46:21,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B86D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:21,699:INFO:Checking exceptions
2025-04-09 14:46:21,699:INFO:Preloading libraries
2025-04-09 14:46:21,699:INFO:Set up data.
2025-04-09 14:46:21,705:INFO:Set up index.
2025-04-09 14:46:22,620:INFO:Initializing predict_model()
2025-04-09 14:46:22,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588B690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:22,621:INFO:Checking exceptions
2025-04-09 14:46:22,621:INFO:Preloading libraries
2025-04-09 14:46:22,621:INFO:Set up data.
2025-04-09 14:46:22,628:INFO:Set up index.
2025-04-09 14:46:23,634:INFO:Initializing predict_model()
2025-04-09 14:46:23,634:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A9B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:23,634:INFO:Checking exceptions
2025-04-09 14:46:23,634:INFO:Preloading libraries
2025-04-09 14:46:23,635:INFO:Set up data.
2025-04-09 14:46:23,643:INFO:Set up index.
2025-04-09 14:46:24,492:INFO:Initializing predict_model()
2025-04-09 14:46:24,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A2310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:24,493:INFO:Checking exceptions
2025-04-09 14:46:24,493:INFO:Preloading libraries
2025-04-09 14:46:24,493:INFO:Set up data.
2025-04-09 14:46:24,498:INFO:Set up index.
2025-04-09 14:46:25,313:INFO:Initializing predict_model()
2025-04-09 14:46:25,313:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BAD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:25,313:INFO:Checking exceptions
2025-04-09 14:46:25,313:INFO:Preloading libraries
2025-04-09 14:46:25,314:INFO:Set up data.
2025-04-09 14:46:25,320:INFO:Set up index.
2025-04-09 14:46:26,216:INFO:Initializing predict_model()
2025-04-09 14:46:26,216:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A0D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:26,217:INFO:Checking exceptions
2025-04-09 14:46:26,217:INFO:Preloading libraries
2025-04-09 14:46:26,217:INFO:Set up data.
2025-04-09 14:46:26,222:INFO:Set up index.
2025-04-09 14:46:27,057:INFO:Initializing predict_model()
2025-04-09 14:46:27,057:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B8510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:27,057:INFO:Checking exceptions
2025-04-09 14:46:27,057:INFO:Preloading libraries
2025-04-09 14:46:27,057:INFO:Set up data.
2025-04-09 14:46:27,062:INFO:Set up index.
2025-04-09 14:46:27,888:INFO:Initializing predict_model()
2025-04-09 14:46:27,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B3E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:27,888:INFO:Checking exceptions
2025-04-09 14:46:27,888:INFO:Preloading libraries
2025-04-09 14:46:27,889:INFO:Set up data.
2025-04-09 14:46:27,894:INFO:Set up index.
2025-04-09 14:46:28,782:INFO:Initializing predict_model()
2025-04-09 14:46:28,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B31D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:28,783:INFO:Checking exceptions
2025-04-09 14:46:28,783:INFO:Preloading libraries
2025-04-09 14:46:28,784:INFO:Set up data.
2025-04-09 14:46:28,789:INFO:Set up index.
2025-04-09 14:46:29,629:INFO:Initializing predict_model()
2025-04-09 14:46:29,629:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA2790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:29,629:INFO:Checking exceptions
2025-04-09 14:46:29,629:INFO:Preloading libraries
2025-04-09 14:46:29,630:INFO:Set up data.
2025-04-09 14:46:29,634:INFO:Set up index.
2025-04-09 14:46:30,482:INFO:Initializing predict_model()
2025-04-09 14:46:30,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B8510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:46:30,482:INFO:Checking exceptions
2025-04-09 14:46:30,482:INFO:Preloading libraries
2025-04-09 14:46:30,483:INFO:Set up data.
2025-04-09 14:46:30,489:INFO:Set up index.
2025-04-09 14:46:31,388:INFO:Initializing predict_model()
2025-04-09 14:46:31,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:31,388:INFO:Checking exceptions
2025-04-09 14:46:31,389:INFO:Preloading libraries
2025-04-09 14:46:31,389:INFO:Set up data.
2025-04-09 14:46:31,394:INFO:Set up index.
2025-04-09 14:46:32,215:INFO:Initializing predict_model()
2025-04-09 14:46:32,215:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:32,215:INFO:Checking exceptions
2025-04-09 14:46:32,215:INFO:Preloading libraries
2025-04-09 14:46:32,216:INFO:Set up data.
2025-04-09 14:46:32,221:INFO:Set up index.
2025-04-09 14:46:33,050:INFO:Initializing predict_model()
2025-04-09 14:46:33,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AAD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:33,050:INFO:Checking exceptions
2025-04-09 14:46:33,050:INFO:Preloading libraries
2025-04-09 14:46:33,051:INFO:Set up data.
2025-04-09 14:46:33,056:INFO:Set up index.
2025-04-09 14:46:33,895:INFO:Initializing predict_model()
2025-04-09 14:46:33,895:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B00D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:33,895:INFO:Checking exceptions
2025-04-09 14:46:33,895:INFO:Preloading libraries
2025-04-09 14:46:33,896:INFO:Set up data.
2025-04-09 14:46:33,900:INFO:Set up index.
2025-04-09 14:46:34,695:INFO:Initializing predict_model()
2025-04-09 14:46:34,695:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:34,696:INFO:Checking exceptions
2025-04-09 14:46:34,696:INFO:Preloading libraries
2025-04-09 14:46:34,696:INFO:Set up data.
2025-04-09 14:46:34,700:INFO:Set up index.
2025-04-09 14:46:35,561:INFO:Initializing predict_model()
2025-04-09 14:46:35,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B00D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:35,562:INFO:Checking exceptions
2025-04-09 14:46:35,562:INFO:Preloading libraries
2025-04-09 14:46:35,563:INFO:Set up data.
2025-04-09 14:46:35,569:INFO:Set up index.
2025-04-09 14:46:36,353:INFO:Initializing predict_model()
2025-04-09 14:46:36,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:36,354:INFO:Checking exceptions
2025-04-09 14:46:36,354:INFO:Preloading libraries
2025-04-09 14:46:36,355:INFO:Set up data.
2025-04-09 14:46:36,360:INFO:Set up index.
2025-04-09 14:46:37,144:INFO:Initializing predict_model()
2025-04-09 14:46:37,144:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:37,145:INFO:Checking exceptions
2025-04-09 14:46:37,145:INFO:Preloading libraries
2025-04-09 14:46:37,145:INFO:Set up data.
2025-04-09 14:46:37,151:INFO:Set up index.
2025-04-09 14:46:38,020:INFO:Initializing predict_model()
2025-04-09 14:46:38,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:38,021:INFO:Checking exceptions
2025-04-09 14:46:38,021:INFO:Preloading libraries
2025-04-09 14:46:38,021:INFO:Set up data.
2025-04-09 14:46:38,027:INFO:Set up index.
2025-04-09 14:46:38,897:INFO:Initializing predict_model()
2025-04-09 14:46:38,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B3590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:38,897:INFO:Checking exceptions
2025-04-09 14:46:38,897:INFO:Preloading libraries
2025-04-09 14:46:38,898:INFO:Set up data.
2025-04-09 14:46:38,903:INFO:Set up index.
2025-04-09 14:46:39,721:INFO:Initializing predict_model()
2025-04-09 14:46:39,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A6B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:39,721:INFO:Checking exceptions
2025-04-09 14:46:39,721:INFO:Preloading libraries
2025-04-09 14:46:39,722:INFO:Set up data.
2025-04-09 14:46:39,726:INFO:Set up index.
2025-04-09 14:46:40,597:INFO:Initializing predict_model()
2025-04-09 14:46:40,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586D010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:40,598:INFO:Checking exceptions
2025-04-09 14:46:40,598:INFO:Preloading libraries
2025-04-09 14:46:40,598:INFO:Set up data.
2025-04-09 14:46:40,602:INFO:Set up index.
2025-04-09 14:46:41,384:INFO:Initializing predict_model()
2025-04-09 14:46:41,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588B390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:41,385:INFO:Checking exceptions
2025-04-09 14:46:41,385:INFO:Preloading libraries
2025-04-09 14:46:41,385:INFO:Set up data.
2025-04-09 14:46:41,391:INFO:Set up index.
2025-04-09 14:46:42,190:INFO:Initializing predict_model()
2025-04-09 14:46:42,190:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A5AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:42,191:INFO:Checking exceptions
2025-04-09 14:46:42,191:INFO:Preloading libraries
2025-04-09 14:46:42,191:INFO:Set up data.
2025-04-09 14:46:42,196:INFO:Set up index.
2025-04-09 14:46:43,136:INFO:Initializing predict_model()
2025-04-09 14:46:43,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B29D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:43,136:INFO:Checking exceptions
2025-04-09 14:46:43,137:INFO:Preloading libraries
2025-04-09 14:46:43,137:INFO:Set up data.
2025-04-09 14:46:43,143:INFO:Set up index.
2025-04-09 14:46:43,934:INFO:Initializing predict_model()
2025-04-09 14:46:43,934:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:43,934:INFO:Checking exceptions
2025-04-09 14:46:43,934:INFO:Preloading libraries
2025-04-09 14:46:43,935:INFO:Set up data.
2025-04-09 14:46:43,939:INFO:Set up index.
2025-04-09 14:46:44,761:INFO:Initializing predict_model()
2025-04-09 14:46:44,761:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:44,761:INFO:Checking exceptions
2025-04-09 14:46:44,761:INFO:Preloading libraries
2025-04-09 14:46:44,761:INFO:Set up data.
2025-04-09 14:46:44,766:INFO:Set up index.
2025-04-09 14:46:45,668:INFO:Initializing predict_model()
2025-04-09 14:46:45,668:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A5190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:45,668:INFO:Checking exceptions
2025-04-09 14:46:45,668:INFO:Preloading libraries
2025-04-09 14:46:45,669:INFO:Set up data.
2025-04-09 14:46:45,673:INFO:Set up index.
2025-04-09 14:46:46,495:INFO:Initializing predict_model()
2025-04-09 14:46:46,495:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5896A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:46,495:INFO:Checking exceptions
2025-04-09 14:46:46,495:INFO:Preloading libraries
2025-04-09 14:46:46,496:INFO:Set up data.
2025-04-09 14:46:46,500:INFO:Set up index.
2025-04-09 14:46:47,351:INFO:Initializing predict_model()
2025-04-09 14:46:47,351:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B1610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:47,352:INFO:Checking exceptions
2025-04-09 14:46:47,352:INFO:Preloading libraries
2025-04-09 14:46:47,352:INFO:Set up data.
2025-04-09 14:46:47,358:INFO:Set up index.
2025-04-09 14:46:48,246:INFO:Initializing predict_model()
2025-04-09 14:46:48,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A4F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:48,246:INFO:Checking exceptions
2025-04-09 14:46:48,246:INFO:Preloading libraries
2025-04-09 14:46:48,247:INFO:Set up data.
2025-04-09 14:46:48,251:INFO:Set up index.
2025-04-09 14:46:49,021:INFO:Initializing predict_model()
2025-04-09 14:46:49,021:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58ABD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:49,021:INFO:Checking exceptions
2025-04-09 14:46:49,021:INFO:Preloading libraries
2025-04-09 14:46:49,022:INFO:Set up data.
2025-04-09 14:46:49,026:INFO:Set up index.
2025-04-09 14:46:49,804:INFO:Initializing predict_model()
2025-04-09 14:46:49,804:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:49,804:INFO:Checking exceptions
2025-04-09 14:46:49,804:INFO:Preloading libraries
2025-04-09 14:46:49,805:INFO:Set up data.
2025-04-09 14:46:49,810:INFO:Set up index.
2025-04-09 14:46:50,700:INFO:Initializing predict_model()
2025-04-09 14:46:50,700:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AA250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:50,700:INFO:Checking exceptions
2025-04-09 14:46:50,701:INFO:Preloading libraries
2025-04-09 14:46:50,701:INFO:Set up data.
2025-04-09 14:46:50,706:INFO:Set up index.
2025-04-09 14:46:51,517:INFO:Initializing predict_model()
2025-04-09 14:46:51,518:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A9D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:51,518:INFO:Checking exceptions
2025-04-09 14:46:51,518:INFO:Preloading libraries
2025-04-09 14:46:51,519:INFO:Set up data.
2025-04-09 14:46:51,526:INFO:Set up index.
2025-04-09 14:46:52,357:INFO:Initializing predict_model()
2025-04-09 14:46:52,357:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58967D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:52,357:INFO:Checking exceptions
2025-04-09 14:46:52,357:INFO:Preloading libraries
2025-04-09 14:46:52,358:INFO:Set up data.
2025-04-09 14:46:52,365:INFO:Set up index.
2025-04-09 14:46:53,188:INFO:Initializing predict_model()
2025-04-09 14:46:53,188:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5896110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:53,188:INFO:Checking exceptions
2025-04-09 14:46:53,188:INFO:Preloading libraries
2025-04-09 14:46:53,189:INFO:Set up data.
2025-04-09 14:46:53,194:INFO:Set up index.
2025-04-09 14:46:54,008:INFO:Initializing predict_model()
2025-04-09 14:46:54,008:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:54,008:INFO:Checking exceptions
2025-04-09 14:46:54,008:INFO:Preloading libraries
2025-04-09 14:46:54,009:INFO:Set up data.
2025-04-09 14:46:54,014:INFO:Set up index.
2025-04-09 14:46:54,894:INFO:Initializing predict_model()
2025-04-09 14:46:54,895:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:54,895:INFO:Checking exceptions
2025-04-09 14:46:54,895:INFO:Preloading libraries
2025-04-09 14:46:54,896:INFO:Set up data.
2025-04-09 14:46:54,904:INFO:Set up index.
2025-04-09 14:46:55,763:INFO:Initializing predict_model()
2025-04-09 14:46:55,763:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:55,763:INFO:Checking exceptions
2025-04-09 14:46:55,763:INFO:Preloading libraries
2025-04-09 14:46:55,764:INFO:Set up data.
2025-04-09 14:46:55,767:INFO:Set up index.
2025-04-09 14:46:56,568:INFO:Initializing predict_model()
2025-04-09 14:46:56,569:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:56,569:INFO:Checking exceptions
2025-04-09 14:46:56,569:INFO:Preloading libraries
2025-04-09 14:46:56,569:INFO:Set up data.
2025-04-09 14:46:56,574:INFO:Set up index.
2025-04-09 14:46:57,409:INFO:Initializing predict_model()
2025-04-09 14:46:57,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:57,410:INFO:Checking exceptions
2025-04-09 14:46:57,411:INFO:Preloading libraries
2025-04-09 14:46:57,411:INFO:Set up data.
2025-04-09 14:46:57,417:INFO:Set up index.
2025-04-09 14:46:58,266:INFO:Initializing predict_model()
2025-04-09 14:46:58,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A71D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:58,266:INFO:Checking exceptions
2025-04-09 14:46:58,266:INFO:Preloading libraries
2025-04-09 14:46:58,267:INFO:Set up data.
2025-04-09 14:46:58,272:INFO:Set up index.
2025-04-09 14:46:59,046:INFO:Initializing predict_model()
2025-04-09 14:46:59,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5895590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:59,046:INFO:Checking exceptions
2025-04-09 14:46:59,047:INFO:Preloading libraries
2025-04-09 14:46:59,047:INFO:Set up data.
2025-04-09 14:46:59,051:INFO:Set up index.
2025-04-09 14:46:59,935:INFO:Initializing predict_model()
2025-04-09 14:46:59,936:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:46:59,936:INFO:Checking exceptions
2025-04-09 14:46:59,936:INFO:Preloading libraries
2025-04-09 14:46:59,936:INFO:Set up data.
2025-04-09 14:46:59,941:INFO:Set up index.
2025-04-09 14:47:00,763:INFO:Initializing predict_model()
2025-04-09 14:47:00,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58870D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:00,764:INFO:Checking exceptions
2025-04-09 14:47:00,764:INFO:Preloading libraries
2025-04-09 14:47:00,764:INFO:Set up data.
2025-04-09 14:47:00,768:INFO:Set up index.
2025-04-09 14:47:01,589:INFO:Initializing predict_model()
2025-04-09 14:47:01,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:01,589:INFO:Checking exceptions
2025-04-09 14:47:01,589:INFO:Preloading libraries
2025-04-09 14:47:01,590:INFO:Set up data.
2025-04-09 14:47:01,595:INFO:Set up index.
2025-04-09 14:47:02,496:INFO:Initializing predict_model()
2025-04-09 14:47:02,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A6750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:02,496:INFO:Checking exceptions
2025-04-09 14:47:02,497:INFO:Preloading libraries
2025-04-09 14:47:02,497:INFO:Set up data.
2025-04-09 14:47:02,503:INFO:Set up index.
2025-04-09 14:47:03,336:INFO:Initializing predict_model()
2025-04-09 14:47:03,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:03,337:INFO:Checking exceptions
2025-04-09 14:47:03,337:INFO:Preloading libraries
2025-04-09 14:47:03,337:INFO:Set up data.
2025-04-09 14:47:03,342:INFO:Set up index.
2025-04-09 14:47:04,208:INFO:Initializing predict_model()
2025-04-09 14:47:04,208:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:04,208:INFO:Checking exceptions
2025-04-09 14:47:04,208:INFO:Preloading libraries
2025-04-09 14:47:04,209:INFO:Set up data.
2025-04-09 14:47:04,215:INFO:Set up index.
2025-04-09 14:47:05,149:INFO:Initializing predict_model()
2025-04-09 14:47:05,149:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B3A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:05,149:INFO:Checking exceptions
2025-04-09 14:47:05,149:INFO:Preloading libraries
2025-04-09 14:47:05,150:INFO:Set up data.
2025-04-09 14:47:05,154:INFO:Set up index.
2025-04-09 14:47:06,015:INFO:Initializing predict_model()
2025-04-09 14:47:06,015:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B8810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:06,015:INFO:Checking exceptions
2025-04-09 14:47:06,015:INFO:Preloading libraries
2025-04-09 14:47:06,016:INFO:Set up data.
2025-04-09 14:47:06,022:INFO:Set up index.
2025-04-09 14:47:06,790:INFO:Initializing predict_model()
2025-04-09 14:47:06,790:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58ABA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:06,790:INFO:Checking exceptions
2025-04-09 14:47:06,790:INFO:Preloading libraries
2025-04-09 14:47:06,791:INFO:Set up data.
2025-04-09 14:47:06,796:INFO:Set up index.
2025-04-09 14:47:07,653:INFO:Initializing predict_model()
2025-04-09 14:47:07,653:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B85D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:07,654:INFO:Checking exceptions
2025-04-09 14:47:07,654:INFO:Preloading libraries
2025-04-09 14:47:07,654:INFO:Set up data.
2025-04-09 14:47:07,658:INFO:Set up index.
2025-04-09 14:47:08,460:INFO:Initializing predict_model()
2025-04-09 14:47:08,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B0610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:08,460:INFO:Checking exceptions
2025-04-09 14:47:08,460:INFO:Preloading libraries
2025-04-09 14:47:08,461:INFO:Set up data.
2025-04-09 14:47:08,465:INFO:Set up index.
2025-04-09 14:47:09,232:INFO:Initializing predict_model()
2025-04-09 14:47:09,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA9A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:09,233:INFO:Checking exceptions
2025-04-09 14:47:09,233:INFO:Preloading libraries
2025-04-09 14:47:09,234:INFO:Set up data.
2025-04-09 14:47:09,240:INFO:Set up index.
2025-04-09 14:47:10,069:INFO:Initializing predict_model()
2025-04-09 14:47:10,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA9FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:10,070:INFO:Checking exceptions
2025-04-09 14:47:10,070:INFO:Preloading libraries
2025-04-09 14:47:10,070:INFO:Set up data.
2025-04-09 14:47:10,076:INFO:Set up index.
2025-04-09 14:47:10,931:INFO:Initializing predict_model()
2025-04-09 14:47:10,931:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB0190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:10,931:INFO:Checking exceptions
2025-04-09 14:47:10,931:INFO:Preloading libraries
2025-04-09 14:47:10,933:INFO:Set up data.
2025-04-09 14:47:10,939:INFO:Set up index.
2025-04-09 14:47:11,812:INFO:Initializing predict_model()
2025-04-09 14:47:11,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586EE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:11,813:INFO:Checking exceptions
2025-04-09 14:47:11,813:INFO:Preloading libraries
2025-04-09 14:47:11,814:INFO:Set up data.
2025-04-09 14:47:11,822:INFO:Set up index.
2025-04-09 14:47:12,766:INFO:Initializing predict_model()
2025-04-09 14:47:12,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B19D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:12,766:INFO:Checking exceptions
2025-04-09 14:47:12,767:INFO:Preloading libraries
2025-04-09 14:47:12,767:INFO:Set up data.
2025-04-09 14:47:12,774:INFO:Set up index.
2025-04-09 14:47:13,655:INFO:Initializing predict_model()
2025-04-09 14:47:13,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:13,655:INFO:Checking exceptions
2025-04-09 14:47:13,655:INFO:Preloading libraries
2025-04-09 14:47:13,656:INFO:Set up data.
2025-04-09 14:47:13,661:INFO:Set up index.
2025-04-09 14:47:14,567:INFO:Initializing predict_model()
2025-04-09 14:47:14,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587F710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:14,568:INFO:Checking exceptions
2025-04-09 14:47:14,568:INFO:Preloading libraries
2025-04-09 14:47:14,568:INFO:Set up data.
2025-04-09 14:47:14,575:INFO:Set up index.
2025-04-09 14:47:15,426:INFO:Initializing predict_model()
2025-04-09 14:47:15,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:15,426:INFO:Checking exceptions
2025-04-09 14:47:15,427:INFO:Preloading libraries
2025-04-09 14:47:15,427:INFO:Set up data.
2025-04-09 14:47:15,433:INFO:Set up index.
2025-04-09 14:47:16,376:INFO:Initializing predict_model()
2025-04-09 14:47:16,376:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5891E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:16,376:INFO:Checking exceptions
2025-04-09 14:47:16,377:INFO:Preloading libraries
2025-04-09 14:47:16,377:INFO:Set up data.
2025-04-09 14:47:16,384:INFO:Set up index.
2025-04-09 14:47:17,380:INFO:Initializing predict_model()
2025-04-09 14:47:17,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:17,380:INFO:Checking exceptions
2025-04-09 14:47:17,380:INFO:Preloading libraries
2025-04-09 14:47:17,381:INFO:Set up data.
2025-04-09 14:47:17,386:INFO:Set up index.
2025-04-09 14:47:18,288:INFO:Initializing predict_model()
2025-04-09 14:47:18,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBB790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:18,288:INFO:Checking exceptions
2025-04-09 14:47:18,288:INFO:Preloading libraries
2025-04-09 14:47:18,289:INFO:Set up data.
2025-04-09 14:47:18,296:INFO:Set up index.
2025-04-09 14:47:19,147:INFO:Initializing predict_model()
2025-04-09 14:47:19,147:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B1610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:19,147:INFO:Checking exceptions
2025-04-09 14:47:19,147:INFO:Preloading libraries
2025-04-09 14:47:19,148:INFO:Set up data.
2025-04-09 14:47:19,154:INFO:Set up index.
2025-04-09 14:47:19,983:INFO:Initializing predict_model()
2025-04-09 14:47:19,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:19,984:INFO:Checking exceptions
2025-04-09 14:47:19,984:INFO:Preloading libraries
2025-04-09 14:47:19,984:INFO:Set up data.
2025-04-09 14:47:19,989:INFO:Set up index.
2025-04-09 14:47:20,817:INFO:Initializing predict_model()
2025-04-09 14:47:20,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:20,817:INFO:Checking exceptions
2025-04-09 14:47:20,818:INFO:Preloading libraries
2025-04-09 14:47:20,818:INFO:Set up data.
2025-04-09 14:47:20,823:INFO:Set up index.
2025-04-09 14:47:21,773:INFO:Initializing predict_model()
2025-04-09 14:47:21,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA0AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:21,774:INFO:Checking exceptions
2025-04-09 14:47:21,774:INFO:Preloading libraries
2025-04-09 14:47:21,774:INFO:Set up data.
2025-04-09 14:47:21,782:INFO:Set up index.
2025-04-09 14:47:22,748:INFO:Initializing predict_model()
2025-04-09 14:47:22,748:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B9E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:22,748:INFO:Checking exceptions
2025-04-09 14:47:22,749:INFO:Preloading libraries
2025-04-09 14:47:22,749:INFO:Set up data.
2025-04-09 14:47:22,756:INFO:Set up index.
2025-04-09 14:47:23,659:INFO:Initializing predict_model()
2025-04-09 14:47:23,660:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB8D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:23,660:INFO:Checking exceptions
2025-04-09 14:47:23,660:INFO:Preloading libraries
2025-04-09 14:47:23,661:INFO:Set up data.
2025-04-09 14:47:23,666:INFO:Set up index.
2025-04-09 14:47:24,635:INFO:Initializing predict_model()
2025-04-09 14:47:24,635:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBA5D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:24,635:INFO:Checking exceptions
2025-04-09 14:47:24,635:INFO:Preloading libraries
2025-04-09 14:47:24,636:INFO:Set up data.
2025-04-09 14:47:24,641:INFO:Set up index.
2025-04-09 14:47:25,538:INFO:Initializing predict_model()
2025-04-09 14:47:25,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBAA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:25,539:INFO:Checking exceptions
2025-04-09 14:47:25,539:INFO:Preloading libraries
2025-04-09 14:47:25,539:INFO:Set up data.
2025-04-09 14:47:25,545:INFO:Set up index.
2025-04-09 14:47:26,459:INFO:Initializing predict_model()
2025-04-09 14:47:26,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:26,459:INFO:Checking exceptions
2025-04-09 14:47:26,459:INFO:Preloading libraries
2025-04-09 14:47:26,460:INFO:Set up data.
2025-04-09 14:47:26,467:INFO:Set up index.
2025-04-09 14:47:27,340:INFO:Initializing predict_model()
2025-04-09 14:47:27,341:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BB2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:27,341:INFO:Checking exceptions
2025-04-09 14:47:27,341:INFO:Preloading libraries
2025-04-09 14:47:27,341:INFO:Set up data.
2025-04-09 14:47:27,346:INFO:Set up index.
2025-04-09 14:47:28,237:INFO:Initializing predict_model()
2025-04-09 14:47:28,237:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:28,237:INFO:Checking exceptions
2025-04-09 14:47:28,238:INFO:Preloading libraries
2025-04-09 14:47:28,238:INFO:Set up data.
2025-04-09 14:47:28,245:INFO:Set up index.
2025-04-09 14:47:29,239:INFO:Initializing predict_model()
2025-04-09 14:47:29,240:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:29,240:INFO:Checking exceptions
2025-04-09 14:47:29,240:INFO:Preloading libraries
2025-04-09 14:47:29,241:INFO:Set up data.
2025-04-09 14:47:29,250:INFO:Set up index.
2025-04-09 14:47:30,135:INFO:Initializing predict_model()
2025-04-09 14:47:30,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:30,136:INFO:Checking exceptions
2025-04-09 14:47:30,136:INFO:Preloading libraries
2025-04-09 14:47:30,136:INFO:Set up data.
2025-04-09 14:47:30,143:INFO:Set up index.
2025-04-09 14:47:31,042:INFO:Initializing predict_model()
2025-04-09 14:47:31,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B1450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:47:31,043:INFO:Checking exceptions
2025-04-09 14:47:31,043:INFO:Preloading libraries
2025-04-09 14:47:31,043:INFO:Set up data.
2025-04-09 14:47:31,049:INFO:Set up index.
2025-04-09 14:47:31,997:INFO:Initializing predict_model()
2025-04-09 14:47:31,997:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA3E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:31,997:INFO:Checking exceptions
2025-04-09 14:47:31,997:INFO:Preloading libraries
2025-04-09 14:47:31,998:INFO:Set up data.
2025-04-09 14:47:32,005:INFO:Set up index.
2025-04-09 14:47:32,915:INFO:Initializing predict_model()
2025-04-09 14:47:32,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5895AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:32,916:INFO:Checking exceptions
2025-04-09 14:47:32,916:INFO:Preloading libraries
2025-04-09 14:47:32,917:INFO:Set up data.
2025-04-09 14:47:32,922:INFO:Set up index.
2025-04-09 14:47:33,863:INFO:Initializing predict_model()
2025-04-09 14:47:33,863:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:33,863:INFO:Checking exceptions
2025-04-09 14:47:33,863:INFO:Preloading libraries
2025-04-09 14:47:33,863:INFO:Set up data.
2025-04-09 14:47:33,872:INFO:Set up index.
2025-04-09 14:47:34,775:INFO:Initializing predict_model()
2025-04-09 14:47:34,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBBE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:34,775:INFO:Checking exceptions
2025-04-09 14:47:34,776:INFO:Preloading libraries
2025-04-09 14:47:34,776:INFO:Set up data.
2025-04-09 14:47:34,783:INFO:Set up index.
2025-04-09 14:47:35,674:INFO:Initializing predict_model()
2025-04-09 14:47:35,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:35,674:INFO:Checking exceptions
2025-04-09 14:47:35,675:INFO:Preloading libraries
2025-04-09 14:47:35,675:INFO:Set up data.
2025-04-09 14:47:35,681:INFO:Set up index.
2025-04-09 14:47:36,647:INFO:Initializing predict_model()
2025-04-09 14:47:36,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5896F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:36,648:INFO:Checking exceptions
2025-04-09 14:47:36,648:INFO:Preloading libraries
2025-04-09 14:47:36,649:INFO:Set up data.
2025-04-09 14:47:36,655:INFO:Set up index.
2025-04-09 14:47:37,580:INFO:Initializing predict_model()
2025-04-09 14:47:37,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:37,581:INFO:Checking exceptions
2025-04-09 14:47:37,581:INFO:Preloading libraries
2025-04-09 14:47:37,582:INFO:Set up data.
2025-04-09 14:47:37,588:INFO:Set up index.
2025-04-09 14:47:38,422:INFO:Initializing predict_model()
2025-04-09 14:47:38,423:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B3510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:38,423:INFO:Checking exceptions
2025-04-09 14:47:38,423:INFO:Preloading libraries
2025-04-09 14:47:38,424:INFO:Set up data.
2025-04-09 14:47:38,429:INFO:Set up index.
2025-04-09 14:47:39,321:INFO:Initializing predict_model()
2025-04-09 14:47:39,321:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:39,321:INFO:Checking exceptions
2025-04-09 14:47:39,321:INFO:Preloading libraries
2025-04-09 14:47:39,322:INFO:Set up data.
2025-04-09 14:47:39,328:INFO:Set up index.
2025-04-09 14:47:40,159:INFO:Initializing predict_model()
2025-04-09 14:47:40,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:40,159:INFO:Checking exceptions
2025-04-09 14:47:40,159:INFO:Preloading libraries
2025-04-09 14:47:40,160:INFO:Set up data.
2025-04-09 14:47:40,165:INFO:Set up index.
2025-04-09 14:47:40,960:INFO:Initializing predict_model()
2025-04-09 14:47:40,960:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:40,960:INFO:Checking exceptions
2025-04-09 14:47:40,960:INFO:Preloading libraries
2025-04-09 14:47:40,961:INFO:Set up data.
2025-04-09 14:47:40,965:INFO:Set up index.
2025-04-09 14:47:41,856:INFO:Initializing predict_model()
2025-04-09 14:47:41,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:41,856:INFO:Checking exceptions
2025-04-09 14:47:41,856:INFO:Preloading libraries
2025-04-09 14:47:41,857:INFO:Set up data.
2025-04-09 14:47:41,862:INFO:Set up index.
2025-04-09 14:47:42,688:INFO:Initializing predict_model()
2025-04-09 14:47:42,688:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5861810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:42,688:INFO:Checking exceptions
2025-04-09 14:47:42,688:INFO:Preloading libraries
2025-04-09 14:47:42,689:INFO:Set up data.
2025-04-09 14:47:42,696:INFO:Set up index.
2025-04-09 14:47:43,522:INFO:Initializing predict_model()
2025-04-09 14:47:43,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:43,523:INFO:Checking exceptions
2025-04-09 14:47:43,523:INFO:Preloading libraries
2025-04-09 14:47:43,524:INFO:Set up data.
2025-04-09 14:47:43,531:INFO:Set up index.
2025-04-09 14:47:44,425:INFO:Initializing predict_model()
2025-04-09 14:47:44,425:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:44,425:INFO:Checking exceptions
2025-04-09 14:47:44,425:INFO:Preloading libraries
2025-04-09 14:47:44,426:INFO:Set up data.
2025-04-09 14:47:44,432:INFO:Set up index.
2025-04-09 14:47:45,309:INFO:Initializing predict_model()
2025-04-09 14:47:45,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A5990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:45,310:INFO:Checking exceptions
2025-04-09 14:47:45,310:INFO:Preloading libraries
2025-04-09 14:47:45,310:INFO:Set up data.
2025-04-09 14:47:45,315:INFO:Set up index.
2025-04-09 14:47:46,180:INFO:Initializing predict_model()
2025-04-09 14:47:46,181:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C586D610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:46,181:INFO:Checking exceptions
2025-04-09 14:47:46,181:INFO:Preloading libraries
2025-04-09 14:47:46,181:INFO:Set up data.
2025-04-09 14:47:46,186:INFO:Set up index.
2025-04-09 14:47:47,001:INFO:Initializing predict_model()
2025-04-09 14:47:47,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:47,001:INFO:Checking exceptions
2025-04-09 14:47:47,002:INFO:Preloading libraries
2025-04-09 14:47:47,002:INFO:Set up data.
2025-04-09 14:47:47,007:INFO:Set up index.
2025-04-09 14:47:47,812:INFO:Initializing predict_model()
2025-04-09 14:47:47,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:47,813:INFO:Checking exceptions
2025-04-09 14:47:47,813:INFO:Preloading libraries
2025-04-09 14:47:47,813:INFO:Set up data.
2025-04-09 14:47:47,818:INFO:Set up index.
2025-04-09 14:47:48,690:INFO:Initializing predict_model()
2025-04-09 14:47:48,690:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:48,690:INFO:Checking exceptions
2025-04-09 14:47:48,690:INFO:Preloading libraries
2025-04-09 14:47:48,691:INFO:Set up data.
2025-04-09 14:47:48,696:INFO:Set up index.
2025-04-09 14:47:49,534:INFO:Initializing predict_model()
2025-04-09 14:47:49,535:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB6350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:49,535:INFO:Checking exceptions
2025-04-09 14:47:49,535:INFO:Preloading libraries
2025-04-09 14:47:49,536:INFO:Set up data.
2025-04-09 14:47:49,540:INFO:Set up index.
2025-04-09 14:47:50,318:INFO:Initializing predict_model()
2025-04-09 14:47:50,318:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:50,318:INFO:Checking exceptions
2025-04-09 14:47:50,318:INFO:Preloading libraries
2025-04-09 14:47:50,319:INFO:Set up data.
2025-04-09 14:47:50,324:INFO:Set up index.
2025-04-09 14:47:51,177:INFO:Initializing predict_model()
2025-04-09 14:47:51,178:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:51,178:INFO:Checking exceptions
2025-04-09 14:47:51,178:INFO:Preloading libraries
2025-04-09 14:47:51,178:INFO:Set up data.
2025-04-09 14:47:51,183:INFO:Set up index.
2025-04-09 14:47:51,970:INFO:Initializing predict_model()
2025-04-09 14:47:51,970:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A6B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:51,970:INFO:Checking exceptions
2025-04-09 14:47:51,970:INFO:Preloading libraries
2025-04-09 14:47:51,971:INFO:Set up data.
2025-04-09 14:47:51,976:INFO:Set up index.
2025-04-09 14:47:52,883:INFO:Initializing predict_model()
2025-04-09 14:47:52,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBFFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:52,883:INFO:Checking exceptions
2025-04-09 14:47:52,883:INFO:Preloading libraries
2025-04-09 14:47:52,884:INFO:Set up data.
2025-04-09 14:47:52,889:INFO:Set up index.
2025-04-09 14:47:53,789:INFO:Initializing predict_model()
2025-04-09 14:47:53,790:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BBA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:53,790:INFO:Checking exceptions
2025-04-09 14:47:53,790:INFO:Preloading libraries
2025-04-09 14:47:53,790:INFO:Set up data.
2025-04-09 14:47:53,796:INFO:Set up index.
2025-04-09 14:47:54,626:INFO:Initializing predict_model()
2025-04-09 14:47:54,626:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B26D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:54,627:INFO:Checking exceptions
2025-04-09 14:47:54,627:INFO:Preloading libraries
2025-04-09 14:47:54,627:INFO:Set up data.
2025-04-09 14:47:54,632:INFO:Set up index.
2025-04-09 14:47:55,414:INFO:Initializing predict_model()
2025-04-09 14:47:55,415:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA3150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:55,415:INFO:Checking exceptions
2025-04-09 14:47:55,415:INFO:Preloading libraries
2025-04-09 14:47:55,415:INFO:Set up data.
2025-04-09 14:47:55,419:INFO:Set up index.
2025-04-09 14:47:56,283:INFO:Initializing predict_model()
2025-04-09 14:47:56,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA2190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:56,284:INFO:Checking exceptions
2025-04-09 14:47:56,284:INFO:Preloading libraries
2025-04-09 14:47:56,284:INFO:Set up data.
2025-04-09 14:47:56,290:INFO:Set up index.
2025-04-09 14:47:57,070:INFO:Initializing predict_model()
2025-04-09 14:47:57,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBE9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:57,072:INFO:Checking exceptions
2025-04-09 14:47:57,072:INFO:Preloading libraries
2025-04-09 14:47:57,072:INFO:Set up data.
2025-04-09 14:47:57,077:INFO:Set up index.
2025-04-09 14:47:57,882:INFO:Initializing predict_model()
2025-04-09 14:47:57,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB14D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:57,883:INFO:Checking exceptions
2025-04-09 14:47:57,883:INFO:Preloading libraries
2025-04-09 14:47:57,883:INFO:Set up data.
2025-04-09 14:47:57,889:INFO:Set up index.
2025-04-09 14:47:58,762:INFO:Initializing predict_model()
2025-04-09 14:47:58,763:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58AAA90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:58,763:INFO:Checking exceptions
2025-04-09 14:47:58,763:INFO:Preloading libraries
2025-04-09 14:47:58,763:INFO:Set up data.
2025-04-09 14:47:58,768:INFO:Set up index.
2025-04-09 14:47:59,557:INFO:Initializing predict_model()
2025-04-09 14:47:59,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA2810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:47:59,558:INFO:Checking exceptions
2025-04-09 14:47:59,558:INFO:Preloading libraries
2025-04-09 14:47:59,558:INFO:Set up data.
2025-04-09 14:47:59,563:INFO:Set up index.
2025-04-09 14:48:00,390:INFO:Initializing predict_model()
2025-04-09 14:48:00,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5884E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:00,391:INFO:Checking exceptions
2025-04-09 14:48:00,391:INFO:Preloading libraries
2025-04-09 14:48:00,392:INFO:Set up data.
2025-04-09 14:48:00,398:INFO:Set up index.
2025-04-09 14:48:01,307:INFO:Initializing predict_model()
2025-04-09 14:48:01,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:01,307:INFO:Checking exceptions
2025-04-09 14:48:01,307:INFO:Preloading libraries
2025-04-09 14:48:01,308:INFO:Set up data.
2025-04-09 14:48:01,313:INFO:Set up index.
2025-04-09 14:48:02,105:INFO:Initializing predict_model()
2025-04-09 14:48:02,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B39D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:02,106:INFO:Checking exceptions
2025-04-09 14:48:02,106:INFO:Preloading libraries
2025-04-09 14:48:02,106:INFO:Set up data.
2025-04-09 14:48:02,113:INFO:Set up index.
2025-04-09 14:48:02,994:INFO:Initializing predict_model()
2025-04-09 14:48:02,994:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B0E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:02,995:INFO:Checking exceptions
2025-04-09 14:48:02,995:INFO:Preloading libraries
2025-04-09 14:48:02,995:INFO:Set up data.
2025-04-09 14:48:03,004:INFO:Set up index.
2025-04-09 14:48:03,806:INFO:Initializing predict_model()
2025-04-09 14:48:03,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A1750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:03,807:INFO:Checking exceptions
2025-04-09 14:48:03,807:INFO:Preloading libraries
2025-04-09 14:48:03,807:INFO:Set up data.
2025-04-09 14:48:03,812:INFO:Set up index.
2025-04-09 14:48:04,587:INFO:Initializing predict_model()
2025-04-09 14:48:04,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B9010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:04,588:INFO:Checking exceptions
2025-04-09 14:48:04,588:INFO:Preloading libraries
2025-04-09 14:48:04,589:INFO:Set up data.
2025-04-09 14:48:04,594:INFO:Set up index.
2025-04-09 14:48:05,428:INFO:Initializing predict_model()
2025-04-09 14:48:05,428:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA0250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:05,428:INFO:Checking exceptions
2025-04-09 14:48:05,428:INFO:Preloading libraries
2025-04-09 14:48:05,429:INFO:Set up data.
2025-04-09 14:48:05,436:INFO:Set up index.
2025-04-09 14:48:06,274:INFO:Initializing predict_model()
2025-04-09 14:48:06,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB8C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:06,274:INFO:Checking exceptions
2025-04-09 14:48:06,274:INFO:Preloading libraries
2025-04-09 14:48:06,275:INFO:Set up data.
2025-04-09 14:48:06,281:INFO:Set up index.
2025-04-09 14:48:07,207:INFO:Initializing predict_model()
2025-04-09 14:48:07,208:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:07,208:INFO:Checking exceptions
2025-04-09 14:48:07,208:INFO:Preloading libraries
2025-04-09 14:48:07,209:INFO:Set up data.
2025-04-09 14:48:07,215:INFO:Set up index.
2025-04-09 14:48:08,288:INFO:Initializing predict_model()
2025-04-09 14:48:08,288:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCB490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:08,288:INFO:Checking exceptions
2025-04-09 14:48:08,288:INFO:Preloading libraries
2025-04-09 14:48:08,289:INFO:Set up data.
2025-04-09 14:48:08,296:INFO:Set up index.
2025-04-09 14:48:09,364:INFO:Initializing predict_model()
2025-04-09 14:48:09,364:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB3050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:09,365:INFO:Checking exceptions
2025-04-09 14:48:09,365:INFO:Preloading libraries
2025-04-09 14:48:09,365:INFO:Set up data.
2025-04-09 14:48:09,373:INFO:Set up index.
2025-04-09 14:48:10,350:INFO:Initializing predict_model()
2025-04-09 14:48:10,351:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:10,351:INFO:Checking exceptions
2025-04-09 14:48:10,351:INFO:Preloading libraries
2025-04-09 14:48:10,352:INFO:Set up data.
2025-04-09 14:48:10,358:INFO:Set up index.
2025-04-09 14:48:11,158:INFO:Initializing predict_model()
2025-04-09 14:48:11,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCAB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:11,159:INFO:Checking exceptions
2025-04-09 14:48:11,159:INFO:Preloading libraries
2025-04-09 14:48:11,160:INFO:Set up data.
2025-04-09 14:48:11,165:INFO:Set up index.
2025-04-09 14:48:11,960:INFO:Initializing predict_model()
2025-04-09 14:48:11,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA36D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:11,961:INFO:Checking exceptions
2025-04-09 14:48:11,961:INFO:Preloading libraries
2025-04-09 14:48:11,961:INFO:Set up data.
2025-04-09 14:48:11,966:INFO:Set up index.
2025-04-09 14:48:12,886:INFO:Initializing predict_model()
2025-04-09 14:48:12,886:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:12,886:INFO:Checking exceptions
2025-04-09 14:48:12,886:INFO:Preloading libraries
2025-04-09 14:48:12,887:INFO:Set up data.
2025-04-09 14:48:12,895:INFO:Set up index.
2025-04-09 14:48:13,718:INFO:Initializing predict_model()
2025-04-09 14:48:13,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBC750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:13,718:INFO:Checking exceptions
2025-04-09 14:48:13,718:INFO:Preloading libraries
2025-04-09 14:48:13,719:INFO:Set up data.
2025-04-09 14:48:13,724:INFO:Set up index.
2025-04-09 14:48:14,556:INFO:Initializing predict_model()
2025-04-09 14:48:14,556:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA0250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:14,556:INFO:Checking exceptions
2025-04-09 14:48:14,556:INFO:Preloading libraries
2025-04-09 14:48:14,557:INFO:Set up data.
2025-04-09 14:48:14,563:INFO:Set up index.
2025-04-09 14:48:15,446:INFO:Initializing predict_model()
2025-04-09 14:48:15,447:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBE190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:15,447:INFO:Checking exceptions
2025-04-09 14:48:15,447:INFO:Preloading libraries
2025-04-09 14:48:15,448:INFO:Set up data.
2025-04-09 14:48:15,454:INFO:Set up index.
2025-04-09 14:48:16,312:INFO:Initializing predict_model()
2025-04-09 14:48:16,313:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB9010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:16,313:INFO:Checking exceptions
2025-04-09 14:48:16,313:INFO:Preloading libraries
2025-04-09 14:48:16,314:INFO:Set up data.
2025-04-09 14:48:16,320:INFO:Set up index.
2025-04-09 14:48:17,247:INFO:Initializing predict_model()
2025-04-09 14:48:17,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBA890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:17,247:INFO:Checking exceptions
2025-04-09 14:48:17,247:INFO:Preloading libraries
2025-04-09 14:48:17,248:INFO:Set up data.
2025-04-09 14:48:17,254:INFO:Set up index.
2025-04-09 14:48:18,187:INFO:Initializing predict_model()
2025-04-09 14:48:18,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB9610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:18,187:INFO:Checking exceptions
2025-04-09 14:48:18,187:INFO:Preloading libraries
2025-04-09 14:48:18,188:INFO:Set up data.
2025-04-09 14:48:18,195:INFO:Set up index.
2025-04-09 14:48:19,107:INFO:Initializing predict_model()
2025-04-09 14:48:19,107:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B30D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:19,107:INFO:Checking exceptions
2025-04-09 14:48:19,108:INFO:Preloading libraries
2025-04-09 14:48:19,108:INFO:Set up data.
2025-04-09 14:48:19,115:INFO:Set up index.
2025-04-09 14:48:20,088:INFO:Initializing predict_model()
2025-04-09 14:48:20,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB6410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:20,088:INFO:Checking exceptions
2025-04-09 14:48:20,088:INFO:Preloading libraries
2025-04-09 14:48:20,089:INFO:Set up data.
2025-04-09 14:48:20,097:INFO:Set up index.
2025-04-09 14:48:21,050:INFO:Initializing predict_model()
2025-04-09 14:48:21,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A31D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:21,050:INFO:Checking exceptions
2025-04-09 14:48:21,050:INFO:Preloading libraries
2025-04-09 14:48:21,051:INFO:Set up data.
2025-04-09 14:48:21,056:INFO:Set up index.
2025-04-09 14:48:21,903:INFO:Initializing predict_model()
2025-04-09 14:48:21,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:21,903:INFO:Checking exceptions
2025-04-09 14:48:21,903:INFO:Preloading libraries
2025-04-09 14:48:21,904:INFO:Set up data.
2025-04-09 14:48:21,909:INFO:Set up index.
2025-04-09 14:48:22,812:INFO:Initializing predict_model()
2025-04-09 14:48:22,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBBB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:22,813:INFO:Checking exceptions
2025-04-09 14:48:22,813:INFO:Preloading libraries
2025-04-09 14:48:22,813:INFO:Set up data.
2025-04-09 14:48:22,819:INFO:Set up index.
2025-04-09 14:48:23,644:INFO:Initializing predict_model()
2025-04-09 14:48:23,644:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:23,645:INFO:Checking exceptions
2025-04-09 14:48:23,645:INFO:Preloading libraries
2025-04-09 14:48:23,645:INFO:Set up data.
2025-04-09 14:48:23,652:INFO:Set up index.
2025-04-09 14:48:24,467:INFO:Initializing predict_model()
2025-04-09 14:48:24,467:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA2D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:24,467:INFO:Checking exceptions
2025-04-09 14:48:24,467:INFO:Preloading libraries
2025-04-09 14:48:24,467:INFO:Set up data.
2025-04-09 14:48:24,472:INFO:Set up index.
2025-04-09 14:48:25,458:INFO:Initializing predict_model()
2025-04-09 14:48:25,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:25,459:INFO:Checking exceptions
2025-04-09 14:48:25,459:INFO:Preloading libraries
2025-04-09 14:48:25,459:INFO:Set up data.
2025-04-09 14:48:25,463:INFO:Set up index.
2025-04-09 14:48:26,242:INFO:Initializing predict_model()
2025-04-09 14:48:26,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA0D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:26,243:INFO:Checking exceptions
2025-04-09 14:48:26,243:INFO:Preloading libraries
2025-04-09 14:48:26,243:INFO:Set up data.
2025-04-09 14:48:26,248:INFO:Set up index.
2025-04-09 14:48:27,032:INFO:Initializing predict_model()
2025-04-09 14:48:27,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB24D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:27,033:INFO:Checking exceptions
2025-04-09 14:48:27,033:INFO:Preloading libraries
2025-04-09 14:48:27,033:INFO:Set up data.
2025-04-09 14:48:27,038:INFO:Set up index.
2025-04-09 14:48:27,938:INFO:Initializing predict_model()
2025-04-09 14:48:27,938:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:27,938:INFO:Checking exceptions
2025-04-09 14:48:27,938:INFO:Preloading libraries
2025-04-09 14:48:27,939:INFO:Set up data.
2025-04-09 14:48:27,944:INFO:Set up index.
2025-04-09 14:48:28,762:INFO:Initializing predict_model()
2025-04-09 14:48:28,762:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:28,763:INFO:Checking exceptions
2025-04-09 14:48:28,763:INFO:Preloading libraries
2025-04-09 14:48:28,763:INFO:Set up data.
2025-04-09 14:48:28,768:INFO:Set up index.
2025-04-09 14:48:29,579:INFO:Initializing predict_model()
2025-04-09 14:48:29,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB8210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB31EDE0>)
2025-04-09 14:48:29,580:INFO:Checking exceptions
2025-04-09 14:48:29,580:INFO:Preloading libraries
2025-04-09 14:48:29,580:INFO:Set up data.
2025-04-09 14:48:29,585:INFO:Set up index.
2025-04-09 14:48:33,597:INFO:Initializing predict_model()
2025-04-09 14:48:33,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB4CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:33,597:INFO:Checking exceptions
2025-04-09 14:48:33,597:INFO:Preloading libraries
2025-04-09 14:48:33,598:INFO:Set up data.
2025-04-09 14:48:33,603:INFO:Set up index.
2025-04-09 14:48:34,369:INFO:Initializing predict_model()
2025-04-09 14:48:34,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:34,369:INFO:Checking exceptions
2025-04-09 14:48:34,369:INFO:Preloading libraries
2025-04-09 14:48:34,370:INFO:Set up data.
2025-04-09 14:48:34,375:INFO:Set up index.
2025-04-09 14:48:35,234:INFO:Initializing predict_model()
2025-04-09 14:48:35,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5887B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:35,235:INFO:Checking exceptions
2025-04-09 14:48:35,235:INFO:Preloading libraries
2025-04-09 14:48:35,236:INFO:Set up data.
2025-04-09 14:48:35,240:INFO:Set up index.
2025-04-09 14:48:36,039:INFO:Initializing predict_model()
2025-04-09 14:48:36,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBB610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:36,039:INFO:Checking exceptions
2025-04-09 14:48:36,039:INFO:Preloading libraries
2025-04-09 14:48:36,040:INFO:Set up data.
2025-04-09 14:48:36,045:INFO:Set up index.
2025-04-09 14:48:36,819:INFO:Initializing predict_model()
2025-04-09 14:48:36,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB0510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:36,819:INFO:Checking exceptions
2025-04-09 14:48:36,819:INFO:Preloading libraries
2025-04-09 14:48:36,820:INFO:Set up data.
2025-04-09 14:48:36,824:INFO:Set up index.
2025-04-09 14:48:37,692:INFO:Initializing predict_model()
2025-04-09 14:48:37,693:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBBF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:37,693:INFO:Checking exceptions
2025-04-09 14:48:37,693:INFO:Preloading libraries
2025-04-09 14:48:37,693:INFO:Set up data.
2025-04-09 14:48:37,698:INFO:Set up index.
2025-04-09 14:48:38,500:INFO:Initializing predict_model()
2025-04-09 14:48:38,501:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:38,501:INFO:Checking exceptions
2025-04-09 14:48:38,501:INFO:Preloading libraries
2025-04-09 14:48:38,501:INFO:Set up data.
2025-04-09 14:48:38,508:INFO:Set up index.
2025-04-09 14:48:39,290:INFO:Initializing predict_model()
2025-04-09 14:48:39,291:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD98D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:39,291:INFO:Checking exceptions
2025-04-09 14:48:39,291:INFO:Preloading libraries
2025-04-09 14:48:39,291:INFO:Set up data.
2025-04-09 14:48:39,296:INFO:Set up index.
2025-04-09 14:48:40,190:INFO:Initializing predict_model()
2025-04-09 14:48:40,190:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB81D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:40,191:INFO:Checking exceptions
2025-04-09 14:48:40,191:INFO:Preloading libraries
2025-04-09 14:48:40,191:INFO:Set up data.
2025-04-09 14:48:40,196:INFO:Set up index.
2025-04-09 14:48:41,096:INFO:Initializing predict_model()
2025-04-09 14:48:41,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:41,096:INFO:Checking exceptions
2025-04-09 14:48:41,096:INFO:Preloading libraries
2025-04-09 14:48:41,097:INFO:Set up data.
2025-04-09 14:48:41,101:INFO:Set up index.
2025-04-09 14:48:41,888:INFO:Initializing predict_model()
2025-04-09 14:48:41,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B9C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:41,888:INFO:Checking exceptions
2025-04-09 14:48:41,888:INFO:Preloading libraries
2025-04-09 14:48:41,888:INFO:Set up data.
2025-04-09 14:48:41,893:INFO:Set up index.
2025-04-09 14:48:42,900:INFO:Initializing predict_model()
2025-04-09 14:48:42,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDA590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:42,900:INFO:Checking exceptions
2025-04-09 14:48:42,900:INFO:Preloading libraries
2025-04-09 14:48:42,901:INFO:Set up data.
2025-04-09 14:48:42,907:INFO:Set up index.
2025-04-09 14:48:43,893:INFO:Initializing predict_model()
2025-04-09 14:48:43,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBE550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:43,893:INFO:Checking exceptions
2025-04-09 14:48:43,893:INFO:Preloading libraries
2025-04-09 14:48:43,894:INFO:Set up data.
2025-04-09 14:48:43,898:INFO:Set up index.
2025-04-09 14:48:44,751:INFO:Initializing predict_model()
2025-04-09 14:48:44,751:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB9B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:44,752:INFO:Checking exceptions
2025-04-09 14:48:44,752:INFO:Preloading libraries
2025-04-09 14:48:44,753:INFO:Set up data.
2025-04-09 14:48:44,759:INFO:Set up index.
2025-04-09 14:48:45,597:INFO:Initializing predict_model()
2025-04-09 14:48:45,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBA550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:45,598:INFO:Checking exceptions
2025-04-09 14:48:45,598:INFO:Preloading libraries
2025-04-09 14:48:45,598:INFO:Set up data.
2025-04-09 14:48:45,604:INFO:Set up index.
2025-04-09 14:48:46,445:INFO:Initializing predict_model()
2025-04-09 14:48:46,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A4E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:46,445:INFO:Checking exceptions
2025-04-09 14:48:46,445:INFO:Preloading libraries
2025-04-09 14:48:46,446:INFO:Set up data.
2025-04-09 14:48:46,451:INFO:Set up index.
2025-04-09 14:48:47,305:INFO:Initializing predict_model()
2025-04-09 14:48:47,305:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:47,306:INFO:Checking exceptions
2025-04-09 14:48:47,306:INFO:Preloading libraries
2025-04-09 14:48:47,306:INFO:Set up data.
2025-04-09 14:48:47,312:INFO:Set up index.
2025-04-09 14:48:48,125:INFO:Initializing predict_model()
2025-04-09 14:48:48,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A5D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:48,126:INFO:Checking exceptions
2025-04-09 14:48:48,126:INFO:Preloading libraries
2025-04-09 14:48:48,126:INFO:Set up data.
2025-04-09 14:48:48,132:INFO:Set up index.
2025-04-09 14:48:48,998:INFO:Initializing predict_model()
2025-04-09 14:48:48,998:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBCD50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:48,998:INFO:Checking exceptions
2025-04-09 14:48:48,999:INFO:Preloading libraries
2025-04-09 14:48:48,999:INFO:Set up data.
2025-04-09 14:48:49,005:INFO:Set up index.
2025-04-09 14:48:49,916:INFO:Initializing predict_model()
2025-04-09 14:48:49,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBAD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:49,916:INFO:Checking exceptions
2025-04-09 14:48:49,916:INFO:Preloading libraries
2025-04-09 14:48:49,917:INFO:Set up data.
2025-04-09 14:48:49,921:INFO:Set up index.
2025-04-09 14:48:50,746:INFO:Initializing predict_model()
2025-04-09 14:48:50,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCB850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:50,746:INFO:Checking exceptions
2025-04-09 14:48:50,747:INFO:Preloading libraries
2025-04-09 14:48:50,747:INFO:Set up data.
2025-04-09 14:48:50,751:INFO:Set up index.
2025-04-09 14:48:51,562:INFO:Initializing predict_model()
2025-04-09 14:48:51,563:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBDA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:51,563:INFO:Checking exceptions
2025-04-09 14:48:51,563:INFO:Preloading libraries
2025-04-09 14:48:51,563:INFO:Set up data.
2025-04-09 14:48:51,569:INFO:Set up index.
2025-04-09 14:48:52,430:INFO:Initializing predict_model()
2025-04-09 14:48:52,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:52,431:INFO:Checking exceptions
2025-04-09 14:48:52,431:INFO:Preloading libraries
2025-04-09 14:48:52,431:INFO:Set up data.
2025-04-09 14:48:52,435:INFO:Set up index.
2025-04-09 14:48:53,292:INFO:Initializing predict_model()
2025-04-09 14:48:53,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD9B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:53,293:INFO:Checking exceptions
2025-04-09 14:48:53,293:INFO:Preloading libraries
2025-04-09 14:48:53,294:INFO:Set up data.
2025-04-09 14:48:53,299:INFO:Set up index.
2025-04-09 14:48:54,161:INFO:Initializing predict_model()
2025-04-09 14:48:54,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5885190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:54,162:INFO:Checking exceptions
2025-04-09 14:48:54,162:INFO:Preloading libraries
2025-04-09 14:48:54,162:INFO:Set up data.
2025-04-09 14:48:54,167:INFO:Set up index.
2025-04-09 14:48:55,012:INFO:Initializing predict_model()
2025-04-09 14:48:55,012:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBD390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:55,012:INFO:Checking exceptions
2025-04-09 14:48:55,012:INFO:Preloading libraries
2025-04-09 14:48:55,013:INFO:Set up data.
2025-04-09 14:48:55,017:INFO:Set up index.
2025-04-09 14:48:55,854:INFO:Initializing predict_model()
2025-04-09 14:48:55,855:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DAA250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:55,855:INFO:Checking exceptions
2025-04-09 14:48:55,855:INFO:Preloading libraries
2025-04-09 14:48:55,855:INFO:Set up data.
2025-04-09 14:48:55,860:INFO:Set up index.
2025-04-09 14:48:56,791:INFO:Initializing predict_model()
2025-04-09 14:48:56,791:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B9490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:56,791:INFO:Checking exceptions
2025-04-09 14:48:56,792:INFO:Preloading libraries
2025-04-09 14:48:56,792:INFO:Set up data.
2025-04-09 14:48:56,800:INFO:Set up index.
2025-04-09 14:48:57,622:INFO:Initializing predict_model()
2025-04-09 14:48:57,622:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BAD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:57,622:INFO:Checking exceptions
2025-04-09 14:48:57,622:INFO:Preloading libraries
2025-04-09 14:48:57,623:INFO:Set up data.
2025-04-09 14:48:57,629:INFO:Set up index.
2025-04-09 14:48:58,435:INFO:Initializing predict_model()
2025-04-09 14:48:58,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB5210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:58,436:INFO:Checking exceptions
2025-04-09 14:48:58,436:INFO:Preloading libraries
2025-04-09 14:48:58,436:INFO:Set up data.
2025-04-09 14:48:58,440:INFO:Set up index.
2025-04-09 14:48:59,299:INFO:Initializing predict_model()
2025-04-09 14:48:59,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB81D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:48:59,300:INFO:Checking exceptions
2025-04-09 14:48:59,300:INFO:Preloading libraries
2025-04-09 14:48:59,300:INFO:Set up data.
2025-04-09 14:48:59,306:INFO:Set up index.
2025-04-09 14:49:00,155:INFO:Initializing predict_model()
2025-04-09 14:49:00,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB0890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:00,155:INFO:Checking exceptions
2025-04-09 14:49:00,155:INFO:Preloading libraries
2025-04-09 14:49:00,156:INFO:Set up data.
2025-04-09 14:49:00,162:INFO:Set up index.
2025-04-09 14:49:00,954:INFO:Initializing predict_model()
2025-04-09 14:49:00,954:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA1090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:00,954:INFO:Checking exceptions
2025-04-09 14:49:00,954:INFO:Preloading libraries
2025-04-09 14:49:00,955:INFO:Set up data.
2025-04-09 14:49:00,960:INFO:Set up index.
2025-04-09 14:49:01,868:INFO:Initializing predict_model()
2025-04-09 14:49:01,868:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:01,869:INFO:Checking exceptions
2025-04-09 14:49:01,869:INFO:Preloading libraries
2025-04-09 14:49:01,869:INFO:Set up data.
2025-04-09 14:49:01,875:INFO:Set up index.
2025-04-09 14:49:02,673:INFO:Initializing predict_model()
2025-04-09 14:49:02,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58B3750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:02,674:INFO:Checking exceptions
2025-04-09 14:49:02,674:INFO:Preloading libraries
2025-04-09 14:49:02,675:INFO:Set up data.
2025-04-09 14:49:02,682:INFO:Set up index.
2025-04-09 14:49:03,461:INFO:Initializing predict_model()
2025-04-09 14:49:03,461:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB45D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:03,461:INFO:Checking exceptions
2025-04-09 14:49:03,462:INFO:Preloading libraries
2025-04-09 14:49:03,462:INFO:Set up data.
2025-04-09 14:49:03,467:INFO:Set up index.
2025-04-09 14:49:04,392:INFO:Initializing predict_model()
2025-04-09 14:49:04,392:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB63D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:04,392:INFO:Checking exceptions
2025-04-09 14:49:04,392:INFO:Preloading libraries
2025-04-09 14:49:04,393:INFO:Set up data.
2025-04-09 14:49:04,398:INFO:Set up index.
2025-04-09 14:49:05,257:INFO:Initializing predict_model()
2025-04-09 14:49:05,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:05,257:INFO:Checking exceptions
2025-04-09 14:49:05,258:INFO:Preloading libraries
2025-04-09 14:49:05,258:INFO:Set up data.
2025-04-09 14:49:05,262:INFO:Set up index.
2025-04-09 14:49:06,068:INFO:Initializing predict_model()
2025-04-09 14:49:06,069:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCA190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:06,069:INFO:Checking exceptions
2025-04-09 14:49:06,069:INFO:Preloading libraries
2025-04-09 14:49:06,069:INFO:Set up data.
2025-04-09 14:49:06,075:INFO:Set up index.
2025-04-09 14:49:06,934:INFO:Initializing predict_model()
2025-04-09 14:49:06,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB4850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:06,935:INFO:Checking exceptions
2025-04-09 14:49:06,935:INFO:Preloading libraries
2025-04-09 14:49:06,935:INFO:Set up data.
2025-04-09 14:49:06,940:INFO:Set up index.
2025-04-09 14:49:07,779:INFO:Initializing predict_model()
2025-04-09 14:49:07,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDA910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:07,780:INFO:Checking exceptions
2025-04-09 14:49:07,780:INFO:Preloading libraries
2025-04-09 14:49:07,780:INFO:Set up data.
2025-04-09 14:49:07,785:INFO:Set up index.
2025-04-09 14:49:08,615:INFO:Initializing predict_model()
2025-04-09 14:49:08,615:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBD750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:08,615:INFO:Checking exceptions
2025-04-09 14:49:08,615:INFO:Preloading libraries
2025-04-09 14:49:08,616:INFO:Set up data.
2025-04-09 14:49:08,621:INFO:Set up index.
2025-04-09 14:49:09,471:INFO:Initializing predict_model()
2025-04-09 14:49:09,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCB190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:09,471:INFO:Checking exceptions
2025-04-09 14:49:09,471:INFO:Preloading libraries
2025-04-09 14:49:09,472:INFO:Set up data.
2025-04-09 14:49:09,478:INFO:Set up index.
2025-04-09 14:49:10,299:INFO:Initializing predict_model()
2025-04-09 14:49:10,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBC6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:10,300:INFO:Checking exceptions
2025-04-09 14:49:10,300:INFO:Preloading libraries
2025-04-09 14:49:10,301:INFO:Set up data.
2025-04-09 14:49:10,306:INFO:Set up index.
2025-04-09 14:49:11,146:INFO:Initializing predict_model()
2025-04-09 14:49:11,146:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C584E950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:11,146:INFO:Checking exceptions
2025-04-09 14:49:11,146:INFO:Preloading libraries
2025-04-09 14:49:11,147:INFO:Set up data.
2025-04-09 14:49:11,153:INFO:Set up index.
2025-04-09 14:49:11,967:INFO:Initializing predict_model()
2025-04-09 14:49:11,968:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBC890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:11,968:INFO:Checking exceptions
2025-04-09 14:49:11,968:INFO:Preloading libraries
2025-04-09 14:49:11,968:INFO:Set up data.
2025-04-09 14:49:11,973:INFO:Set up index.
2025-04-09 14:49:12,843:INFO:Initializing predict_model()
2025-04-09 14:49:12,843:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD7190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:12,844:INFO:Checking exceptions
2025-04-09 14:49:12,844:INFO:Preloading libraries
2025-04-09 14:49:12,845:INFO:Set up data.
2025-04-09 14:49:12,851:INFO:Set up index.
2025-04-09 14:49:13,770:INFO:Initializing predict_model()
2025-04-09 14:49:13,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:13,770:INFO:Checking exceptions
2025-04-09 14:49:13,770:INFO:Preloading libraries
2025-04-09 14:49:13,771:INFO:Set up data.
2025-04-09 14:49:13,776:INFO:Set up index.
2025-04-09 14:49:14,584:INFO:Initializing predict_model()
2025-04-09 14:49:14,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD3990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:14,584:INFO:Checking exceptions
2025-04-09 14:49:14,585:INFO:Preloading libraries
2025-04-09 14:49:14,585:INFO:Set up data.
2025-04-09 14:49:14,589:INFO:Set up index.
2025-04-09 14:49:15,369:INFO:Initializing predict_model()
2025-04-09 14:49:15,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB6190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:15,370:INFO:Checking exceptions
2025-04-09 14:49:15,370:INFO:Preloading libraries
2025-04-09 14:49:15,370:INFO:Set up data.
2025-04-09 14:49:15,375:INFO:Set up index.
2025-04-09 14:49:16,265:INFO:Initializing predict_model()
2025-04-09 14:49:16,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD8ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:16,265:INFO:Checking exceptions
2025-04-09 14:49:16,266:INFO:Preloading libraries
2025-04-09 14:49:16,266:INFO:Set up data.
2025-04-09 14:49:16,272:INFO:Set up index.
2025-04-09 14:49:17,051:INFO:Initializing predict_model()
2025-04-09 14:49:17,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5894490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:17,051:INFO:Checking exceptions
2025-04-09 14:49:17,051:INFO:Preloading libraries
2025-04-09 14:49:17,052:INFO:Set up data.
2025-04-09 14:49:17,057:INFO:Set up index.
2025-04-09 14:49:17,900:INFO:Initializing predict_model()
2025-04-09 14:49:17,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD80D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:17,901:INFO:Checking exceptions
2025-04-09 14:49:17,901:INFO:Preloading libraries
2025-04-09 14:49:17,901:INFO:Set up data.
2025-04-09 14:49:17,906:INFO:Set up index.
2025-04-09 14:49:18,770:INFO:Initializing predict_model()
2025-04-09 14:49:18,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB15D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:18,770:INFO:Checking exceptions
2025-04-09 14:49:18,770:INFO:Preloading libraries
2025-04-09 14:49:18,771:INFO:Set up data.
2025-04-09 14:49:18,775:INFO:Set up index.
2025-04-09 14:49:19,568:INFO:Initializing predict_model()
2025-04-09 14:49:19,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB7C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:19,568:INFO:Checking exceptions
2025-04-09 14:49:19,569:INFO:Preloading libraries
2025-04-09 14:49:19,569:INFO:Set up data.
2025-04-09 14:49:19,577:INFO:Set up index.
2025-04-09 14:49:20,440:INFO:Initializing predict_model()
2025-04-09 14:49:20,440:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:20,440:INFO:Checking exceptions
2025-04-09 14:49:20,441:INFO:Preloading libraries
2025-04-09 14:49:20,441:INFO:Set up data.
2025-04-09 14:49:20,448:INFO:Set up index.
2025-04-09 14:49:21,492:INFO:Initializing predict_model()
2025-04-09 14:49:21,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE8110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:21,493:INFO:Checking exceptions
2025-04-09 14:49:21,493:INFO:Preloading libraries
2025-04-09 14:49:21,493:INFO:Set up data.
2025-04-09 14:49:21,499:INFO:Set up index.
2025-04-09 14:49:22,431:INFO:Initializing predict_model()
2025-04-09 14:49:22,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB71D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:22,432:INFO:Checking exceptions
2025-04-09 14:49:22,432:INFO:Preloading libraries
2025-04-09 14:49:22,432:INFO:Set up data.
2025-04-09 14:49:22,438:INFO:Set up index.
2025-04-09 14:49:23,406:INFO:Initializing predict_model()
2025-04-09 14:49:23,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:23,407:INFO:Checking exceptions
2025-04-09 14:49:23,407:INFO:Preloading libraries
2025-04-09 14:49:23,407:INFO:Set up data.
2025-04-09 14:49:23,416:INFO:Set up index.
2025-04-09 14:49:24,361:INFO:Initializing predict_model()
2025-04-09 14:49:24,361:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE8550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:24,361:INFO:Checking exceptions
2025-04-09 14:49:24,361:INFO:Preloading libraries
2025-04-09 14:49:24,362:INFO:Set up data.
2025-04-09 14:49:24,367:INFO:Set up index.
2025-04-09 14:49:25,245:INFO:Initializing predict_model()
2025-04-09 14:49:25,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD24D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:25,246:INFO:Checking exceptions
2025-04-09 14:49:25,246:INFO:Preloading libraries
2025-04-09 14:49:25,246:INFO:Set up data.
2025-04-09 14:49:25,253:INFO:Set up index.
2025-04-09 14:49:26,216:INFO:Initializing predict_model()
2025-04-09 14:49:26,216:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDA6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:26,216:INFO:Checking exceptions
2025-04-09 14:49:26,217:INFO:Preloading libraries
2025-04-09 14:49:26,217:INFO:Set up data.
2025-04-09 14:49:26,223:INFO:Set up index.
2025-04-09 14:49:27,025:INFO:Initializing predict_model()
2025-04-09 14:49:27,025:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA3A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:27,025:INFO:Checking exceptions
2025-04-09 14:49:27,025:INFO:Preloading libraries
2025-04-09 14:49:27,025:INFO:Set up data.
2025-04-09 14:49:27,029:INFO:Set up index.
2025-04-09 14:49:27,833:INFO:Initializing predict_model()
2025-04-09 14:49:27,833:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5897F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:27,833:INFO:Checking exceptions
2025-04-09 14:49:27,833:INFO:Preloading libraries
2025-04-09 14:49:27,834:INFO:Set up data.
2025-04-09 14:49:27,840:INFO:Set up index.
2025-04-09 14:49:28,718:INFO:Initializing predict_model()
2025-04-09 14:49:28,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD9DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:28,718:INFO:Checking exceptions
2025-04-09 14:49:28,718:INFO:Preloading libraries
2025-04-09 14:49:28,719:INFO:Set up data.
2025-04-09 14:49:28,724:INFO:Set up index.
2025-04-09 14:49:29,562:INFO:Initializing predict_model()
2025-04-09 14:49:29,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB7D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:29,563:INFO:Checking exceptions
2025-04-09 14:49:29,563:INFO:Preloading libraries
2025-04-09 14:49:29,563:INFO:Set up data.
2025-04-09 14:49:29,569:INFO:Set up index.
2025-04-09 14:49:30,436:INFO:Initializing predict_model()
2025-04-09 14:49:30,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:30,437:INFO:Checking exceptions
2025-04-09 14:49:30,437:INFO:Preloading libraries
2025-04-09 14:49:30,437:INFO:Set up data.
2025-04-09 14:49:30,444:INFO:Set up index.
2025-04-09 14:49:31,268:INFO:Initializing predict_model()
2025-04-09 14:49:31,268:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBEE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:31,268:INFO:Checking exceptions
2025-04-09 14:49:31,269:INFO:Preloading libraries
2025-04-09 14:49:31,269:INFO:Set up data.
2025-04-09 14:49:31,275:INFO:Set up index.
2025-04-09 14:49:32,089:INFO:Initializing predict_model()
2025-04-09 14:49:32,090:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEA450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257C5809BC0>)
2025-04-09 14:49:32,090:INFO:Checking exceptions
2025-04-09 14:49:32,090:INFO:Preloading libraries
2025-04-09 14:49:32,090:INFO:Set up data.
2025-04-09 14:49:32,096:INFO:Set up index.
2025-04-09 14:49:32,995:INFO:Initializing predict_model()
2025-04-09 14:49:32,995:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD2D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:32,995:INFO:Checking exceptions
2025-04-09 14:49:32,996:INFO:Preloading libraries
2025-04-09 14:49:32,997:INFO:Set up data.
2025-04-09 14:49:33,003:INFO:Set up index.
2025-04-09 14:49:33,818:INFO:Initializing predict_model()
2025-04-09 14:49:33,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:33,819:INFO:Checking exceptions
2025-04-09 14:49:33,819:INFO:Preloading libraries
2025-04-09 14:49:33,819:INFO:Set up data.
2025-04-09 14:49:33,824:INFO:Set up index.
2025-04-09 14:49:34,621:INFO:Initializing predict_model()
2025-04-09 14:49:34,621:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:34,621:INFO:Checking exceptions
2025-04-09 14:49:34,621:INFO:Preloading libraries
2025-04-09 14:49:34,622:INFO:Set up data.
2025-04-09 14:49:34,628:INFO:Set up index.
2025-04-09 14:49:35,495:INFO:Initializing predict_model()
2025-04-09 14:49:35,495:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588AB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:35,495:INFO:Checking exceptions
2025-04-09 14:49:35,495:INFO:Preloading libraries
2025-04-09 14:49:35,496:INFO:Set up data.
2025-04-09 14:49:35,501:INFO:Set up index.
2025-04-09 14:49:36,306:INFO:Initializing predict_model()
2025-04-09 14:49:36,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDA250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:36,306:INFO:Checking exceptions
2025-04-09 14:49:36,306:INFO:Preloading libraries
2025-04-09 14:49:36,307:INFO:Set up data.
2025-04-09 14:49:36,312:INFO:Set up index.
2025-04-09 14:49:37,155:INFO:Initializing predict_model()
2025-04-09 14:49:37,156:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCA890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:37,156:INFO:Checking exceptions
2025-04-09 14:49:37,156:INFO:Preloading libraries
2025-04-09 14:49:37,157:INFO:Set up data.
2025-04-09 14:49:37,163:INFO:Set up index.
2025-04-09 14:49:38,047:INFO:Initializing predict_model()
2025-04-09 14:49:38,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD0F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:38,047:INFO:Checking exceptions
2025-04-09 14:49:38,047:INFO:Preloading libraries
2025-04-09 14:49:38,048:INFO:Set up data.
2025-04-09 14:49:38,053:INFO:Set up index.
2025-04-09 14:49:38,814:INFO:Initializing predict_model()
2025-04-09 14:49:38,815:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD8B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:38,815:INFO:Checking exceptions
2025-04-09 14:49:38,815:INFO:Preloading libraries
2025-04-09 14:49:38,815:INFO:Set up data.
2025-04-09 14:49:38,820:INFO:Set up index.
2025-04-09 14:49:39,597:INFO:Initializing predict_model()
2025-04-09 14:49:39,598:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:39,598:INFO:Checking exceptions
2025-04-09 14:49:39,598:INFO:Preloading libraries
2025-04-09 14:49:39,598:INFO:Set up data.
2025-04-09 14:49:39,605:INFO:Set up index.
2025-04-09 14:49:40,471:INFO:Initializing predict_model()
2025-04-09 14:49:40,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:40,471:INFO:Checking exceptions
2025-04-09 14:49:40,471:INFO:Preloading libraries
2025-04-09 14:49:40,472:INFO:Set up data.
2025-04-09 14:49:40,476:INFO:Set up index.
2025-04-09 14:49:41,240:INFO:Initializing predict_model()
2025-04-09 14:49:41,240:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:41,241:INFO:Checking exceptions
2025-04-09 14:49:41,241:INFO:Preloading libraries
2025-04-09 14:49:41,242:INFO:Set up data.
2025-04-09 14:49:41,248:INFO:Set up index.
2025-04-09 14:49:42,069:INFO:Initializing predict_model()
2025-04-09 14:49:42,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58BBF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:42,070:INFO:Checking exceptions
2025-04-09 14:49:42,070:INFO:Preloading libraries
2025-04-09 14:49:42,071:INFO:Set up data.
2025-04-09 14:49:42,078:INFO:Set up index.
2025-04-09 14:49:42,968:INFO:Initializing predict_model()
2025-04-09 14:49:42,968:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5886C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:42,968:INFO:Checking exceptions
2025-04-09 14:49:42,968:INFO:Preloading libraries
2025-04-09 14:49:42,969:INFO:Set up data.
2025-04-09 14:49:42,974:INFO:Set up index.
2025-04-09 14:49:43,782:INFO:Initializing predict_model()
2025-04-09 14:49:43,782:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEB810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:43,782:INFO:Checking exceptions
2025-04-09 14:49:43,782:INFO:Preloading libraries
2025-04-09 14:49:43,783:INFO:Set up data.
2025-04-09 14:49:43,789:INFO:Set up index.
2025-04-09 14:49:44,658:INFO:Initializing predict_model()
2025-04-09 14:49:44,658:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE9C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:44,658:INFO:Checking exceptions
2025-04-09 14:49:44,659:INFO:Preloading libraries
2025-04-09 14:49:44,659:INFO:Set up data.
2025-04-09 14:49:44,666:INFO:Set up index.
2025-04-09 14:49:45,518:INFO:Initializing predict_model()
2025-04-09 14:49:45,518:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBFF50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:45,518:INFO:Checking exceptions
2025-04-09 14:49:45,518:INFO:Preloading libraries
2025-04-09 14:49:45,519:INFO:Set up data.
2025-04-09 14:49:45,524:INFO:Set up index.
2025-04-09 14:49:46,327:INFO:Initializing predict_model()
2025-04-09 14:49:46,327:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB4CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:46,328:INFO:Checking exceptions
2025-04-09 14:49:46,328:INFO:Preloading libraries
2025-04-09 14:49:46,328:INFO:Set up data.
2025-04-09 14:49:46,334:INFO:Set up index.
2025-04-09 14:49:47,139:INFO:Initializing predict_model()
2025-04-09 14:49:47,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB5110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:47,139:INFO:Checking exceptions
2025-04-09 14:49:47,140:INFO:Preloading libraries
2025-04-09 14:49:47,140:INFO:Set up data.
2025-04-09 14:49:47,145:INFO:Set up index.
2025-04-09 14:49:47,982:INFO:Initializing predict_model()
2025-04-09 14:49:47,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAED7B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:47,982:INFO:Checking exceptions
2025-04-09 14:49:47,983:INFO:Preloading libraries
2025-04-09 14:49:47,983:INFO:Set up data.
2025-04-09 14:49:47,989:INFO:Set up index.
2025-04-09 14:49:48,871:INFO:Initializing predict_model()
2025-04-09 14:49:48,871:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBC6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:48,871:INFO:Checking exceptions
2025-04-09 14:49:48,871:INFO:Preloading libraries
2025-04-09 14:49:48,872:INFO:Set up data.
2025-04-09 14:49:48,877:INFO:Set up index.
2025-04-09 14:49:49,766:INFO:Initializing predict_model()
2025-04-09 14:49:49,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD3250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:49,767:INFO:Checking exceptions
2025-04-09 14:49:49,767:INFO:Preloading libraries
2025-04-09 14:49:49,768:INFO:Set up data.
2025-04-09 14:49:49,775:INFO:Set up index.
2025-04-09 14:49:50,622:INFO:Initializing predict_model()
2025-04-09 14:49:50,622:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE93D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:50,622:INFO:Checking exceptions
2025-04-09 14:49:50,622:INFO:Preloading libraries
2025-04-09 14:49:50,623:INFO:Set up data.
2025-04-09 14:49:50,627:INFO:Set up index.
2025-04-09 14:49:51,433:INFO:Initializing predict_model()
2025-04-09 14:49:51,433:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBDB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:51,433:INFO:Checking exceptions
2025-04-09 14:49:51,433:INFO:Preloading libraries
2025-04-09 14:49:51,434:INFO:Set up data.
2025-04-09 14:49:51,439:INFO:Set up index.
2025-04-09 14:49:52,378:INFO:Initializing predict_model()
2025-04-09 14:49:52,379:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB5110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:52,379:INFO:Checking exceptions
2025-04-09 14:49:52,379:INFO:Preloading libraries
2025-04-09 14:49:52,380:INFO:Set up data.
2025-04-09 14:49:52,388:INFO:Set up index.
2025-04-09 14:49:53,286:INFO:Initializing predict_model()
2025-04-09 14:49:53,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:53,287:INFO:Checking exceptions
2025-04-09 14:49:53,287:INFO:Preloading libraries
2025-04-09 14:49:53,288:INFO:Set up data.
2025-04-09 14:49:53,293:INFO:Set up index.
2025-04-09 14:49:54,152:INFO:Initializing predict_model()
2025-04-09 14:49:54,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:54,152:INFO:Checking exceptions
2025-04-09 14:49:54,152:INFO:Preloading libraries
2025-04-09 14:49:54,153:INFO:Set up data.
2025-04-09 14:49:54,159:INFO:Set up index.
2025-04-09 14:49:55,024:INFO:Initializing predict_model()
2025-04-09 14:49:55,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC8E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:55,024:INFO:Checking exceptions
2025-04-09 14:49:55,025:INFO:Preloading libraries
2025-04-09 14:49:55,025:INFO:Set up data.
2025-04-09 14:49:55,030:INFO:Set up index.
2025-04-09 14:49:55,898:INFO:Initializing predict_model()
2025-04-09 14:49:55,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD7390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:55,898:INFO:Checking exceptions
2025-04-09 14:49:55,898:INFO:Preloading libraries
2025-04-09 14:49:55,899:INFO:Set up data.
2025-04-09 14:49:55,904:INFO:Set up index.
2025-04-09 14:49:56,844:INFO:Initializing predict_model()
2025-04-09 14:49:56,845:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD0BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:56,845:INFO:Checking exceptions
2025-04-09 14:49:56,845:INFO:Preloading libraries
2025-04-09 14:49:56,846:INFO:Set up data.
2025-04-09 14:49:56,850:INFO:Set up index.
2025-04-09 14:49:57,727:INFO:Initializing predict_model()
2025-04-09 14:49:57,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB7DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:57,728:INFO:Checking exceptions
2025-04-09 14:49:57,728:INFO:Preloading libraries
2025-04-09 14:49:57,728:INFO:Set up data.
2025-04-09 14:49:57,734:INFO:Set up index.
2025-04-09 14:49:58,497:INFO:Initializing predict_model()
2025-04-09 14:49:58,497:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB9110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:58,497:INFO:Checking exceptions
2025-04-09 14:49:58,497:INFO:Preloading libraries
2025-04-09 14:49:58,498:INFO:Set up data.
2025-04-09 14:49:58,502:INFO:Set up index.
2025-04-09 14:49:59,381:INFO:Initializing predict_model()
2025-04-09 14:49:59,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C587D290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:49:59,382:INFO:Checking exceptions
2025-04-09 14:49:59,382:INFO:Preloading libraries
2025-04-09 14:49:59,383:INFO:Set up data.
2025-04-09 14:49:59,390:INFO:Set up index.
2025-04-09 14:50:00,336:INFO:Initializing predict_model()
2025-04-09 14:50:00,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE8210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:00,337:INFO:Checking exceptions
2025-04-09 14:50:00,337:INFO:Preloading libraries
2025-04-09 14:50:00,337:INFO:Set up data.
2025-04-09 14:50:00,344:INFO:Set up index.
2025-04-09 14:50:01,305:INFO:Initializing predict_model()
2025-04-09 14:50:01,305:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD72D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:01,305:INFO:Checking exceptions
2025-04-09 14:50:01,305:INFO:Preloading libraries
2025-04-09 14:50:01,306:INFO:Set up data.
2025-04-09 14:50:01,310:INFO:Set up index.
2025-04-09 14:50:02,188:INFO:Initializing predict_model()
2025-04-09 14:50:02,188:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB9F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:02,188:INFO:Checking exceptions
2025-04-09 14:50:02,188:INFO:Preloading libraries
2025-04-09 14:50:02,189:INFO:Set up data.
2025-04-09 14:50:02,193:INFO:Set up index.
2025-04-09 14:50:03,040:INFO:Initializing predict_model()
2025-04-09 14:50:03,040:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC92D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:03,040:INFO:Checking exceptions
2025-04-09 14:50:03,040:INFO:Preloading libraries
2025-04-09 14:50:03,041:INFO:Set up data.
2025-04-09 14:50:03,046:INFO:Set up index.
2025-04-09 14:50:03,858:INFO:Initializing predict_model()
2025-04-09 14:50:03,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:03,859:INFO:Checking exceptions
2025-04-09 14:50:03,859:INFO:Preloading libraries
2025-04-09 14:50:03,859:INFO:Set up data.
2025-04-09 14:50:03,864:INFO:Set up index.
2025-04-09 14:50:04,701:INFO:Initializing predict_model()
2025-04-09 14:50:04,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC9910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:04,701:INFO:Checking exceptions
2025-04-09 14:50:04,702:INFO:Preloading libraries
2025-04-09 14:50:04,702:INFO:Set up data.
2025-04-09 14:50:04,706:INFO:Set up index.
2025-04-09 14:50:05,517:INFO:Initializing predict_model()
2025-04-09 14:50:05,518:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC81D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:05,518:INFO:Checking exceptions
2025-04-09 14:50:05,518:INFO:Preloading libraries
2025-04-09 14:50:05,518:INFO:Set up data.
2025-04-09 14:50:05,523:INFO:Set up index.
2025-04-09 14:50:06,368:INFO:Initializing predict_model()
2025-04-09 14:50:06,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD1010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:06,369:INFO:Checking exceptions
2025-04-09 14:50:06,369:INFO:Preloading libraries
2025-04-09 14:50:06,369:INFO:Set up data.
2025-04-09 14:50:06,374:INFO:Set up index.
2025-04-09 14:50:07,172:INFO:Initializing predict_model()
2025-04-09 14:50:07,172:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DABD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:07,173:INFO:Checking exceptions
2025-04-09 14:50:07,173:INFO:Preloading libraries
2025-04-09 14:50:07,173:INFO:Set up data.
2025-04-09 14:50:07,178:INFO:Set up index.
2025-04-09 14:50:07,976:INFO:Initializing predict_model()
2025-04-09 14:50:07,976:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC8590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:07,976:INFO:Checking exceptions
2025-04-09 14:50:07,977:INFO:Preloading libraries
2025-04-09 14:50:07,977:INFO:Set up data.
2025-04-09 14:50:07,982:INFO:Set up index.
2025-04-09 14:50:08,958:INFO:Initializing predict_model()
2025-04-09 14:50:08,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD4D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:08,959:INFO:Checking exceptions
2025-04-09 14:50:08,959:INFO:Preloading libraries
2025-04-09 14:50:08,960:INFO:Set up data.
2025-04-09 14:50:08,966:INFO:Set up index.
2025-04-09 14:50:09,881:INFO:Initializing predict_model()
2025-04-09 14:50:09,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEB210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:09,881:INFO:Checking exceptions
2025-04-09 14:50:09,881:INFO:Preloading libraries
2025-04-09 14:50:09,882:INFO:Set up data.
2025-04-09 14:50:09,888:INFO:Set up index.
2025-04-09 14:50:10,734:INFO:Initializing predict_model()
2025-04-09 14:50:10,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB2AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:10,734:INFO:Checking exceptions
2025-04-09 14:50:10,734:INFO:Preloading libraries
2025-04-09 14:50:10,735:INFO:Set up data.
2025-04-09 14:50:10,740:INFO:Set up index.
2025-04-09 14:50:11,762:INFO:Initializing predict_model()
2025-04-09 14:50:11,762:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE9ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:11,762:INFO:Checking exceptions
2025-04-09 14:50:11,762:INFO:Preloading libraries
2025-04-09 14:50:11,763:INFO:Set up data.
2025-04-09 14:50:11,769:INFO:Set up index.
2025-04-09 14:50:12,681:INFO:Initializing predict_model()
2025-04-09 14:50:12,681:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:12,681:INFO:Checking exceptions
2025-04-09 14:50:12,682:INFO:Preloading libraries
2025-04-09 14:50:12,682:INFO:Set up data.
2025-04-09 14:50:12,689:INFO:Set up index.
2025-04-09 14:50:13,581:INFO:Initializing predict_model()
2025-04-09 14:50:13,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A7450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:13,582:INFO:Checking exceptions
2025-04-09 14:50:13,582:INFO:Preloading libraries
2025-04-09 14:50:13,582:INFO:Set up data.
2025-04-09 14:50:13,588:INFO:Set up index.
2025-04-09 14:50:14,547:INFO:Initializing predict_model()
2025-04-09 14:50:14,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD6750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:14,548:INFO:Checking exceptions
2025-04-09 14:50:14,548:INFO:Preloading libraries
2025-04-09 14:50:14,548:INFO:Set up data.
2025-04-09 14:50:14,553:INFO:Set up index.
2025-04-09 14:50:15,371:INFO:Initializing predict_model()
2025-04-09 14:50:15,371:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A5CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:15,372:INFO:Checking exceptions
2025-04-09 14:50:15,372:INFO:Preloading libraries
2025-04-09 14:50:15,372:INFO:Set up data.
2025-04-09 14:50:15,377:INFO:Set up index.
2025-04-09 14:50:16,454:INFO:Initializing predict_model()
2025-04-09 14:50:16,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD9950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:16,455:INFO:Checking exceptions
2025-04-09 14:50:16,455:INFO:Preloading libraries
2025-04-09 14:50:16,456:INFO:Set up data.
2025-04-09 14:50:16,464:INFO:Set up index.
2025-04-09 14:50:17,525:INFO:Initializing predict_model()
2025-04-09 14:50:17,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCB810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:17,526:INFO:Checking exceptions
2025-04-09 14:50:17,526:INFO:Preloading libraries
2025-04-09 14:50:17,526:INFO:Set up data.
2025-04-09 14:50:17,534:INFO:Set up index.
2025-04-09 14:50:18,577:INFO:Initializing predict_model()
2025-04-09 14:50:18,578:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCB150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:18,578:INFO:Checking exceptions
2025-04-09 14:50:18,578:INFO:Preloading libraries
2025-04-09 14:50:18,578:INFO:Set up data.
2025-04-09 14:50:18,585:INFO:Set up index.
2025-04-09 14:50:19,534:INFO:Initializing predict_model()
2025-04-09 14:50:19,535:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEDB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:19,535:INFO:Checking exceptions
2025-04-09 14:50:19,535:INFO:Preloading libraries
2025-04-09 14:50:19,536:INFO:Set up data.
2025-04-09 14:50:19,543:INFO:Set up index.
2025-04-09 14:50:20,437:INFO:Initializing predict_model()
2025-04-09 14:50:20,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DCB250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:20,437:INFO:Checking exceptions
2025-04-09 14:50:20,437:INFO:Preloading libraries
2025-04-09 14:50:20,438:INFO:Set up data.
2025-04-09 14:50:20,443:INFO:Set up index.
2025-04-09 14:50:21,481:INFO:Initializing predict_model()
2025-04-09 14:50:21,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD48D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:21,482:INFO:Checking exceptions
2025-04-09 14:50:21,482:INFO:Preloading libraries
2025-04-09 14:50:21,483:INFO:Set up data.
2025-04-09 14:50:21,490:INFO:Set up index.
2025-04-09 14:50:22,540:INFO:Initializing predict_model()
2025-04-09 14:50:22,541:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF5E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:22,541:INFO:Checking exceptions
2025-04-09 14:50:22,541:INFO:Preloading libraries
2025-04-09 14:50:22,542:INFO:Set up data.
2025-04-09 14:50:22,548:INFO:Set up index.
2025-04-09 14:50:23,639:INFO:Initializing predict_model()
2025-04-09 14:50:23,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC8F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:23,640:INFO:Checking exceptions
2025-04-09 14:50:23,640:INFO:Preloading libraries
2025-04-09 14:50:23,640:INFO:Set up data.
2025-04-09 14:50:23,649:INFO:Set up index.
2025-04-09 14:50:24,660:INFO:Initializing predict_model()
2025-04-09 14:50:24,661:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBB250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:24,661:INFO:Checking exceptions
2025-04-09 14:50:24,661:INFO:Preloading libraries
2025-04-09 14:50:24,661:INFO:Set up data.
2025-04-09 14:50:24,671:INFO:Set up index.
2025-04-09 14:50:25,646:INFO:Initializing predict_model()
2025-04-09 14:50:25,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEB390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:25,647:INFO:Checking exceptions
2025-04-09 14:50:25,647:INFO:Preloading libraries
2025-04-09 14:50:25,648:INFO:Set up data.
2025-04-09 14:50:25,653:INFO:Set up index.
2025-04-09 14:50:26,655:INFO:Initializing predict_model()
2025-04-09 14:50:26,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DED990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:26,655:INFO:Checking exceptions
2025-04-09 14:50:26,655:INFO:Preloading libraries
2025-04-09 14:50:26,656:INFO:Set up data.
2025-04-09 14:50:26,662:INFO:Set up index.
2025-04-09 14:50:27,616:INFO:Initializing predict_model()
2025-04-09 14:50:27,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBB490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:27,617:INFO:Checking exceptions
2025-04-09 14:50:27,617:INFO:Preloading libraries
2025-04-09 14:50:27,617:INFO:Set up data.
2025-04-09 14:50:27,624:INFO:Set up index.
2025-04-09 14:50:28,627:INFO:Initializing predict_model()
2025-04-09 14:50:28,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF8050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:28,627:INFO:Checking exceptions
2025-04-09 14:50:28,627:INFO:Preloading libraries
2025-04-09 14:50:28,628:INFO:Set up data.
2025-04-09 14:50:28,638:INFO:Set up index.
2025-04-09 14:50:29,552:INFO:Initializing predict_model()
2025-04-09 14:50:29,552:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF4490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:29,552:INFO:Checking exceptions
2025-04-09 14:50:29,552:INFO:Preloading libraries
2025-04-09 14:50:29,553:INFO:Set up data.
2025-04-09 14:50:29,558:INFO:Set up index.
2025-04-09 14:50:30,435:INFO:Initializing predict_model()
2025-04-09 14:50:30,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEF690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:30,436:INFO:Checking exceptions
2025-04-09 14:50:30,436:INFO:Preloading libraries
2025-04-09 14:50:30,437:INFO:Set up data.
2025-04-09 14:50:30,443:INFO:Set up index.
2025-04-09 14:50:31,340:INFO:Initializing predict_model()
2025-04-09 14:50:31,340:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD88D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:31,340:INFO:Checking exceptions
2025-04-09 14:50:31,340:INFO:Preloading libraries
2025-04-09 14:50:31,341:INFO:Set up data.
2025-04-09 14:50:31,347:INFO:Set up index.
2025-04-09 14:50:32,204:INFO:Initializing predict_model()
2025-04-09 14:50:32,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBD610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:50:32,205:INFO:Checking exceptions
2025-04-09 14:50:32,205:INFO:Preloading libraries
2025-04-09 14:50:32,205:INFO:Set up data.
2025-04-09 14:50:32,212:INFO:Set up index.
2025-04-09 14:50:33,085:INFO:Initializing predict_model()
2025-04-09 14:50:33,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEBA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:33,086:INFO:Checking exceptions
2025-04-09 14:50:33,086:INFO:Preloading libraries
2025-04-09 14:50:33,086:INFO:Set up data.
2025-04-09 14:50:33,092:INFO:Set up index.
2025-04-09 14:50:33,908:INFO:Initializing predict_model()
2025-04-09 14:50:33,908:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBCB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:33,908:INFO:Checking exceptions
2025-04-09 14:50:33,908:INFO:Preloading libraries
2025-04-09 14:50:33,909:INFO:Set up data.
2025-04-09 14:50:33,914:INFO:Set up index.
2025-04-09 14:50:34,758:INFO:Initializing predict_model()
2025-04-09 14:50:34,758:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB0E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:34,758:INFO:Checking exceptions
2025-04-09 14:50:34,759:INFO:Preloading libraries
2025-04-09 14:50:34,759:INFO:Set up data.
2025-04-09 14:50:34,767:INFO:Set up index.
2025-04-09 14:50:35,668:INFO:Initializing predict_model()
2025-04-09 14:50:35,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C58A59D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:35,669:INFO:Checking exceptions
2025-04-09 14:50:35,669:INFO:Preloading libraries
2025-04-09 14:50:35,670:INFO:Set up data.
2025-04-09 14:50:35,675:INFO:Set up index.
2025-04-09 14:50:36,497:INFO:Initializing predict_model()
2025-04-09 14:50:36,497:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD3610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:36,497:INFO:Checking exceptions
2025-04-09 14:50:36,497:INFO:Preloading libraries
2025-04-09 14:50:36,498:INFO:Set up data.
2025-04-09 14:50:36,502:INFO:Set up index.
2025-04-09 14:50:37,286:INFO:Initializing predict_model()
2025-04-09 14:50:37,286:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD8A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:37,286:INFO:Checking exceptions
2025-04-09 14:50:37,286:INFO:Preloading libraries
2025-04-09 14:50:37,288:INFO:Set up data.
2025-04-09 14:50:37,292:INFO:Set up index.
2025-04-09 14:50:38,185:INFO:Initializing predict_model()
2025-04-09 14:50:38,185:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD2210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:38,185:INFO:Checking exceptions
2025-04-09 14:50:38,186:INFO:Preloading libraries
2025-04-09 14:50:38,187:INFO:Set up data.
2025-04-09 14:50:38,193:INFO:Set up index.
2025-04-09 14:50:39,001:INFO:Initializing predict_model()
2025-04-09 14:50:39,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DABD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:39,001:INFO:Checking exceptions
2025-04-09 14:50:39,001:INFO:Preloading libraries
2025-04-09 14:50:39,002:INFO:Set up data.
2025-04-09 14:50:39,008:INFO:Set up index.
2025-04-09 14:50:39,805:INFO:Initializing predict_model()
2025-04-09 14:50:39,806:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEDC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:39,806:INFO:Checking exceptions
2025-04-09 14:50:39,806:INFO:Preloading libraries
2025-04-09 14:50:39,806:INFO:Set up data.
2025-04-09 14:50:39,811:INFO:Set up index.
2025-04-09 14:50:40,828:INFO:Initializing predict_model()
2025-04-09 14:50:40,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD9CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:40,828:INFO:Checking exceptions
2025-04-09 14:50:40,828:INFO:Preloading libraries
2025-04-09 14:50:40,829:INFO:Set up data.
2025-04-09 14:50:40,834:INFO:Set up index.
2025-04-09 14:50:41,621:INFO:Initializing predict_model()
2025-04-09 14:50:41,622:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC9550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:41,622:INFO:Checking exceptions
2025-04-09 14:50:41,622:INFO:Preloading libraries
2025-04-09 14:50:41,623:INFO:Set up data.
2025-04-09 14:50:41,629:INFO:Set up index.
2025-04-09 14:50:42,478:INFO:Initializing predict_model()
2025-04-09 14:50:42,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA3A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:42,478:INFO:Checking exceptions
2025-04-09 14:50:42,478:INFO:Preloading libraries
2025-04-09 14:50:42,479:INFO:Set up data.
2025-04-09 14:50:42,486:INFO:Set up index.
2025-04-09 14:50:43,408:INFO:Initializing predict_model()
2025-04-09 14:50:43,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC9550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:43,410:INFO:Checking exceptions
2025-04-09 14:50:43,410:INFO:Preloading libraries
2025-04-09 14:50:43,410:INFO:Set up data.
2025-04-09 14:50:43,416:INFO:Set up index.
2025-04-09 14:50:44,228:INFO:Initializing predict_model()
2025-04-09 14:50:44,228:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DE8F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:44,229:INFO:Checking exceptions
2025-04-09 14:50:44,229:INFO:Preloading libraries
2025-04-09 14:50:44,230:INFO:Set up data.
2025-04-09 14:50:44,235:INFO:Set up index.
2025-04-09 14:50:45,047:INFO:Initializing predict_model()
2025-04-09 14:50:45,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEF850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:45,047:INFO:Checking exceptions
2025-04-09 14:50:45,047:INFO:Preloading libraries
2025-04-09 14:50:45,048:INFO:Set up data.
2025-04-09 14:50:45,053:INFO:Set up index.
2025-04-09 14:50:45,904:INFO:Initializing predict_model()
2025-04-09 14:50:45,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD0550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:45,904:INFO:Checking exceptions
2025-04-09 14:50:45,904:INFO:Preloading libraries
2025-04-09 14:50:45,905:INFO:Set up data.
2025-04-09 14:50:45,909:INFO:Set up index.
2025-04-09 14:50:46,746:INFO:Initializing predict_model()
2025-04-09 14:50:46,747:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC9550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:46,747:INFO:Checking exceptions
2025-04-09 14:50:46,747:INFO:Preloading libraries
2025-04-09 14:50:46,748:INFO:Set up data.
2025-04-09 14:50:46,752:INFO:Set up index.
2025-04-09 14:50:47,598:INFO:Initializing predict_model()
2025-04-09 14:50:47,598:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF5E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:47,598:INFO:Checking exceptions
2025-04-09 14:50:47,598:INFO:Preloading libraries
2025-04-09 14:50:47,599:INFO:Set up data.
2025-04-09 14:50:47,607:INFO:Set up index.
2025-04-09 14:50:48,461:INFO:Initializing predict_model()
2025-04-09 14:50:48,462:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEBE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:48,462:INFO:Checking exceptions
2025-04-09 14:50:48,462:INFO:Preloading libraries
2025-04-09 14:50:48,462:INFO:Set up data.
2025-04-09 14:50:48,468:INFO:Set up index.
2025-04-09 14:50:49,291:INFO:Initializing predict_model()
2025-04-09 14:50:49,292:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBDB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:49,292:INFO:Checking exceptions
2025-04-09 14:50:49,292:INFO:Preloading libraries
2025-04-09 14:50:49,292:INFO:Set up data.
2025-04-09 14:50:49,297:INFO:Set up index.
2025-04-09 14:50:50,178:INFO:Initializing predict_model()
2025-04-09 14:50:50,178:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DA8950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:50,178:INFO:Checking exceptions
2025-04-09 14:50:50,178:INFO:Preloading libraries
2025-04-09 14:50:50,179:INFO:Set up data.
2025-04-09 14:50:50,187:INFO:Set up index.
2025-04-09 14:50:51,096:INFO:Initializing predict_model()
2025-04-09 14:50:51,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC9E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:51,096:INFO:Checking exceptions
2025-04-09 14:50:51,096:INFO:Preloading libraries
2025-04-09 14:50:51,097:INFO:Set up data.
2025-04-09 14:50:51,105:INFO:Set up index.
2025-04-09 14:50:51,939:INFO:Initializing predict_model()
2025-04-09 14:50:51,940:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257BAED7B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:51,940:INFO:Checking exceptions
2025-04-09 14:50:51,940:INFO:Preloading libraries
2025-04-09 14:50:51,941:INFO:Set up data.
2025-04-09 14:50:51,949:INFO:Set up index.
2025-04-09 14:50:52,810:INFO:Initializing predict_model()
2025-04-09 14:50:52,810:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:52,811:INFO:Checking exceptions
2025-04-09 14:50:52,811:INFO:Preloading libraries
2025-04-09 14:50:52,812:INFO:Set up data.
2025-04-09 14:50:52,818:INFO:Set up index.
2025-04-09 14:50:53,677:INFO:Initializing predict_model()
2025-04-09 14:50:53,677:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD3ED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:53,677:INFO:Checking exceptions
2025-04-09 14:50:53,677:INFO:Preloading libraries
2025-04-09 14:50:53,678:INFO:Set up data.
2025-04-09 14:50:53,684:INFO:Set up index.
2025-04-09 14:50:54,525:INFO:Initializing predict_model()
2025-04-09 14:50:54,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD9110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:54,526:INFO:Checking exceptions
2025-04-09 14:50:54,526:INFO:Preloading libraries
2025-04-09 14:50:54,526:INFO:Set up data.
2025-04-09 14:50:54,532:INFO:Set up index.
2025-04-09 14:50:55,386:INFO:Initializing predict_model()
2025-04-09 14:50:55,387:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC8BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:55,387:INFO:Checking exceptions
2025-04-09 14:50:55,387:INFO:Preloading libraries
2025-04-09 14:50:55,387:INFO:Set up data.
2025-04-09 14:50:55,391:INFO:Set up index.
2025-04-09 14:50:56,182:INFO:Initializing predict_model()
2025-04-09 14:50:56,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDBE90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:56,183:INFO:Checking exceptions
2025-04-09 14:50:56,183:INFO:Preloading libraries
2025-04-09 14:50:56,183:INFO:Set up data.
2025-04-09 14:50:56,189:INFO:Set up index.
2025-04-09 14:50:57,047:INFO:Initializing predict_model()
2025-04-09 14:50:57,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9E01090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:57,048:INFO:Checking exceptions
2025-04-09 14:50:57,048:INFO:Preloading libraries
2025-04-09 14:50:57,048:INFO:Set up data.
2025-04-09 14:50:57,055:INFO:Set up index.
2025-04-09 14:50:57,901:INFO:Initializing predict_model()
2025-04-09 14:50:57,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DC9550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:57,901:INFO:Checking exceptions
2025-04-09 14:50:57,901:INFO:Preloading libraries
2025-04-09 14:50:57,902:INFO:Set up data.
2025-04-09 14:50:57,908:INFO:Set up index.
2025-04-09 14:50:58,774:INFO:Initializing predict_model()
2025-04-09 14:50:58,774:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD17D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:58,774:INFO:Checking exceptions
2025-04-09 14:50:58,774:INFO:Preloading libraries
2025-04-09 14:50:58,775:INFO:Set up data.
2025-04-09 14:50:58,781:INFO:Set up index.
2025-04-09 14:50:59,652:INFO:Initializing predict_model()
2025-04-09 14:50:59,652:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB3C50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:50:59,652:INFO:Checking exceptions
2025-04-09 14:50:59,652:INFO:Preloading libraries
2025-04-09 14:50:59,653:INFO:Set up data.
2025-04-09 14:50:59,659:INFO:Set up index.
2025-04-09 14:51:00,511:INFO:Initializing predict_model()
2025-04-09 14:51:00,511:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:51:00,511:INFO:Checking exceptions
2025-04-09 14:51:00,512:INFO:Preloading libraries
2025-04-09 14:51:00,512:INFO:Set up data.
2025-04-09 14:51:00,519:INFO:Set up index.
2025-04-09 14:51:01,324:INFO:Initializing predict_model()
2025-04-09 14:51:01,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DB8890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:51:01,324:INFO:Checking exceptions
2025-04-09 14:51:01,324:INFO:Preloading libraries
2025-04-09 14:51:01,325:INFO:Set up data.
2025-04-09 14:51:01,329:INFO:Set up index.
2025-04-09 14:51:02,217:INFO:Initializing predict_model()
2025-04-09 14:51:02,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C5883D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:51:02,217:INFO:Checking exceptions
2025-04-09 14:51:02,217:INFO:Preloading libraries
2025-04-09 14:51:02,218:INFO:Set up data.
2025-04-09 14:51:02,222:INFO:Set up index.
2025-04-09 14:51:03,034:INFO:Initializing predict_model()
2025-04-09 14:51:03,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9E08550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002578634A2A0>)
2025-04-09 14:51:03,035:INFO:Checking exceptions
2025-04-09 14:51:03,035:INFO:Preloading libraries
2025-04-09 14:51:03,035:INFO:Set up data.
2025-04-09 14:51:03,040:INFO:Set up index.
2025-04-09 14:51:03,930:INFO:Initializing predict_model()
2025-04-09 14:51:03,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF9390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:03,931:INFO:Checking exceptions
2025-04-09 14:51:03,931:INFO:Preloading libraries
2025-04-09 14:51:03,931:INFO:Set up data.
2025-04-09 14:51:03,941:INFO:Set up index.
2025-04-09 14:51:04,882:INFO:Initializing predict_model()
2025-04-09 14:51:04,882:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DBF7D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:04,882:INFO:Checking exceptions
2025-04-09 14:51:04,882:INFO:Preloading libraries
2025-04-09 14:51:04,883:INFO:Set up data.
2025-04-09 14:51:04,888:INFO:Set up index.
2025-04-09 14:51:05,741:INFO:Initializing predict_model()
2025-04-09 14:51:05,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD1D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:05,741:INFO:Checking exceptions
2025-04-09 14:51:05,741:INFO:Preloading libraries
2025-04-09 14:51:05,742:INFO:Set up data.
2025-04-09 14:51:05,748:INFO:Set up index.
2025-04-09 14:51:06,648:INFO:Initializing predict_model()
2025-04-09 14:51:06,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD02D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:06,648:INFO:Checking exceptions
2025-04-09 14:51:06,648:INFO:Preloading libraries
2025-04-09 14:51:06,649:INFO:Set up data.
2025-04-09 14:51:06,655:INFO:Set up index.
2025-04-09 14:51:07,503:INFO:Initializing predict_model()
2025-04-09 14:51:07,503:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF81D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:07,503:INFO:Checking exceptions
2025-04-09 14:51:07,504:INFO:Preloading libraries
2025-04-09 14:51:07,504:INFO:Set up data.
2025-04-09 14:51:07,510:INFO:Set up index.
2025-04-09 14:51:08,325:INFO:Initializing predict_model()
2025-04-09 14:51:08,325:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9E007D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:08,325:INFO:Checking exceptions
2025-04-09 14:51:08,325:INFO:Preloading libraries
2025-04-09 14:51:08,326:INFO:Set up data.
2025-04-09 14:51:08,330:INFO:Set up index.
2025-04-09 14:51:09,181:INFO:Initializing predict_model()
2025-04-09 14:51:09,181:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9E02010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:09,182:INFO:Checking exceptions
2025-04-09 14:51:09,182:INFO:Preloading libraries
2025-04-09 14:51:09,182:INFO:Set up data.
2025-04-09 14:51:09,188:INFO:Set up index.
2025-04-09 14:51:10,041:INFO:Initializing predict_model()
2025-04-09 14:51:10,041:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD8290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:10,041:INFO:Checking exceptions
2025-04-09 14:51:10,041:INFO:Preloading libraries
2025-04-09 14:51:10,042:INFO:Set up data.
2025-04-09 14:51:10,049:INFO:Set up index.
2025-04-09 14:51:10,848:INFO:Initializing predict_model()
2025-04-09 14:51:10,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:10,848:INFO:Checking exceptions
2025-04-09 14:51:10,848:INFO:Preloading libraries
2025-04-09 14:51:10,849:INFO:Set up data.
2025-04-09 14:51:10,854:INFO:Set up index.
2025-04-09 14:51:11,691:INFO:Initializing predict_model()
2025-04-09 14:51:11,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEED10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:11,692:INFO:Checking exceptions
2025-04-09 14:51:11,692:INFO:Preloading libraries
2025-04-09 14:51:11,692:INFO:Set up data.
2025-04-09 14:51:11,700:INFO:Set up index.
2025-04-09 14:51:12,521:INFO:Initializing predict_model()
2025-04-09 14:51:12,522:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DDB250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:12,522:INFO:Checking exceptions
2025-04-09 14:51:12,522:INFO:Preloading libraries
2025-04-09 14:51:12,523:INFO:Set up data.
2025-04-09 14:51:12,529:INFO:Set up index.
2025-04-09 14:51:13,458:INFO:Initializing predict_model()
2025-04-09 14:51:13,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DFA910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:13,458:INFO:Checking exceptions
2025-04-09 14:51:13,459:INFO:Preloading libraries
2025-04-09 14:51:13,460:INFO:Set up data.
2025-04-09 14:51:13,466:INFO:Set up index.
2025-04-09 14:51:14,450:INFO:Initializing predict_model()
2025-04-09 14:51:14,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DFA650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:14,451:INFO:Checking exceptions
2025-04-09 14:51:14,451:INFO:Preloading libraries
2025-04-09 14:51:14,452:INFO:Set up data.
2025-04-09 14:51:14,458:INFO:Set up index.
2025-04-09 14:51:15,432:INFO:Initializing predict_model()
2025-04-09 14:51:15,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9E0A690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:15,432:INFO:Checking exceptions
2025-04-09 14:51:15,432:INFO:Preloading libraries
2025-04-09 14:51:15,433:INFO:Set up data.
2025-04-09 14:51:15,438:INFO:Set up index.
2025-04-09 14:51:16,349:INFO:Initializing predict_model()
2025-04-09 14:51:16,350:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9E01750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:16,350:INFO:Checking exceptions
2025-04-09 14:51:16,350:INFO:Preloading libraries
2025-04-09 14:51:16,351:INFO:Set up data.
2025-04-09 14:51:16,356:INFO:Set up index.
2025-04-09 14:51:17,223:INFO:Initializing predict_model()
2025-04-09 14:51:17,223:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DFA610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:17,223:INFO:Checking exceptions
2025-04-09 14:51:17,223:INFO:Preloading libraries
2025-04-09 14:51:17,224:INFO:Set up data.
2025-04-09 14:51:17,228:INFO:Set up index.
2025-04-09 14:51:18,053:INFO:Initializing predict_model()
2025-04-09 14:51:18,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF9AD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:18,053:INFO:Checking exceptions
2025-04-09 14:51:18,053:INFO:Preloading libraries
2025-04-09 14:51:18,054:INFO:Set up data.
2025-04-09 14:51:18,060:INFO:Set up index.
2025-04-09 14:51:18,910:INFO:Initializing predict_model()
2025-04-09 14:51:18,910:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEAED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:18,910:INFO:Checking exceptions
2025-04-09 14:51:18,911:INFO:Preloading libraries
2025-04-09 14:51:18,911:INFO:Set up data.
2025-04-09 14:51:18,917:INFO:Set up index.
2025-04-09 14:51:19,678:INFO:Initializing predict_model()
2025-04-09 14:51:19,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DFBED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:19,678:INFO:Checking exceptions
2025-04-09 14:51:19,679:INFO:Preloading libraries
2025-04-09 14:51:19,679:INFO:Set up data.
2025-04-09 14:51:19,684:INFO:Set up index.
2025-04-09 14:51:20,523:INFO:Initializing predict_model()
2025-04-09 14:51:20,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF9910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:20,523:INFO:Checking exceptions
2025-04-09 14:51:20,523:INFO:Preloading libraries
2025-04-09 14:51:20,524:INFO:Set up data.
2025-04-09 14:51:20,530:INFO:Set up index.
2025-04-09 14:51:21,494:INFO:Initializing predict_model()
2025-04-09 14:51:21,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD1010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:21,494:INFO:Checking exceptions
2025-04-09 14:51:21,494:INFO:Preloading libraries
2025-04-09 14:51:21,495:INFO:Set up data.
2025-04-09 14:51:21,500:INFO:Set up index.
2025-04-09 14:51:22,425:INFO:Initializing predict_model()
2025-04-09 14:51:22,425:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF9350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:22,425:INFO:Checking exceptions
2025-04-09 14:51:22,425:INFO:Preloading libraries
2025-04-09 14:51:22,426:INFO:Set up data.
2025-04-09 14:51:22,431:INFO:Set up index.
2025-04-09 14:51:23,376:INFO:Initializing predict_model()
2025-04-09 14:51:23,376:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DEA190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:23,376:INFO:Checking exceptions
2025-04-09 14:51:23,376:INFO:Preloading libraries
2025-04-09 14:51:23,377:INFO:Set up data.
2025-04-09 14:51:23,383:INFO:Set up index.
2025-04-09 14:51:24,292:INFO:Initializing predict_model()
2025-04-09 14:51:24,292:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DD1A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:24,292:INFO:Checking exceptions
2025-04-09 14:51:24,293:INFO:Preloading libraries
2025-04-09 14:51:24,293:INFO:Set up data.
2025-04-09 14:51:24,298:INFO:Set up index.
2025-04-09 14:51:25,139:INFO:Initializing predict_model()
2025-04-09 14:51:25,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C9DF9890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:25,140:INFO:Checking exceptions
2025-04-09 14:51:25,140:INFO:Preloading libraries
2025-04-09 14:51:25,141:INFO:Set up data.
2025-04-09 14:51:25,147:INFO:Set up index.
2025-04-09 14:51:26,523:INFO:Initializing predict_model()
2025-04-09 14:51:26,524:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000257C588AB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_min', 'Y_min', 'X_max', 'Y_max',
                                             'Confidence', 'Average_Depth_m',
                                             'area'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257BB338CC0>)
2025-04-09 14:51:26,524:INFO:Checking exceptions
2025-04-09 14:51:26,524:INFO:Preloading libraries
2025-04-09 14:51:26,525:INFO:Set up data.
2025-04-09 14:51:26,534:INFO:Set up index.
